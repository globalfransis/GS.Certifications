// <auto-generated />
using System;
using GS.Certifications.Infrastructure.Persistence.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GS.Certifications.Infrastructure.Migrations
{
    [DbContext(typeof(CertificationsDbContext))]
    [Migration("20250516164252_add observaciones DocumentoCargado")]
    partial class addobservacionesDocumentoCargado
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Alicuotas.Alicuota", b =>
                {
                    b.Property<short>("Idm")
                        .HasColumnType("smallint");

                    b.Property<string>("CodigoAFIP")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("CodigoAFIP")
                        .IsUnique()
                        .HasFilter("[CodigoAFIP] IS NOT NULL");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("ali_Alicuotas", (string)null);

                    b.HasData(
                        new
                        {
                            Idm = (short)1,
                            CodigoAFIP = "0003",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Valor = 0.00m
                        },
                        new
                        {
                            Idm = (short)2,
                            CodigoAFIP = "0004",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Valor = 10.50m
                        },
                        new
                        {
                            Idm = (short)3,
                            CodigoAFIP = "0005",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Valor = 21.00m
                        },
                        new
                        {
                            Idm = (short)4,
                            CodigoAFIP = "0006",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Valor = 27.00m
                        },
                        new
                        {
                            Idm = (short)5,
                            CodigoAFIP = "0008",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Valor = 5.00m
                        },
                        new
                        {
                            Idm = (short)6,
                            CodigoAFIP = "0009",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Valor = 2.50m
                        });
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Certificaciones.Certificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Activa")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<short>("TipoEmpresaPortalId")
                        .HasColumnType("smallint");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Session");

                    b.HasIndex("TipoEmpresaPortalId");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("cer_Certificaciones", (string)null);
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Certificaciones.Documentos.DocumentoCargado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ArchivoURL")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("DocumentoRequeridoId")
                        .HasColumnType("int");

                    b.Property<short>("EstadoId")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("FechaDesde")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaHasta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaSubida")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<int>("SolicitudId")
                        .HasColumnType("int");

                    b.Property<long?>("ValidadoPorId")
                        .HasColumnType("bigint");

                    b.Property<int?>("Version")
                        .HasColumnType("int");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DocumentoRequeridoId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("Session");

                    b.HasIndex("SolicitudId");

                    b.HasIndex("ValidadoPorId");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("doc_DocumentosCargados", (string)null);
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Certificaciones.Documentos.DocumentoEstado", b =>
                {
                    b.Property<short>("Idm")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("doc_DocumentoEstados", (string)null);

                    b.HasData(
                        new
                        {
                            Idm = (short)1,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Pendiente",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)2,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Validado",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)3,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Rechazado",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)4,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Vencido",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)5,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Presentado",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        });
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Certificaciones.Documentos.DocumentoRequerido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CertificacionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Obligatorio")
                        .HasColumnType("bit");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("SobreescribeVigencia")
                        .HasColumnType("bit");

                    b.Property<short>("TipoId")
                        .HasColumnType("smallint");

                    b.Property<int?>("VigenciaDiasCustom")
                        .HasColumnType("int");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CertificacionId");

                    b.HasIndex("Session");

                    b.HasIndex("TipoId");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("doc_DocumentosRequeridos", (string)null);
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Certificaciones.Documentos.TipoDocumento", b =>
                {
                    b.Property<short>("Idm")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("RequiereValidacion")
                        .HasColumnType("bit");

                    b.Property<bool>("RequiereVigencia")
                        .HasColumnType("bit");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("doc_TipoDocumentos", (string)null);
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Certificaciones.SolicitudCertificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<short>("CantidadAprobaciones")
                        .HasColumnType("smallint");

                    b.Property<int>("CertificacionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<short>("EstadoId")
                        .HasColumnType("smallint");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<int>("SocioId")
                        .HasColumnType("int");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CertificacionId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("Session");

                    b.HasIndex("SocioId");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("cer_SolicitudCertificaciones", (string)null);
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Certificaciones.SolicitudCertificacionEstado", b =>
                {
                    b.Property<short>("Idm")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("cer_SolicitudCertificacionEstados", (string)null);

                    b.HasData(
                        new
                        {
                            Idm = (short)1,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Pendiente",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)2,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "En proceso",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)3,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Aprobada",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)4,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Rechazada",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)5,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Borrador",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        });
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Comprobantes.CategoriaTipo", b =>
                {
                    b.Property<short>("Idm")
                        .HasColumnType("smallint");

                    b.Property<string>("CodigoArca")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CodigoExterno")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("com_CategoriaTipos", (string)null);

                    b.HasData(
                        new
                        {
                            Idm = (short)1,
                            CodigoArca = "1",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Responsable Inscripto",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)2,
                            CodigoArca = "2",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Responsable no Inscripto",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)3,
                            CodigoArca = "3",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "No Responsable",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)4,
                            CodigoArca = "4",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Sujeto Exento",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)5,
                            CodigoArca = "5",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Consumidor Final",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)6,
                            CodigoArca = "6",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Responsable Monotributo",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)7,
                            CodigoArca = "7",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Sujeto no Categorizado",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)8,
                            CodigoArca = "8",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Importador del Exterior",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)9,
                            CodigoArca = "9",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Cliente del Exterior",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)10,
                            CodigoArca = "10",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Liberado Ley Nº 19.740",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)11,
                            CodigoArca = "11",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Responsable inscripto Agente de percepción",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        });
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Comprobantes.CodigoAutorizacionTipo", b =>
                {
                    b.Property<short>("Idm")
                        .HasColumnType("smallint");

                    b.Property<string>("CodigoArca")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CodigoExterno")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("com_CodigoAutorizacionTipos", (string)null);

                    b.HasData(
                        new
                        {
                            Idm = (short)1,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "CAE",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)2,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "CAEA",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)3,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "CAI",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        });
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Comprobantes.Comprobante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<short?>("CategoriaTipoEmisorId")
                        .HasColumnType("smallint");

                    b.Property<short?>("CategoriaTipoReceptorId")
                        .HasColumnType("smallint");

                    b.Property<string>("CodigoAutorizacion")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("CodigoHES")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Comentarios")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long?>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<int>("ComprobanteEstadoId")
                        .HasColumnType("int");

                    b.Property<short?>("ComprobanteTipoId")
                        .HasColumnType("smallint");

                    b.Property<short?>("CondicionVentaId")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("Cotizacion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DomicilioPro")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<short?>("EstadoValidacionARCAId")
                        .HasColumnType("smallint");

                    b.Property<short?>("EstadoValidacionARCAQRId")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("FechaEmision")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRechazo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistracion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaVencimientoCodigoAutorizacion")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ImporteBonificacion")
                        .HasColumnType("money");

                    b.Property<decimal>("ImporteIVA")
                        .HasColumnType("money");

                    b.Property<decimal>("ImporteImpuestosInternos")
                        .HasColumnType("money");

                    b.Property<decimal>("ImporteNeto")
                        .HasColumnType("money");

                    b.Property<decimal>("ImporteOtrosTributosProv")
                        .HasColumnType("money");

                    b.Property<decimal>("ImportePercepcionIIBB")
                        .HasColumnType("money");

                    b.Property<decimal>("ImportePercepcionIVA")
                        .HasColumnType("money");

                    b.Property<decimal>("ImportePercepcionMunicipal")
                        .HasColumnType("money");

                    b.Property<decimal>("ImporteTotal")
                        .HasColumnType("money");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Letra")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("MonedaId")
                        .HasColumnType("bigint");

                    b.Property<string>("MotivoRechazo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NombreArchivo")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("NroIdentificacionFiscalCompany")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NroIdentificacionFiscalPro")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NroOrdenCompra")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NroRemito")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionesARCA")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ObservacionesARCAQR")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<short?>("OrigenId")
                        .HasColumnType("smallint");

                    b.Property<int?>("PeriodoId")
                        .HasColumnType("int");

                    b.Property<short?>("PropietarioActualId")
                        .HasColumnType("smallint");

                    b.Property<int>("PuntoVenta")
                        .HasColumnType("int");

                    b.Property<string>("QRValor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<short?>("TipoCodigoAutorizacionId")
                        .HasColumnType("smallint");

                    b.Property<string>("UsuarioRechazo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("ValidacionQR")
                        .HasColumnType("bit");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaTipoEmisorId");

                    b.HasIndex("CategoriaTipoReceptorId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ComprobanteEstadoId");

                    b.HasIndex("ComprobanteTipoId");

                    b.HasIndex("CondicionVentaId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("EstadoValidacionARCAId");

                    b.HasIndex("EstadoValidacionARCAQRId");

                    b.HasIndex("MonedaId");

                    b.HasIndex("OrigenId");

                    b.HasIndex("PeriodoId");

                    b.HasIndex("PropietarioActualId");

                    b.HasIndex("Session");

                    b.HasIndex("TipoCodigoAutorizacionId");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("com_Comprobantes", (string)null);
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Comprobantes.ComprobanteDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Alicuota")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("ComprobanteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Detalle")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<bool>("Exento")
                        .HasColumnType("bit");

                    b.Property<decimal>("ImporteBonificacion")
                        .HasColumnType("money");

                    b.Property<decimal>("ImporteIVA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("OrdenCompraId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("money");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("money");

                    b.Property<short?>("UnidadMedidaId")
                        .HasColumnType("smallint");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComprobanteId");

                    b.HasIndex("Session");

                    b.HasIndex("UnidadMedidaId");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("com_ComprobanteDetalles", (string)null);
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Comprobantes.ComprobanteEstado", b =>
                {
                    b.Property<int>("Idm")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Valor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("com_ComprobanteEstados", (string)null);

                    b.HasData(
                        new
                        {
                            Idm = 1,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Archivo subido",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Nombre = "Archivo subido",
                            Valor = "100"
                        },
                        new
                        {
                            Idm = 2,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "En proceso de carga",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Nombre = "En proceso de carga",
                            Valor = "200"
                        },
                        new
                        {
                            Idm = 3,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Registro con errores ARCA",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Nombre = "Registro con errores ARCA",
                            Valor = "300"
                        },
                        new
                        {
                            Idm = 4,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Registro confirmado",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Nombre = "Registro confirmado",
                            Valor = "400"
                        },
                        new
                        {
                            Idm = 5,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Acuse Recibo Cliente",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Nombre = "Acuse Recibo Cliente",
                            Valor = "500"
                        },
                        new
                        {
                            Idm = 6,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Aprobada Cliente",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Nombre = "Aprobada Cliente",
                            Valor = "600"
                        },
                        new
                        {
                            Idm = 7,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Rechazada Cliente",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Nombre = "Rechazada Cliente",
                            Valor = "700"
                        },
                        new
                        {
                            Idm = 8,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Borrador",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Nombre = "Borrador",
                            Valor = "800"
                        },
                        new
                        {
                            Idm = 9,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Autorizado",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Nombre = "Autorizado",
                            Valor = "900"
                        });
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Comprobantes.ComprobanteTipo", b =>
                {
                    b.Property<short>("Idm")
                        .HasColumnType("smallint");

                    b.Property<string>("CodigoArca")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CodigoExterno")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DescAbreviada")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Letra")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NombreComprobante")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<short>("TipoOperacion")
                        .HasColumnType("smallint");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("com_ComprobanteTipos", (string)null);

                    b.HasData(
                        new
                        {
                            Idm = (short)1,
                            CodigoArca = "1",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "FC-A",
                            Descripcion = "Factura A",
                            IsDeleted = false,
                            Letra = "A",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)2,
                            CodigoArca = "2",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "ND-A",
                            Descripcion = "Nota de Débito A",
                            IsDeleted = false,
                            Letra = "A",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)3,
                            CodigoArca = "3",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "NC-A",
                            Descripcion = "Nota de Crédito A",
                            IsDeleted = false,
                            Letra = "A",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)-1
                        },
                        new
                        {
                            Idm = (short)4,
                            CodigoArca = "4",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "RC-A",
                            Descripcion = "Recibo A",
                            IsDeleted = false,
                            Letra = "A",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)5,
                            CodigoArca = "5",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "NV-A",
                            Descripcion = "Nota de venta al contado A",
                            IsDeleted = false,
                            Letra = "A",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)6,
                            CodigoArca = "6",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "FC-B",
                            Descripcion = "Factura B",
                            IsDeleted = false,
                            Letra = "B",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)7,
                            CodigoArca = "7",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "ND-B",
                            Descripcion = "Nota de Débito B",
                            IsDeleted = false,
                            Letra = "B",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)8,
                            CodigoArca = "8",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "NC-B",
                            Descripcion = "Nota de Crédito B",
                            IsDeleted = false,
                            Letra = "B",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)-1
                        },
                        new
                        {
                            Idm = (short)9,
                            CodigoArca = "9",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "RC-B",
                            Descripcion = "Recibo B",
                            IsDeleted = false,
                            Letra = "B",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)10,
                            CodigoArca = "10",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "NV-B",
                            Descripcion = "Nota de venta al contado B",
                            IsDeleted = false,
                            Letra = "B",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)11,
                            CodigoArca = "39",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Comprobante A que cumple con la R.G. N° 3419",
                            IsDeleted = false,
                            Letra = "A",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)12,
                            CodigoArca = "40",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Comprobante B que cumple con la R.G. N° 3419",
                            IsDeleted = false,
                            Letra = "B",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)13,
                            CodigoArca = "60",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Cuenta de venta y líquido producto A",
                            IsDeleted = false,
                            Letra = "A",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)14,
                            CodigoArca = "61",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Cuenta de venta y líquido producto B",
                            IsDeleted = false,
                            Letra = "B",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)15,
                            CodigoArca = "63",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "LG-A",
                            Descripcion = "Liquidación A",
                            IsDeleted = false,
                            Letra = "A",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)16,
                            CodigoArca = "64",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "LG-B",
                            Descripcion = "Liquidación B",
                            IsDeleted = false,
                            Letra = "B",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)17,
                            CodigoArca = "11",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "FC-C",
                            Descripcion = "Factura C",
                            IsDeleted = false,
                            Letra = "C",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)18,
                            CodigoArca = "14",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "DA-A",
                            Descripcion = "Documento aduanero",
                            IsDeleted = false,
                            Letra = "A",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)19,
                            CodigoArca = "15",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "RC-C",
                            Descripcion = "Recibo C",
                            IsDeleted = false,
                            Letra = "C",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)20,
                            CodigoArca = "16",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Nota de venta al contado C",
                            IsDeleted = false,
                            Letra = "C",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)21,
                            CodigoArca = "19",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "FC-E",
                            Descripcion = "Factura E",
                            IsDeleted = false,
                            Letra = "E",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)22,
                            CodigoArca = "20",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "ND-E",
                            Descripcion = "Nota de Débito E",
                            IsDeleted = false,
                            Letra = "E",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)23,
                            CodigoArca = "21",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "NC-E",
                            Descripcion = "Nota de Crédito E",
                            IsDeleted = false,
                            Letra = "E",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)-1
                        },
                        new
                        {
                            Idm = (short)24,
                            CodigoArca = "22",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Facturas - Permiso Export simplificado - Dto.855/97",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)25,
                            CodigoArca = "30",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Comprobantes de compra de bienes usados",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)26,
                            CodigoArca = "34",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Comprob A del Anexo I, Apartado A, inc.f), RG 1415",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)27,
                            CodigoArca = "35",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Comprob B del Anexo I, Apartado A, inc.f), RG 1415",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)28,
                            CodigoArca = "36",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Comprob C del Anexo I, Apartado A, inc.f), RG 1415",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)29,
                            CodigoArca = "37",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Notas de Débito o doc equiv que cumplan con la RG 1415",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)30,
                            CodigoArca = "38",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Notas de Crédito o doc equiv que cumplan con la RG 1415",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)-1
                        },
                        new
                        {
                            Idm = (short)31,
                            CodigoArca = "39",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Otros comprob A que cumplan con la R.G 1415",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)32,
                            CodigoArca = "40",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Otros comprob B que cumplan con la R.G 1415",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)33,
                            CodigoArca = "41",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Otros comprob C que cumplan con la R.G 1415",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)34,
                            CodigoArca = "51",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "FC-M",
                            Descripcion = "Facturas M",
                            IsDeleted = false,
                            Letra = "M",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)35,
                            CodigoArca = "52",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "ND-M",
                            Descripcion = "Notas de Débito M",
                            IsDeleted = false,
                            Letra = "M",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)36,
                            CodigoArca = "53",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "NC-M",
                            Descripcion = "Notas de Crédito M",
                            IsDeleted = false,
                            Letra = "M",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)-1
                        },
                        new
                        {
                            Idm = (short)37,
                            CodigoArca = "54",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "RC-M",
                            Descripcion = "Recibos M",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)38,
                            CodigoArca = "55",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "NV-M",
                            Descripcion = "Notas de Venta al contado M",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)39,
                            CodigoArca = "56",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Comprobantes M del Anexo I, Ap A, inc.f), RG 1415",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)40,
                            CodigoArca = "57",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Otros comprob M que cumplan con la RG 1415",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)41,
                            CodigoArca = "58",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Cuenta de Venta y Líquido producto M",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)42,
                            CodigoArca = "59",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "LG-M",
                            Descripcion = "Liquidación M",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)43,
                            CodigoArca = "62",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "LIPC",
                            Descripcion = "Cuenta de Venta y Líquido producto C",
                            IsDeleted = false,
                            Letra = "C",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)44,
                            CodigoArca = "65",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "LG-C",
                            Descripcion = "Liquidación C",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)45,
                            CodigoArca = "80",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Comprobante diario de cierre (zeta)",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)46,
                            CodigoArca = "81",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "TF-A",
                            Descripcion = "Tique-Factura A",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)47,
                            CodigoArca = "82",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "TF-B",
                            Descripcion = "Tique-Factura B",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)48,
                            CodigoArca = "83",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "T",
                            Descripcion = "Tique",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)49,
                            CodigoArca = "84",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Comprobante/Factura de servicios públicos",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)50,
                            CodigoArca = "85",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Nota de Crédito - servicios públicos",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)-1
                        },
                        new
                        {
                            Idm = (short)51,
                            CodigoArca = "86",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Nota de Débito - servicios públicos",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)52,
                            CodigoArca = "87",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Otros comp - servicios del exterior",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)53,
                            CodigoArca = "89",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Otros comp - doc exceptuados - Nota de Débito",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)54,
                            CodigoArca = "90",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Otros comp - doc exceptuados - Nota de Crédito",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)-1
                        },
                        new
                        {
                            Idm = (short)55,
                            CodigoArca = "92",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Aj contables que incrementan el débito fiscal",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)56,
                            CodigoArca = "93",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Aj contables que disminuyen el débito fiscal",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)-1
                        },
                        new
                        {
                            Idm = (short)57,
                            CodigoArca = "94",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Aj contables que incrementan el crédito fiscal",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)58,
                            CodigoArca = "95",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Aj contables que disminuyen el crédito fiscal",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)-1
                        },
                        new
                        {
                            Idm = (short)59,
                            CodigoArca = "13",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "NC-C",
                            Descripcion = "Notas de Crédito C",
                            IsDeleted = false,
                            Letra = "C",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)-1
                        },
                        new
                        {
                            Idm = (short)60,
                            CodigoArca = "12",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "ND-C",
                            Descripcion = "Notas de Débito C",
                            IsDeleted = false,
                            Letra = "C",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)61,
                            CodigoArca = "98",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "NCCA",
                            Descripcion = "Notas de Crédito sobre CDD A",
                            IsDeleted = false,
                            Letra = "X",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)0
                        },
                        new
                        {
                            Idm = (short)62,
                            CodigoArca = "99",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "NCCB",
                            Descripcion = "Notas de Crédito sobre CDD B",
                            IsDeleted = false,
                            Letra = "X",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)0
                        },
                        new
                        {
                            Idm = (short)63,
                            CodigoArca = "199",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "RECI",
                            Descripcion = "Recibo",
                            IsDeleted = false,
                            Letra = "X",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)0
                        },
                        new
                        {
                            Idm = (short)64,
                            CodigoArca = "00",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "ACCOR",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)0
                        },
                        new
                        {
                            Idm = (short)65,
                            CodigoArca = "91",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "RMTO",
                            Descripcion = "Remito",
                            IsDeleted = false,
                            Letra = "R",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)0
                        },
                        new
                        {
                            Idm = (short)66,
                            CodigoArca = "201",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "FCEA",
                            Descripcion = "FCE Factura MiPyMEs A",
                            IsDeleted = false,
                            Letra = "A",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)67,
                            CodigoArca = "202",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "NDEA",
                            Descripcion = "FCE Nota de Débito MiPyMEs A",
                            IsDeleted = false,
                            Letra = "A",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)68,
                            CodigoArca = "203",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "NCEA",
                            Descripcion = "FCE Nota de Crédito MiPyMEs A",
                            IsDeleted = false,
                            Letra = "A",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)-1
                        },
                        new
                        {
                            Idm = (short)69,
                            CodigoArca = "206",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "FCEB",
                            Descripcion = "FCE Factura MiPyMEs B",
                            IsDeleted = false,
                            Letra = "B",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)70,
                            CodigoArca = "207",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "NDEB",
                            Descripcion = "FCE Nota de Débito MiPyMEs B",
                            IsDeleted = false,
                            Letra = "B",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)71,
                            CodigoArca = "208",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "NCEB",
                            Descripcion = "FCE Nota de Crédito MiPyMEs B",
                            IsDeleted = false,
                            Letra = "B",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)-1
                        },
                        new
                        {
                            Idm = (short)72,
                            CodigoArca = "211",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "FCEC",
                            Descripcion = "FCE Factura MiPyMEs C",
                            IsDeleted = false,
                            Letra = "C",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)73,
                            CodigoArca = "212",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "NDEC",
                            Descripcion = "FCE Nota de Dédito MiPyMEs C",
                            IsDeleted = false,
                            Letra = "C",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)74,
                            CodigoArca = "213",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "NCEC",
                            Descripcion = "FCE Nota de Crédito MiPyMEs C",
                            IsDeleted = false,
                            Letra = "C",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)-1
                        },
                        new
                        {
                            Idm = (short)75,
                            CodigoArca = "501",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "DCF+",
                            Descripcion = "Dif Cambio F (+)",
                            IsDeleted = false,
                            Letra = "X",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)76,
                            CodigoArca = "502",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "DCF-",
                            Descripcion = "Dif Cambio F (-)",
                            IsDeleted = false,
                            Letra = "X",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)-1
                        },
                        new
                        {
                            Idm = (short)77,
                            CodigoArca = "503",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "DCR+",
                            Descripcion = "Dif Cambio R (+)",
                            IsDeleted = false,
                            Letra = "X",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)1
                        },
                        new
                        {
                            Idm = (short)78,
                            CodigoArca = "504",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "DCR-",
                            Descripcion = "Dif Cambio R (-)",
                            IsDeleted = false,
                            Letra = "X",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)-1
                        },
                        new
                        {
                            Idm = (short)79,
                            CodigoArca = "601",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "EDCC",
                            Descripcion = "Estado de Cuenta",
                            IsDeleted = false,
                            Letra = "X",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)0
                        },
                        new
                        {
                            Idm = (short)80,
                            CodigoArca = "200",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "OP",
                            Descripcion = "Orden de Pago",
                            IsDeleted = false,
                            Letra = "X",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)0
                        },
                        new
                        {
                            Idm = (short)81,
                            CodigoArca = "901",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "CERT",
                            Descripcion = "CERTIFICADO",
                            IsDeleted = false,
                            Letra = "X",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)0
                        },
                        new
                        {
                            Idm = (short)82,
                            CodigoArca = "902",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DescAbreviada = "COTE",
                            Descripcion = "Cotización Etiquetas",
                            IsDeleted = false,
                            Letra = "X",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            TipoOperacion = (short)0
                        });
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Comprobantes.CondicionVenta", b =>
                {
                    b.Property<short>("Idm")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("com_CondicionVentas", (string)null);

                    b.HasData(
                        new
                        {
                            Idm = (short)1,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Contado",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)2,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Cuenta Corriente",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)3,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Tarjeta de Crédito",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)4,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Tarjeta de Débito",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)5,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Transferencia Bancaria",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)6,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Cheque",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)7,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Otro",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        });
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Comprobantes.EstadoValidacionARCA", b =>
                {
                    b.Property<short>("Idm")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("com_EstadosValidacionARCA", (string)null);

                    b.HasData(
                        new
                        {
                            Idm = (short)1,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Validada",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)2,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Rechazada",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)3,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Error validación",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)4,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "No validada",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        });
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Comprobantes.Origen", b =>
                {
                    b.Property<short>("Idm")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("com_Origenes", (string)null);

                    b.HasData(
                        new
                        {
                            Idm = (short)1,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "PROVEEDOR",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)2,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "BACKOFFICE",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)3,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "CORREO",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        });
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Comprobantes.TipoOrdenC", b =>
                {
                    b.Property<short>("Idm")
                        .HasColumnType("smallint");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("DetalleItems")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("int_TipoOrdenC", (string)null);
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Comprobantes.UnidadMedida", b =>
                {
                    b.Property<short>("Idm")
                        .HasColumnType("smallint");

                    b.Property<string>("CodigoAFIP")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CodigoARBA")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("com_UnidadMedidas", (string)null);

                    b.HasData(
                        new
                        {
                            Idm = (short)1,
                            CodigoAFIP = "mm",
                            CodigoARBA = "mm",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Milímetro",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)2,
                            CodigoAFIP = "cm",
                            CodigoARBA = "cm",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Centímetro",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)3,
                            CodigoAFIP = "m",
                            CodigoARBA = "m",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Metro",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)4,
                            CodigoAFIP = "mm2",
                            CodigoARBA = "mm2",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Milímetro cuadrado",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)5,
                            CodigoAFIP = "cm2",
                            CodigoARBA = "cm2",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Centímetro cuadrado",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)6,
                            CodigoAFIP = "m2",
                            CodigoARBA = "m2",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Metro cuadrado",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)7,
                            CodigoAFIP = "g",
                            CodigoARBA = "g",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Gramo",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)8,
                            CodigoAFIP = "Kg",
                            CodigoARBA = "Kg",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Kilogramo",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)9,
                            CodigoAFIP = "%",
                            CodigoARBA = "%",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Porcentaje",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)10,
                            CodigoAFIP = "seg",
                            CodigoARBA = "seg",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Segundo",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)11,
                            CodigoAFIP = "min",
                            CodigoARBA = "min",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Minuto",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)12,
                            CodigoAFIP = "hora",
                            CodigoARBA = "hora",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Hora",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)13,
                            CodigoAFIP = "Un.",
                            CodigoARBA = "Un.",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Unidad",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)14,
                            CodigoAFIP = "Millar",
                            CodigoARBA = "Millar",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Millar",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)15,
                            CodigoAFIP = "Litros",
                            CodigoARBA = "Litros",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Litro",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)18,
                            CodigoAFIP = "cm3",
                            CodigoARBA = "cm3",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Centímetro cúbico",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)19,
                            CodigoAFIP = "m3",
                            CodigoARBA = "m3",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Metro cúbico",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)20,
                            CodigoAFIP = "par",
                            CodigoARBA = "par",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Par",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)21,
                            CodigoAFIP = "una",
                            CodigoARBA = "una",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Una",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)22,
                            CodigoAFIP = "tonelada",
                            CodigoARBA = "tonelada",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Tonelada",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        });
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.ConceptosGastosTipos.ConceptoGastoTipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("ConceptoContableNombre")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ConceptoContableValor")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("com_ConceptosGastosTipos", (string)null);
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Empresas.Alicuotas.EmpresaAlicuota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<short>("AlicuotaIdm")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpresaPortalId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Session")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("__MigCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlicuotaIdm");

                    b.HasIndex("EmpresaPortalId");

                    b.ToTable("EmpresasAlicuotas");
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Empresas.CompanyExtra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CiudadDescripcion")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<long?>("CiudadId")
                        .HasColumnType("bigint");

                    b.Property<string>("CodigoPostal")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ContactoAlternativo")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CuentaBancaria")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("EmailAlternativo")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("EmailPrincipal")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("IdMoneda")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("IdentificadorTributario")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NumeroIngresosBrutos")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<long>("PaisId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProvinciaId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("TelefonoAlternativo")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("TelefonoPrincipal")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<short?>("TipoCuentaId")
                        .HasColumnType("smallint");

                    b.Property<short>("TipoResponsableId")
                        .HasColumnType("smallint");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CiudadId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("PaisId");

                    b.HasIndex("ProvinciaId");

                    b.HasIndex("Session");

                    b.HasIndex("TipoCuentaId");

                    b.HasIndex("TipoResponsableId");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("emp_CompanyExtras", (string)null);
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Empresas.ConceptosGastosTipos.EmpresaConceptoGastoTipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ConceptoGastoTipoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EmpresaPortalId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConceptoGastoTipoId");

                    b.HasIndex("EmpresaPortalId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("emp_EmpresasPortalesGastosTipos", (string)null);
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Empresas.EmpresaCurrency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("CurrencyId")
                        .HasColumnType("bigint");

                    b.Property<int>("EmpresaPortalId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("MonedaPorDefecto")
                        .HasColumnType("bit");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("EmpresaPortalId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("emp_EmpresaCurrency", (string)null);
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Empresas.EmpresaPortal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CiudadDescripcion")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<long?>("CiudadId")
                        .HasColumnType("bigint");

                    b.Property<string>("CodigoPostal")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CodigoProveedor")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Confirmado")
                        .HasColumnType("bit");

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ContactoAlternativo")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CuentaBancaria")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DescripcionEmpresa")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("EmailAlternativo")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("EmailPrincipal")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("GranContribuyente")
                        .HasColumnType("bit");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IdentificadorTributario")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NombreFantasia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NumeroIngresosBrutos")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<string>("PaginaWeb")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("PaisId")
                        .HasColumnType("bigint");

                    b.Property<string>("ProductosServiciosOfrecidos")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long?>("ProvinciaId")
                        .HasColumnType("bigint");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RedesSociales")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ReferenciasComerciales")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("TelefonoAlternativo")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("TelefonoPrincipal")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<short?>("TipoCuentaId")
                        .HasColumnType("smallint");

                    b.Property<short?>("TipoId")
                        .HasColumnType("smallint");

                    b.Property<short>("TipoResponsableId")
                        .HasColumnType("smallint");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CiudadId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("PaisId");

                    b.HasIndex("ProvinciaId");

                    b.HasIndex("Session");

                    b.HasIndex("TipoCuentaId");

                    b.HasIndex("TipoId");

                    b.HasIndex("TipoResponsableId");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("emp_EmpresasPortales", (string)null);
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Empresas.ModosLecturas.EmpresaModoLectura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpresaPortalId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("ModoLecturaIdm")
                        .HasColumnType("smallint");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Session")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("__MigCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaPortalId");

                    b.HasIndex("ModoLecturaIdm");

                    b.ToTable("EmpresasModosLecturas");
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Empresas.OrdenesCompras.EmpresaOrdenCompraTipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EmpresaPortalId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("OrdenCompraTipoId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaPortalId");

                    b.HasIndex("OrdenCompraTipoId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("emp_EmpresasPortalesDocsComprasTipos", (string)null);
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Empresas.Roles.EmpresaRol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EmpresaPortalId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<short>("RolTipoId")
                        .HasColumnType("smallint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaPortalId");

                    b.HasIndex("RolTipoId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("emp_EmpresaRoles", (string)null);
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Empresas.RolTipo", b =>
                {
                    b.Property<short>("Idm")
                        .HasColumnType("smallint");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("emp_RolTipos", (string)null);

                    b.HasData(
                        new
                        {
                            Idm = (short)1,
                            Codigo = "PROV",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Proveedor",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)2,
                            Codigo = "CONT",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Contratista",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)3,
                            Codigo = "PCLI",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Cliente",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        });
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Empresas.TipoCuenta", b =>
                {
                    b.Property<short>("Idm")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("emp_TipoCuentas", (string)null);

                    b.HasData(
                        new
                        {
                            Idm = (short)1,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Cuenta básica para depósitos y retiros diarios.",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Nombre = "Cuenta Corriente"
                        },
                        new
                        {
                            Idm = (short)2,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Cuenta para ahorrar con disponibilidad inmediata.",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Nombre = "Caja de Ahorro"
                        },
                        new
                        {
                            Idm = (short)3,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Cuenta para recibir el salario de los empleados.",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Nombre = "Cuenta Sueldo"
                        },
                        new
                        {
                            Idm = (short)4,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Cuenta para invertir en diferentes instrumentos financieros.",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Nombre = "Cuenta de Inversión"
                        },
                        new
                        {
                            Idm = (short)5,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Cuenta para fines específicos, como el pago de impuestos.",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Nombre = "Cuenta Especial"
                        });
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Empresas.TipoEmpresaPortal", b =>
                {
                    b.Property<short>("Idm")
                        .HasColumnType("smallint");

                    b.Property<bool>("Activa")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("com_TipoEmpresasPortales", (string)null);
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Impuestos.Impuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<short?>("AlicuotaId")
                        .HasColumnType("smallint");

                    b.Property<long?>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<long?>("ProvinciaId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<short?>("TipoId")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlicuotaId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ProvinciaId");

                    b.HasIndex("Session");

                    b.HasIndex("TipoId");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("com_Impuestos", (string)null);
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Impuestos.ImpuestoDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Alicuota")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ComprobanteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<decimal>("ImporteTotal")
                        .HasColumnType("money");

                    b.Property<int>("ImpuestoId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComprobanteId");

                    b.HasIndex("ImpuestoId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("com_ImpuestoDetalles", (string)null);
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Impuestos.ImpuestoTipo", b =>
                {
                    b.Property<short>("Idm")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("General")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Valor")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("com_ImpuestoTipos", (string)null);

                    b.HasData(
                        new
                        {
                            Idm = (short)1,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Impuesto al valor agregado",
                            General = true,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Valor = "IVA"
                        },
                        new
                        {
                            Idm = (short)2,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Impuestos internos",
                            General = false,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Valor = "INT"
                        },
                        new
                        {
                            Idm = (short)3,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Impuestos provinciales",
                            General = false,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Valor = "PROV"
                        });
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.MailProcessors.ComprobanteEMailExtension", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("ComprobanteGuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmailFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("EmailReceivedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("EmailSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpresaPortalGuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NombreArchivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProcesoId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("StatusCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("mpc_ComprobanteEMailExtensiones", (string)null);
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.MailProcessors.IntegracionFacturaPorCorreo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Actvive")
                        .HasColumnType("bit");

                    b.Property<bool>("AutoCreateEmpresaPortal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientSecret")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MailFolder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailsTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("SubjectKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("mpc_IntegracionesFacturaPorCorreo", (string)null);
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.MailProcessors.IntegracionFacturaPorCorreoDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Actvive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EmpresaPortalId")
                        .HasColumnType("int");

                    b.Property<int>("IntegracionFacturaPorCorreoId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MailsFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("SubjectKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaPortalId");

                    b.HasIndex("IntegracionFacturaPorCorreoId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("mpc_IntegracionFacturaPorCorreoDetalles", (string)null);
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.ModosLecturas.ModoLectura", b =>
                {
                    b.Property<short>("Idm")
                        .HasColumnType("smallint");

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("mlr_ModosLecturas", (string)null);

                    b.HasData(
                        new
                        {
                            Idm = (short)1,
                            Codigo = "QRC",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "QR - Cabecera",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)2,
                            Codigo = "OCRD",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "OCR - Detalle",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)3,
                            Codigo = "OCRI",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "OCR - Impuestos",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)4,
                            Codigo = "OCRC",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "OCR - Cabecera",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)5,
                            Codigo = "MAN",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Manual (no se usa IA)",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        });
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.OrdenesCompras.GrupoOrdenCompraTipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("GrupoId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("OrdenCompraTipoId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GrupoId");

                    b.HasIndex("OrdenCompraTipoId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("emp_GruposDocsComprasTipos", (string)null);
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.OrdenesCompras.OrdenCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CodigoHES")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CodigoQAD")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("EmpresaPortalId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Importe")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("MonedaId")
                        .HasColumnType("bigint");

                    b.Property<string>("NumeroOrden")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrdenCompraEstadoIdm")
                        .HasColumnType("int");

                    b.Property<short?>("OrdenCompraEstadoIdm1")
                        .HasColumnType("smallint");

                    b.Property<int?>("OrdenCompraTipoId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EmpresaPortalId");

                    b.HasIndex("MonedaId");

                    b.HasIndex("OrdenCompraEstadoIdm1");

                    b.HasIndex("OrdenCompraTipoId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("orc_OrdenesCompras", (string)null);
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.OrdenesCompras.OrdenCompraEstado", b =>
                {
                    b.Property<short>("Idm")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<int>("Valor")
                        .HasColumnType("int");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("orc_OrdenesComprasEstados", (string)null);

                    b.HasData(
                        new
                        {
                            Idm = (short)1,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Generada",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Nombre = "Generada",
                            Valor = 1
                        },
                        new
                        {
                            Idm = (short)2,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Aprobada",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Nombre = "Aprobada",
                            Valor = 2
                        },
                        new
                        {
                            Idm = (short)3,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Anulada",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Nombre = "Anulada",
                            Valor = 3
                        });
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.OrdenesCompras.OrdenCompraTipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("EsAbierta")
                        .HasColumnType("bit");

                    b.Property<bool>("EsRecurrente")
                        .HasColumnType("bit");

                    b.Property<bool>("EsRequerida")
                        .HasColumnType("bit");

                    b.Property<bool>("EsUnica")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("orc_OrdenesComprasTipos", (string)null);
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Percepciones.Percepcion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<long?>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<short?>("PercepcionTipoId")
                        .HasColumnType("smallint");

                    b.Property<long?>("ProvinciaId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("PercepcionTipoId");

                    b.HasIndex("ProvinciaId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("per_Percepciones", (string)null);
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Percepciones.PercepcionCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<short>("PercepcionId")
                        .HasColumnType("smallint");

                    b.Property<int?>("PercepcionId1")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("PercepcionId1");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("com_PercepcionCompanies", (string)null);
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Percepciones.PercepcionDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Alicuota")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ComprobanteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("ImporteTotal")
                        .HasColumnType("money");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("PercepcionId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComprobanteId");

                    b.HasIndex("PercepcionId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("com_PercepcionDetalles", (string)null);
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Percepciones.PercepcionTipo", b =>
                {
                    b.Property<short>("Idm")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("General")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Valor")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("per_PercepcionTipos", (string)null);

                    b.HasData(
                        new
                        {
                            Idm = (short)1,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Percepción de IVA",
                            General = true,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Valor = "IVA"
                        },
                        new
                        {
                            Idm = (short)2,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Percepción de Ingresos Brutoss",
                            General = false,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Valor = "IIBB"
                        },
                        new
                        {
                            Idm = (short)3,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Percepción Municipal",
                            General = false,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Valor = "MUNICIPAL"
                        });
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Periodos.EstadoPeriodo", b =>
                {
                    b.Property<short>("Idm")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("prd_EstadoPeriodos", (string)null);

                    b.HasData(
                        new
                        {
                            Idm = (short)1,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Cerrado",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)2,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Abierto",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)3,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Presentado",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)4,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "No Vigente",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        });
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Periodos.Periodo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Año")
                        .HasColumnType("int");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<short?>("EstadoIdm")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("NumeroPeriodo")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EstadoIdm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("prd_Periodos", (string)null);
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Seguridad.UsuarioEmpresaPortalRol", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<short>("RolTipoId")
                        .HasColumnType("smallint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<long>("UsuarioEmpresaPortalId")
                        .HasColumnType("bigint");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RolTipoId");

                    b.HasIndex("Session");

                    b.HasIndex("UsuarioEmpresaPortalId");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("sec_UsuarioEmpresaPortalRoles", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Alertas.Alerta", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("Activa")
                        .HasColumnType("bit");

                    b.Property<long>("AlertaTipoIdm")
                        .HasColumnType("bigint");

                    b.Property<string>("Asunto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CC")
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)");

                    b.Property<string>("CCO")
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Cuerpo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CuerpoRutaHTML")
                        .IsRequired()
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.Property<short?>("DestinatarioVariableIdm")
                        .HasColumnType("smallint");

                    b.Property<long?>("EstadoIdm")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("FechaHoraDesde")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaHoraHasta")
                        .HasColumnType("datetime2");

                    b.Property<int>("Horas")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Para")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<long?>("UbicacionIdm")
                        .HasColumnType("bigint");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlertaTipoIdm");

                    b.HasIndex("DestinatarioVariableIdm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("ale_Alertas", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Alertas.AlertaConReglaAdicional", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("AlertaId")
                        .HasColumnType("bigint");

                    b.Property<long>("AlertaTipoReglaAdicionalIdm")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlertaId");

                    b.HasIndex("AlertaTipoReglaAdicionalIdm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("ale_AlertaConReglaAdicionales", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Alertas.AlertaEncolada", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("AlertaId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("MaestroId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlertaId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("ale_AlertaEncoladas", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Alertas.AlertaTipo", b =>
                {
                    b.Property<long>("Idm")
                        .HasColumnType("bigint");

                    b.Property<bool>("AceptaDestinatarioVariables")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("ScriptObtencionVariables")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("TablaMaestra")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("ale_AlertaTipos", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Alertas.AlertaTipoCampoVariable", b =>
                {
                    b.Property<long>("Idm")
                        .HasColumnType("bigint");

                    b.Property<long>("AlertaTipoIdm")
                        .HasColumnType("bigint");

                    b.Property<string>("CampoMaestro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DescripcionColoquial")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Explicacion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("ObligatorioEnCuerpo")
                        .HasColumnType("bit");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("TablaMaestra")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("AlertaTipoIdm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("ale_AlertaTipoCampoVariable", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Alertas.AlertaTipoEstado", b =>
                {
                    b.Property<long>("Idm")
                        .HasColumnType("bigint");

                    b.Property<long>("AlertaTipoIdm")
                        .HasColumnType("bigint");

                    b.Property<string>("CampoMaestro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EstadoCampoMaestro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("EstadoId")
                        .HasColumnType("bigint");

                    b.Property<string>("EstadoTablaMaestra")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("AlertaTipoIdm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("ale_AlertaTipoEstados", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Alertas.AlertaTipoReglaAdicional", b =>
                {
                    b.Property<long>("Idm")
                        .HasColumnType("bigint");

                    b.Property<long>("AlertaTipoIdm")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Explicacion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("ScriptReglaAdicional")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("AlertaTipoIdm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("ale_AlertaTipoReglaAdicionales", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Alertas.AlertaTipoUbicacion", b =>
                {
                    b.Property<short>("Idm")
                        .HasColumnType("smallint");

                    b.Property<long>("AlertaTipoIdm")
                        .HasColumnType("bigint");

                    b.Property<string>("CampoMaestro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<long>("UbicacionId")
                        .HasColumnType("bigint");

                    b.Property<string>("UbicacionTablaMaestra")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("ale_AlertaTipoUbicaciones", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Alertas.DestinatarioVariable", b =>
                {
                    b.Property<short>("Idm")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("ale_DestinatarioVariables", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Entities.Auditing.SessionLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("CreatedByCompanySwitch")
                        .HasColumnType("bit");

                    b.Property<bool>("EndedByCleanUp")
                        .HasColumnType("bit");

                    b.Property<bool>("EndedByKill")
                        .HasColumnType("bit");

                    b.Property<bool>("EndedByLogout")
                        .HasColumnType("bit");

                    b.Property<bool>("EndedByTimeOut")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LoginDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LogoutDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("SessionGuid")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UserLogin")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Session");

                    b.HasIndex("SessionGuid");

                    b.HasIndex("UserLogin");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("aud_Sessions", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Entities.Companies.Company", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("TaxId")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("cny_Company", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 39L,
                            BusinessName = "Globalsis S.R.L.",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Globalsis S.R.L.",
                            Number = 1,
                            OrganizationId = 39L,
                            TaxId = "30707466967"
                        });
                });

            modelBuilder.Entity("GSF.Domain.Entities.Companies.CompanyCurrency", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("CurrencyId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSalesDefault")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("cny_CompanyCurrencies", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CompanyId = 39L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            CurrencyId = 1L,
                            IsDeleted = false,
                            IsSalesDefault = true,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            OrganizationId = 39L
                        },
                        new
                        {
                            Id = 2L,
                            CompanyId = 39L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            CurrencyId = 2L,
                            IsDeleted = false,
                            IsSalesDefault = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            OrganizationId = 39L
                        },
                        new
                        {
                            Id = 3L,
                            CompanyId = 39L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            CurrencyId = 3L,
                            IsDeleted = false,
                            IsSalesDefault = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            OrganizationId = 39L
                        },
                        new
                        {
                            Id = 4L,
                            CompanyId = 39L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            CurrencyId = 4L,
                            IsDeleted = false,
                            IsSalesDefault = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            OrganizationId = 39L
                        },
                        new
                        {
                            Id = 5L,
                            CompanyId = 39L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            CurrencyId = 5L,
                            IsDeleted = false,
                            IsSalesDefault = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            OrganizationId = 39L
                        });
                });

            modelBuilder.Entity("GSF.Domain.Entities.Companies.Organization", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("cny_Organization", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 39L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Globalsis"
                        });
                });

            modelBuilder.Entity("GSF.Domain.Entities.Geo.City", b =>
                {
                    b.Property<long>("Idm")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("ProvinceId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("ProvinceId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("geo_Cities", (string)null);

                    b.HasData(
                        new
                        {
                            Idm = 1L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "La Plata",
                            ProvinceId = 1L
                        },
                        new
                        {
                            Idm = 2L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Río de Janeiro",
                            ProvinceId = 2L
                        },
                        new
                        {
                            Idm = 3L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Montevideo",
                            ProvinceId = 3L
                        },
                        new
                        {
                            Idm = 4L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Colonia del Sacramento",
                            ProvinceId = 4L
                        },
                        new
                        {
                            Idm = 5L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Montevideo",
                            ProvinceId = 3L
                        },
                        new
                        {
                            Idm = 6L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Rosario",
                            ProvinceId = 5L
                        });
                });

            modelBuilder.Entity("GSF.Domain.Entities.Geo.Country", b =>
                {
                    b.Property<long>("Idm")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ISOCode2")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("ISOCode3")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("geo_Countries", (string)null);

                    b.HasData(
                        new
                        {
                            Idm = 1L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "AR",
                            ISOCode3 = "ARG",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Argentina"
                        },
                        new
                        {
                            Idm = 2L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "UY",
                            ISOCode3 = "URY",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Uruguay"
                        },
                        new
                        {
                            Idm = 3L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "BR",
                            ISOCode3 = "BRA",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Brasil"
                        },
                        new
                        {
                            Idm = 4L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "AF",
                            ISOCode3 = "AFG",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Afganistán"
                        },
                        new
                        {
                            Idm = 5L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "AL",
                            ISOCode3 = "ALB",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Albania"
                        },
                        new
                        {
                            Idm = 6L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "DE",
                            ISOCode3 = "DEU",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Alemania"
                        },
                        new
                        {
                            Idm = 7L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "DZ",
                            ISOCode3 = "DZA",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Algeria"
                        },
                        new
                        {
                            Idm = 8L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "AD",
                            ISOCode3 = "AND",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Andorra"
                        },
                        new
                        {
                            Idm = 9L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "AO",
                            ISOCode3 = "AGO",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Angola"
                        },
                        new
                        {
                            Idm = 10L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "AI",
                            ISOCode3 = "AIA",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Anguila"
                        },
                        new
                        {
                            Idm = 11L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "AQ",
                            ISOCode3 = "ATA",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Antártida"
                        },
                        new
                        {
                            Idm = 12L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "AG",
                            ISOCode3 = "ATG",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Antigua y Barbuda"
                        },
                        new
                        {
                            Idm = 13L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "AN",
                            ISOCode3 = "ANT",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Antillas Neerlandesas"
                        },
                        new
                        {
                            Idm = 14L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "SA",
                            ISOCode3 = "SAU",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Arabia Saudita"
                        },
                        new
                        {
                            Idm = 15L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "AM",
                            ISOCode3 = "ARM",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Armenia"
                        },
                        new
                        {
                            Idm = 16L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "AW",
                            ISOCode3 = "ABW",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Aruba"
                        },
                        new
                        {
                            Idm = 17L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "AU",
                            ISOCode3 = "AUS",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Australia"
                        },
                        new
                        {
                            Idm = 18L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "AT",
                            ISOCode3 = "AUT",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Austria"
                        },
                        new
                        {
                            Idm = 19L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "AZ",
                            ISOCode3 = "AZE",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Azerbayán"
                        },
                        new
                        {
                            Idm = 20L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "BE",
                            ISOCode3 = "BEL",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Bélgica"
                        },
                        new
                        {
                            Idm = 21L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "BS",
                            ISOCode3 = "BHS",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Bahamas"
                        },
                        new
                        {
                            Idm = 22L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "BH",
                            ISOCode3 = "BHR",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Bahrein"
                        },
                        new
                        {
                            Idm = 23L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "BD",
                            ISOCode3 = "BGD",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Bangladesh"
                        },
                        new
                        {
                            Idm = 24L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "BB",
                            ISOCode3 = "BRB",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Barbados"
                        },
                        new
                        {
                            Idm = 25L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "BZ",
                            ISOCode3 = "BLZ",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Belice"
                        },
                        new
                        {
                            Idm = 26L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "BJ",
                            ISOCode3 = "BEN",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Benín"
                        },
                        new
                        {
                            Idm = 27L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "BT",
                            ISOCode3 = "BTN",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Bhután"
                        },
                        new
                        {
                            Idm = 28L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "BY",
                            ISOCode3 = "BLR",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Bielorrusia"
                        },
                        new
                        {
                            Idm = 29L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "MM",
                            ISOCode3 = "MMR",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Birmania"
                        },
                        new
                        {
                            Idm = 30L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "BO",
                            ISOCode3 = "BOL",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Bolivia"
                        },
                        new
                        {
                            Idm = 31L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "BA",
                            ISOCode3 = "BIH",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Bosnia y Herzegovina"
                        },
                        new
                        {
                            Idm = 32L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "BW",
                            ISOCode3 = "BWA",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Botsuana"
                        },
                        new
                        {
                            Idm = 33L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "BN",
                            ISOCode3 = "BRN",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Brunei"
                        },
                        new
                        {
                            Idm = 34L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "BG",
                            ISOCode3 = "BGR",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Bulgaria"
                        },
                        new
                        {
                            Idm = 35L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "BF",
                            ISOCode3 = "BFA",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Burkina Faso"
                        },
                        new
                        {
                            Idm = 36L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "BI",
                            ISOCode3 = "BDI",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Burundi"
                        },
                        new
                        {
                            Idm = 37L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "CV",
                            ISOCode3 = "CPV",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Cabo Verde"
                        },
                        new
                        {
                            Idm = 38L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "KH",
                            ISOCode3 = "KHM",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Camboya"
                        },
                        new
                        {
                            Idm = 39L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "CM",
                            ISOCode3 = "CMR",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Camerún"
                        },
                        new
                        {
                            Idm = 40L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "CA",
                            ISOCode3 = "CAN",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Canadá"
                        },
                        new
                        {
                            Idm = 41L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "TD",
                            ISOCode3 = "TCD",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Chad"
                        },
                        new
                        {
                            Idm = 42L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "CL",
                            ISOCode3 = "CHL",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Chile"
                        },
                        new
                        {
                            Idm = 43L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "CN",
                            ISOCode3 = "CHN",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "China"
                        },
                        new
                        {
                            Idm = 44L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "CY",
                            ISOCode3 = "CYP",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Chipre"
                        },
                        new
                        {
                            Idm = 45L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "VA",
                            ISOCode3 = "VAT",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Ciudad del Vaticano"
                        },
                        new
                        {
                            Idm = 46L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "CO",
                            ISOCode3 = "COL",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Colombia"
                        },
                        new
                        {
                            Idm = 47L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "KM",
                            ISOCode3 = "COM",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Comoras"
                        },
                        new
                        {
                            Idm = 48L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "CG",
                            ISOCode3 = "COG",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Congo"
                        },
                        new
                        {
                            Idm = 49L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "CD",
                            ISOCode3 = "COD",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Congo"
                        },
                        new
                        {
                            Idm = 50L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "KP",
                            ISOCode3 = "PRK",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Corea del Norte"
                        },
                        new
                        {
                            Idm = 51L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "KR",
                            ISOCode3 = "KOR",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Corea del Sur"
                        },
                        new
                        {
                            Idm = 52L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "CI",
                            ISOCode3 = "CIV",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Costa de Marfil"
                        },
                        new
                        {
                            Idm = 53L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "CR",
                            ISOCode3 = "CRI",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Costa Rica"
                        },
                        new
                        {
                            Idm = 54L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "HR",
                            ISOCode3 = "HRV",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Croacia"
                        },
                        new
                        {
                            Idm = 55L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "CU",
                            ISOCode3 = "CUB",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Cuba"
                        },
                        new
                        {
                            Idm = 56L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "DK",
                            ISOCode3 = "DNK",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Dinamarca"
                        },
                        new
                        {
                            Idm = 57L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "DM",
                            ISOCode3 = "DMA",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Dominica"
                        },
                        new
                        {
                            Idm = 58L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "EC",
                            ISOCode3 = "ECU",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Ecuador"
                        },
                        new
                        {
                            Idm = 59L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "EG",
                            ISOCode3 = "EGY",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Egipto"
                        },
                        new
                        {
                            Idm = 60L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "SV",
                            ISOCode3 = "SLV",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "El Salvador"
                        },
                        new
                        {
                            Idm = 61L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "AE",
                            ISOCode3 = "ARE",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Emiratos Árabes Unidos"
                        },
                        new
                        {
                            Idm = 62L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "ER",
                            ISOCode3 = "ERI",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Eritrea"
                        },
                        new
                        {
                            Idm = 63L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "SK",
                            ISOCode3 = "SVK",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Eslovaquia"
                        },
                        new
                        {
                            Idm = 64L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "SI",
                            ISOCode3 = "SVN",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Eslovenia"
                        },
                        new
                        {
                            Idm = 65L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "ES",
                            ISOCode3 = "ESP",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "España"
                        },
                        new
                        {
                            Idm = 66L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "US",
                            ISOCode3 = "USA",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Estados Unidos de América"
                        },
                        new
                        {
                            Idm = 67L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "EE",
                            ISOCode3 = "EST",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Estonia"
                        },
                        new
                        {
                            Idm = 68L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "ET",
                            ISOCode3 = "ETH",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Etiopía"
                        },
                        new
                        {
                            Idm = 69L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "PH",
                            ISOCode3 = "PHL",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Filipinas"
                        },
                        new
                        {
                            Idm = 70L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "FI",
                            ISOCode3 = "FIN",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Finlandia"
                        },
                        new
                        {
                            Idm = 71L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "FJ",
                            ISOCode3 = "FJI",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Fiyi"
                        },
                        new
                        {
                            Idm = 72L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "FR",
                            ISOCode3 = "FRA",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Francia"
                        },
                        new
                        {
                            Idm = 73L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "GA",
                            ISOCode3 = "GAB",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Gabón"
                        },
                        new
                        {
                            Idm = 74L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "GM",
                            ISOCode3 = "GMB",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Gambia"
                        },
                        new
                        {
                            Idm = 75L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "GE",
                            ISOCode3 = "GEO",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Georgia"
                        },
                        new
                        {
                            Idm = 76L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "GH",
                            ISOCode3 = "GHA",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Ghana"
                        },
                        new
                        {
                            Idm = 77L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "GI",
                            ISOCode3 = "GIB",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Gibraltar"
                        },
                        new
                        {
                            Idm = 78L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "GD",
                            ISOCode3 = "GRD",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Granada"
                        },
                        new
                        {
                            Idm = 79L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "GR",
                            ISOCode3 = "GRC",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Grecia"
                        },
                        new
                        {
                            Idm = 80L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "GL",
                            ISOCode3 = "GRL",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Groenlandia"
                        },
                        new
                        {
                            Idm = 81L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "GP",
                            ISOCode3 = "GLP",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Guadalupe"
                        },
                        new
                        {
                            Idm = 82L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "GU",
                            ISOCode3 = "GUM",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Guam"
                        },
                        new
                        {
                            Idm = 83L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "GT",
                            ISOCode3 = "GTM",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Guatemala"
                        },
                        new
                        {
                            Idm = 84L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "GF",
                            ISOCode3 = "GUF",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Guayana Francesa"
                        },
                        new
                        {
                            Idm = 85L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "GG",
                            ISOCode3 = "GGY",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Guernsey"
                        },
                        new
                        {
                            Idm = 86L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "GN",
                            ISOCode3 = "GIN",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Guinea"
                        },
                        new
                        {
                            Idm = 87L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "GQ",
                            ISOCode3 = "GNQ",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Guinea Ecuatorial"
                        },
                        new
                        {
                            Idm = 88L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "GW",
                            ISOCode3 = "GNB",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Guinea-Bissau"
                        },
                        new
                        {
                            Idm = 89L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "GY",
                            ISOCode3 = "GUY",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Guyana"
                        },
                        new
                        {
                            Idm = 90L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "HT",
                            ISOCode3 = "HTI",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Haití"
                        },
                        new
                        {
                            Idm = 91L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "HN",
                            ISOCode3 = "HND",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Honduras"
                        },
                        new
                        {
                            Idm = 92L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "HK",
                            ISOCode3 = "HKG",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Hong Kong"
                        },
                        new
                        {
                            Idm = 93L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "HU",
                            ISOCode3 = "HUN",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Hungría"
                        },
                        new
                        {
                            Idm = 94L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "IN",
                            ISOCode3 = "IND",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "India"
                        },
                        new
                        {
                            Idm = 95L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "ID",
                            ISOCode3 = "IDN",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Indonesia"
                        },
                        new
                        {
                            Idm = 96L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "IR",
                            ISOCode3 = "IRN",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Irán"
                        },
                        new
                        {
                            Idm = 97L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "IQ",
                            ISOCode3 = "IRQ",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Irak"
                        },
                        new
                        {
                            Idm = 98L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "IE",
                            ISOCode3 = "IRL",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Irlanda"
                        },
                        new
                        {
                            Idm = 99L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "BV",
                            ISOCode3 = "BVT",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Isla Bouvet"
                        },
                        new
                        {
                            Idm = 100L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "IM",
                            ISOCode3 = "IMN",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Isla de Man"
                        },
                        new
                        {
                            Idm = 101L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "CX",
                            ISOCode3 = "CXR",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Isla de Navidad"
                        },
                        new
                        {
                            Idm = 102L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "NF",
                            ISOCode3 = "NFK",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Isla Norfolk"
                        },
                        new
                        {
                            Idm = 103L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "IS",
                            ISOCode3 = "ISL",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Islandia"
                        },
                        new
                        {
                            Idm = 104L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "BM",
                            ISOCode3 = "BMU",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Islas Bermudas"
                        },
                        new
                        {
                            Idm = 105L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "KY",
                            ISOCode3 = "CYM",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Islas Caimán"
                        },
                        new
                        {
                            Idm = 106L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "CC",
                            ISOCode3 = "CCK",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Islas Cocos (Keeling)"
                        },
                        new
                        {
                            Idm = 107L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "CK",
                            ISOCode3 = "COK",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Islas Cook"
                        },
                        new
                        {
                            Idm = 108L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "AX",
                            ISOCode3 = "ALA",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Islas de Åland"
                        },
                        new
                        {
                            Idm = 109L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "FO",
                            ISOCode3 = "FRO",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Islas Feroe"
                        },
                        new
                        {
                            Idm = 110L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "GS",
                            ISOCode3 = "SGS",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Islas Georgias del Sur y Sandwich del Sur"
                        },
                        new
                        {
                            Idm = 111L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "HM",
                            ISOCode3 = "HMD",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Islas Heard y McDonald"
                        },
                        new
                        {
                            Idm = 112L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "MV",
                            ISOCode3 = "MDV",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Islas Maldivas"
                        },
                        new
                        {
                            Idm = 113L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "FK",
                            ISOCode3 = "FLK",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Islas Malvinas"
                        },
                        new
                        {
                            Idm = 114L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "MP",
                            ISOCode3 = "MNP",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Islas Marianas del Norte"
                        },
                        new
                        {
                            Idm = 115L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "MH",
                            ISOCode3 = "MHL",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Islas Marshall"
                        },
                        new
                        {
                            Idm = 116L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "PN",
                            ISOCode3 = "PCN",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Islas Pitcairn"
                        },
                        new
                        {
                            Idm = 117L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "SB",
                            ISOCode3 = "SLB",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Islas Salomón"
                        },
                        new
                        {
                            Idm = 118L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "TC",
                            ISOCode3 = "TCA",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Islas Turcas y Caicos"
                        },
                        new
                        {
                            Idm = 119L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "UM",
                            ISOCode3 = "UMI",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Islas Ultramarinas Menores de Estados Unidos"
                        },
                        new
                        {
                            Idm = 120L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "VG",
                            ISOCode3 = "VGB",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Islas Vírgenes Británicas"
                        },
                        new
                        {
                            Idm = 121L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "VI",
                            ISOCode3 = "VIR",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Islas Vírgenes de los Estados Unidos"
                        },
                        new
                        {
                            Idm = 122L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "IL",
                            ISOCode3 = "ISR",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Israel"
                        },
                        new
                        {
                            Idm = 123L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "IT",
                            ISOCode3 = "ITA",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Italia"
                        },
                        new
                        {
                            Idm = 124L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "JM",
                            ISOCode3 = "JAM",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Jamaica"
                        },
                        new
                        {
                            Idm = 125L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "JP",
                            ISOCode3 = "JPN",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Japón"
                        },
                        new
                        {
                            Idm = 126L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "JE",
                            ISOCode3 = "JEY",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Jersey"
                        },
                        new
                        {
                            Idm = 127L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "JO",
                            ISOCode3 = "JOR",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Jordania"
                        },
                        new
                        {
                            Idm = 128L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "KZ",
                            ISOCode3 = "KAZ",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Kazajistán"
                        },
                        new
                        {
                            Idm = 129L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "KE",
                            ISOCode3 = "KEN",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Kenia"
                        },
                        new
                        {
                            Idm = 130L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "KG",
                            ISOCode3 = "KGZ",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Kirguistán"
                        },
                        new
                        {
                            Idm = 131L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "KI",
                            ISOCode3 = "KIR",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Kiribati"
                        },
                        new
                        {
                            Idm = 132L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "KW",
                            ISOCode3 = "KWT",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Kuwait"
                        },
                        new
                        {
                            Idm = 133L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "LA",
                            ISOCode3 = "LAO",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Laos"
                        },
                        new
                        {
                            Idm = 134L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "LS",
                            ISOCode3 = "LSO",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Lesoto"
                        },
                        new
                        {
                            Idm = 135L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "LV",
                            ISOCode3 = "LVA",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Letonia"
                        },
                        new
                        {
                            Idm = 136L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "LB",
                            ISOCode3 = "LBN",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Líbano"
                        },
                        new
                        {
                            Idm = 137L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "LR",
                            ISOCode3 = "LBR",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Liberia"
                        },
                        new
                        {
                            Idm = 138L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "LY",
                            ISOCode3 = "LBY",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Libia"
                        },
                        new
                        {
                            Idm = 139L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "LI",
                            ISOCode3 = "LIE",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Liechtenstein"
                        },
                        new
                        {
                            Idm = 140L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "LT",
                            ISOCode3 = "LTU",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Lituania"
                        },
                        new
                        {
                            Idm = 141L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "LU",
                            ISOCode3 = "LUX",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Luxemburgo"
                        },
                        new
                        {
                            Idm = 142L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "MO",
                            ISOCode3 = "MAC",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Macao"
                        },
                        new
                        {
                            Idm = 143L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "MK",
                            ISOCode3 = "MKD",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Macedonia del Norte"
                        },
                        new
                        {
                            Idm = 144L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "MG",
                            ISOCode3 = "MDG",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Madagascar"
                        },
                        new
                        {
                            Idm = 145L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "MY",
                            ISOCode3 = "MYS",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Malasia"
                        },
                        new
                        {
                            Idm = 146L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "MW",
                            ISOCode3 = "MWI",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Malaui"
                        },
                        new
                        {
                            Idm = 147L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "ML",
                            ISOCode3 = "MLI",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Mali"
                        },
                        new
                        {
                            Idm = 148L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "MT",
                            ISOCode3 = "MLT",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Malta"
                        },
                        new
                        {
                            Idm = 149L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "MA",
                            ISOCode3 = "MAR",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Marruecos"
                        },
                        new
                        {
                            Idm = 150L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "MQ",
                            ISOCode3 = "MTQ",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Martinica"
                        },
                        new
                        {
                            Idm = 151L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "MU",
                            ISOCode3 = "MUS",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Mauricio"
                        },
                        new
                        {
                            Idm = 152L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "MR",
                            ISOCode3 = "MRT",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Mauritania"
                        },
                        new
                        {
                            Idm = 153L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "YT",
                            ISOCode3 = "MYT",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Mayotte"
                        },
                        new
                        {
                            Idm = 154L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "MX",
                            ISOCode3 = "MEX",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "México"
                        },
                        new
                        {
                            Idm = 155L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "FM",
                            ISOCode3 = "FSM",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Micronesia"
                        },
                        new
                        {
                            Idm = 156L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "MD",
                            ISOCode3 = "MDA",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Moldavia"
                        },
                        new
                        {
                            Idm = 157L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "MC",
                            ISOCode3 = "MCO",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Mónaco"
                        },
                        new
                        {
                            Idm = 158L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "MN",
                            ISOCode3 = "MNG",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Mongolia"
                        },
                        new
                        {
                            Idm = 159L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "ME",
                            ISOCode3 = "MNE",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Montenegro"
                        },
                        new
                        {
                            Idm = 160L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "MS",
                            ISOCode3 = "MSR",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Montserrat"
                        },
                        new
                        {
                            Idm = 161L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "MZ",
                            ISOCode3 = "MOZ",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Mozambique"
                        },
                        new
                        {
                            Idm = 162L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "NA",
                            ISOCode3 = "NAM",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Namibia"
                        },
                        new
                        {
                            Idm = 163L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "NR",
                            ISOCode3 = "NRU",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Nauru"
                        },
                        new
                        {
                            Idm = 164L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "NP",
                            ISOCode3 = "NPL",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Nepal"
                        },
                        new
                        {
                            Idm = 165L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "NI",
                            ISOCode3 = "NIC",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Nicaragua"
                        },
                        new
                        {
                            Idm = 166L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "NE",
                            ISOCode3 = "NER",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Níger"
                        },
                        new
                        {
                            Idm = 167L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "NG",
                            ISOCode3 = "NGA",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Nigeria"
                        },
                        new
                        {
                            Idm = 168L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "NU",
                            ISOCode3 = "NIU",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Niue"
                        },
                        new
                        {
                            Idm = 169L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "NO",
                            ISOCode3 = "NOR",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Noruega"
                        },
                        new
                        {
                            Idm = 170L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "NC",
                            ISOCode3 = "NCL",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Nueva Caledonia"
                        },
                        new
                        {
                            Idm = 171L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "NZ",
                            ISOCode3 = "NZL",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Nueva Zelanda"
                        },
                        new
                        {
                            Idm = 172L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "OM",
                            ISOCode3 = "OMN",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Omán"
                        },
                        new
                        {
                            Idm = 173L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "NL",
                            ISOCode3 = "NLD",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Países Bajos"
                        },
                        new
                        {
                            Idm = 174L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "PK",
                            ISOCode3 = "PAK",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Pakistán"
                        },
                        new
                        {
                            Idm = 175L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "PW",
                            ISOCode3 = "PLW",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Palaos"
                        },
                        new
                        {
                            Idm = 176L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "PA",
                            ISOCode3 = "PAN",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Panamá"
                        },
                        new
                        {
                            Idm = 177L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "PG",
                            ISOCode3 = "PNG",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Papúa Nueva Guinea"
                        },
                        new
                        {
                            Idm = 178L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "PY",
                            ISOCode3 = "PRY",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Paraguay"
                        },
                        new
                        {
                            Idm = 179L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "PE",
                            ISOCode3 = "PER",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Perú"
                        },
                        new
                        {
                            Idm = 180L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "PF",
                            ISOCode3 = "PYF",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Polinesia Francesa"
                        },
                        new
                        {
                            Idm = 181L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "PL",
                            ISOCode3 = "POL",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Polonia"
                        },
                        new
                        {
                            Idm = 182L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "PT",
                            ISOCode3 = "PRT",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Portugal"
                        },
                        new
                        {
                            Idm = 183L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "PR",
                            ISOCode3 = "PRI",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Puerto Rico"
                        },
                        new
                        {
                            Idm = 184L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "QA",
                            ISOCode3 = "QAT",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Qatar"
                        },
                        new
                        {
                            Idm = 185L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "GB",
                            ISOCode3 = "GBR",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Reino Unido"
                        },
                        new
                        {
                            Idm = 186L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "CF",
                            ISOCode3 = "CAF",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "República Centroafricana"
                        },
                        new
                        {
                            Idm = 187L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "CZ",
                            ISOCode3 = "CZE",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "República Checa"
                        },
                        new
                        {
                            Idm = 188L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "CD",
                            ISOCode3 = "COD",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "República Democrática del Congo"
                        },
                        new
                        {
                            Idm = 189L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "DO",
                            ISOCode3 = "DOM",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "República Dominicana"
                        },
                        new
                        {
                            Idm = 190L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "RE",
                            ISOCode3 = "REU",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Reunión"
                        },
                        new
                        {
                            Idm = 191L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "RW",
                            ISOCode3 = "RWA",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Ruanda"
                        },
                        new
                        {
                            Idm = 192L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "RO",
                            ISOCode3 = "ROU",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Rumania"
                        },
                        new
                        {
                            Idm = 193L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "RU",
                            ISOCode3 = "RUS",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Rusia"
                        },
                        new
                        {
                            Idm = 194L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "EH",
                            ISOCode3 = "ESH",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Sahara Occidental"
                        },
                        new
                        {
                            Idm = 195L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "WS",
                            ISOCode3 = "WSM",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Samoa"
                        },
                        new
                        {
                            Idm = 196L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "AS",
                            ISOCode3 = "ASM",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Samoa Americana"
                        },
                        new
                        {
                            Idm = 197L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "BL",
                            ISOCode3 = "BLM",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "San Bartolomé"
                        },
                        new
                        {
                            Idm = 198L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "KN",
                            ISOCode3 = "KNA",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "San Cristóbal y Nieves"
                        },
                        new
                        {
                            Idm = 199L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "SM",
                            ISOCode3 = "SMR",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "San Marino"
                        },
                        new
                        {
                            Idm = 200L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "San Martín (Francia)"
                        },
                        new
                        {
                            Idm = 201L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "San Pedro y Miquelón"
                        },
                        new
                        {
                            Idm = 202L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "San Vicente y las Granadinas"
                        },
                        new
                        {
                            Idm = 203L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Santa Elena"
                        },
                        new
                        {
                            Idm = 204L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Santa Lucía"
                        },
                        new
                        {
                            Idm = 205L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Santo Tomé y Príncipe"
                        },
                        new
                        {
                            Idm = 206L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Senegal"
                        },
                        new
                        {
                            Idm = 207L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Serbia"
                        },
                        new
                        {
                            Idm = 208L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Seychelles"
                        },
                        new
                        {
                            Idm = 209L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Sierra Leona"
                        },
                        new
                        {
                            Idm = 210L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Singapur"
                        },
                        new
                        {
                            Idm = 211L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Siria"
                        },
                        new
                        {
                            Idm = 212L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Somalia"
                        },
                        new
                        {
                            Idm = 213L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Sri Lanka"
                        },
                        new
                        {
                            Idm = 214L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Sudáfrica"
                        },
                        new
                        {
                            Idm = 215L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Sudán"
                        },
                        new
                        {
                            Idm = 216L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Suecia"
                        },
                        new
                        {
                            Idm = 217L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Suiza"
                        },
                        new
                        {
                            Idm = 218L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Surinám"
                        },
                        new
                        {
                            Idm = 219L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Svalbard y Jan Mayen"
                        },
                        new
                        {
                            Idm = 220L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Swazilandia"
                        },
                        new
                        {
                            Idm = 221L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Tadjikistán"
                        },
                        new
                        {
                            Idm = 222L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Tailandia"
                        },
                        new
                        {
                            Idm = 223L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Taiwán"
                        },
                        new
                        {
                            Idm = 224L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Tanzania"
                        },
                        new
                        {
                            Idm = 225L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Territorio Británico del Océano Índico"
                        },
                        new
                        {
                            Idm = 226L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Territorios Australes y Antárticas Franceses"
                        },
                        new
                        {
                            Idm = 227L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Timor Oriental"
                        },
                        new
                        {
                            Idm = 228L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Togo"
                        },
                        new
                        {
                            Idm = 229L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Tokelau"
                        },
                        new
                        {
                            Idm = 230L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Tonga"
                        },
                        new
                        {
                            Idm = 231L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Trinidad y Tobago"
                        },
                        new
                        {
                            Idm = 232L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Túnez"
                        },
                        new
                        {
                            Idm = 233L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Turkmenistán"
                        },
                        new
                        {
                            Idm = 234L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Turquía"
                        },
                        new
                        {
                            Idm = 235L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Tuvalu"
                        },
                        new
                        {
                            Idm = 236L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Ucrania"
                        },
                        new
                        {
                            Idm = 237L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Uganda"
                        },
                        new
                        {
                            Idm = 238L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Uruguay"
                        },
                        new
                        {
                            Idm = 239L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Uzbekistán"
                        },
                        new
                        {
                            Idm = 240L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Vanuatu"
                        },
                        new
                        {
                            Idm = 241L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Venezuela"
                        },
                        new
                        {
                            Idm = 242L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Vietnam"
                        },
                        new
                        {
                            Idm = 243L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Wallis y Futuna"
                        },
                        new
                        {
                            Idm = 244L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Yemen"
                        },
                        new
                        {
                            Idm = 245L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Yibuti"
                        },
                        new
                        {
                            Idm = 246L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Zambia"
                        },
                        new
                        {
                            Idm = 247L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            ISOCode2 = "",
                            ISOCode3 = "",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Zimbabue"
                        });
                });

            modelBuilder.Entity("GSF.Domain.Entities.Geo.Province", b =>
                {
                    b.Property<long>("Idm")
                        .HasColumnType("bigint");

                    b.Property<long>("CountryIdm")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("CountryIdm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("geo_Provinces", (string)null);

                    b.HasData(
                        new
                        {
                            Idm = 1L,
                            CountryIdm = 1L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Buenos Aires"
                        },
                        new
                        {
                            Idm = 5L,
                            CountryIdm = 1L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Santa fe"
                        },
                        new
                        {
                            Idm = 2L,
                            CountryIdm = 3L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Río de Janeiro"
                        },
                        new
                        {
                            Idm = 6L,
                            CountryIdm = 3L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "San pablo"
                        },
                        new
                        {
                            Idm = 3L,
                            CountryIdm = 2L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Montevideo"
                        },
                        new
                        {
                            Idm = 4L,
                            CountryIdm = 2L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Colonia"
                        });
                });

            modelBuilder.Entity("GSF.Domain.Entities.Global.Culture", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("gbl_Cultures", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Code = "es-AR",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Language = "es",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Español"
                        },
                        new
                        {
                            Id = 2L,
                            Code = "en-US",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Language = "en",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Inglés"
                        },
                        new
                        {
                            Id = 3L,
                            Code = "pt-BR",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Language = "pt",
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Portugués"
                        });
                });

            modelBuilder.Entity("GSF.Domain.Entities.Global.CultureOrganization", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("CultureDefault")
                        .HasColumnType("bit");

                    b.Property<long>("CultureId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CultureId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("gbl_CulturesOrganization", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            CultureDefault = true,
                            CultureId = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            OrganizationId = 39L
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            CultureDefault = false,
                            CultureId = 2L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            OrganizationId = 39L
                        },
                        new
                        {
                            Id = 3L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            CultureDefault = false,
                            CultureId = 3L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            OrganizationId = 39L
                        });
                });

            modelBuilder.Entity("GSF.Domain.Entities.Global.Currency", b =>
                {
                    b.Property<long>("Idm")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("gbl_Currencies", (string)null);

                    b.HasData(
                        new
                        {
                            Idm = 1L,
                            Code = "ARS",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Peso Argentino",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Peso Argentino",
                            Symbol = "$"
                        },
                        new
                        {
                            Idm = 2L,
                            Code = "DOL",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Dolar Americano",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Dolar Americano",
                            Symbol = "US$"
                        },
                        new
                        {
                            Idm = 3L,
                            Code = "EUR",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Euro",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Euro",
                            Symbol = "€"
                        },
                        new
                        {
                            Idm = 4L,
                            Code = "BRL",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Real Brasilero",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Real Brasilero",
                            Symbol = "R$"
                        },
                        new
                        {
                            Idm = 5L,
                            Code = "UYU",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Peso Uruguayo",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Peso Uruguayo",
                            Symbol = "$"
                        });
                });

            modelBuilder.Entity("GSF.Domain.Entities.Global.IdentificationTax", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("gbl_IdentificationTax", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CountryId = 1L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Clave Única de Identificación Tributaria",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "CUIT"
                        },
                        new
                        {
                            Id = 2L,
                            CountryId = 2L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Registro Único Tributario",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "RUT"
                        });
                });

            modelBuilder.Entity("GSF.Domain.Entities.Global.IdentificationType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("gbl_IdentificationTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Code = "DNI",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Documento Argentino"
                        },
                        new
                        {
                            Id = 2L,
                            Code = "CI",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Cédula Uruguaya"
                        },
                        new
                        {
                            Id = 3L,
                            Code = "PSP",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Pasaporte"
                        });
                });

            modelBuilder.Entity("GSF.Domain.Entities.Middleware.Interfaces.Interfaz", b =>
                {
                    b.Property<short>("Idm")
                        .HasColumnType("smallint");

                    b.Property<string>("CodigoIdentificacionExterna")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CodigoInterno")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DescripcionExterna")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DescripcionMiddleware")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<long>("SistemaIdm")
                        .HasColumnType("bigint");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("Session");

                    b.HasIndex("SistemaIdm");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("int_Interfaces", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Entities.Middleware.Interfaces.InterfazCampo", b =>
                {
                    b.Property<int>("Idm")
                        .HasColumnType("int");

                    b.Property<string>("CampoExterno")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CampoMiddleware")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Explicacion")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<short>("InterfazIdm")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<short?>("NumeroOrdenCampo")
                        .HasColumnType("smallint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("InterfazIdm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("int_InterfazCampos", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Entities.Middleware.Interfaces.InterfazEstado", b =>
                {
                    b.Property<short>("Idm")
                        .HasColumnType("smallint");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CodigoInterno")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<short>("InterfazIdm")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("InterfazIdm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("int_InterfazEstados", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Entities.Middleware.Interfaces.InterfazProceso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ArchivoNombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CantidadRegistrosIgnorados")
                        .HasColumnType("int");

                    b.Property<int>("CantidadRegistrosLeidos")
                        .HasColumnType("int");

                    b.Property<int>("CantidadRegistrosNoProcesados")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<short>("EstadoIdm")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("EstadoModificacionFechaHora")
                        .HasColumnType("datetime2");

                    b.Property<short>("InterfazIdm")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstadoIdm");

                    b.HasIndex("InterfazIdm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("int_InterfazProcesos", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Entities.Middleware.Interfaces.InterfazProcesoReglaEnforzada", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CampoValor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CampoValorRelacionado")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("InterfazCampoIdm")
                        .HasColumnType("int");

                    b.Property<int>("InterfazProcesoId")
                        .HasColumnType("int");

                    b.Property<int>("InterfazReglaIdm")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("RegistroNumero")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InterfazCampoIdm");

                    b.HasIndex("InterfazProcesoId");

                    b.HasIndex("InterfazReglaIdm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("int_InterfazProcesoReglaEnforzadas", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Entities.Middleware.Interfaces.InterfazProcesoValidacionAdicional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.Property<long>("InterfazProcesoReglaEnforzadaId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InterfazProcesoReglaEnforzadaId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("int_InterfazProcesoValidacionAdicionales", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Entities.Middleware.Interfaces.InterfazRegla", b =>
                {
                    b.Property<int>("Idm")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<short>("InterfazIdm")
                        .HasColumnType("smallint");

                    b.Property<short>("InterfazReglaConsecuenciaIdm")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("InterfazIdm");

                    b.HasIndex("InterfazReglaConsecuenciaIdm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("int_InterfazReglas", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Entities.Middleware.Interfaces.InterfazReglaConsecuencia", b =>
                {
                    b.Property<short>("Idm")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("int_InterfazReglaConsecuencias", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Entities.Parametro", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Clave")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Valor")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("par_Parametros", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Entities.Procesos.EstadoProceso", b =>
                {
                    b.Property<long>("Idm")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("pro_EstadoProcesos", (string)null);

                    b.HasData(
                        new
                        {
                            Idm = 1L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "PENDIENTE",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = 2L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "COMPLETADO",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = 3L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "ERROR",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        });
                });

            modelBuilder.Entity("GSF.Domain.Entities.Procesos.Proceso", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Archivo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DescripcionError")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long>("DominioId")
                        .HasColumnType("bigint");

                    b.Property<long>("EstadoIdm")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Ruta")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<long>("TipoIdm")
                        .HasColumnType("bigint");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DominioId");

                    b.HasIndex("EstadoIdm");

                    b.HasIndex("Session");

                    b.HasIndex("TipoIdm");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("pro_Procesos", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Entities.Procesos.TipoProceso", b =>
                {
                    b.Property<long>("Idm")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("pro_TipoProcesos", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Entities.Security.CompanyUserGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("GroupId");

                    b.HasIndex("Session");

                    b.HasIndex("UserId");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("sec_CompaniesUsersGroups", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CompanyId = 39L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            GroupId = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            UserId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CompanyId = 39L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            GroupId = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            UserId = 2L
                        });
                });

            modelBuilder.Entity("GSF.Domain.Entities.Security.Grant", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("DomainFIdm")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<long?>("OptionId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("Transferable")
                        .HasColumnType("bit");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DomainFIdm");

                    b.HasIndex("OptionId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("sec_Grants", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "users.create",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "users.create",
                            OptionId = 21L,
                            Transferable = false
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "users.update",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "users.update",
                            OptionId = 21L,
                            Transferable = false
                        },
                        new
                        {
                            Id = 3L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "users.delete",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "users.delete",
                            OptionId = 21L,
                            Transferable = false
                        },
                        new
                        {
                            Id = 4L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "users.delegate",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "users.delegate",
                            OptionId = 21L,
                            Transferable = false
                        },
                        new
                        {
                            Id = 5L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "users.groupOwnerIdOverrule",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "users.groupOwnerIdOverrule",
                            OptionId = 21L,
                            Transferable = false
                        },
                        new
                        {
                            Id = 6L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "companies.create",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "companies.create",
                            OptionId = 24L,
                            Transferable = false
                        },
                        new
                        {
                            Id = 7L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "companies.update",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "companies.update",
                            OptionId = 24L,
                            Transferable = false
                        },
                        new
                        {
                            Id = 8L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "companies.delete",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "companies.delete",
                            OptionId = 24L,
                            Transferable = false
                        },
                        new
                        {
                            Id = 9L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "groups.create",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "groups.create",
                            OptionId = 22L,
                            Transferable = false
                        },
                        new
                        {
                            Id = 10L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "groups.update",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "groups.update",
                            OptionId = 22L,
                            Transferable = false
                        },
                        new
                        {
                            Id = 11L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "groups.delete",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "groups.delete",
                            OptionId = 22L,
                            Transferable = false
                        },
                        new
                        {
                            Id = 12L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "groups.delegate",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "groups.delegate",
                            OptionId = 22L,
                            Transferable = false
                        },
                        new
                        {
                            Id = 13L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "groups.groupOwnerIdOverrule",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "groups.groupOwnerIdOverrule",
                            OptionId = 22L,
                            Transferable = false
                        },
                        new
                        {
                            Id = 14L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "roles.create",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "roles.create",
                            OptionId = 23L,
                            Transferable = false
                        },
                        new
                        {
                            Id = 15L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "roles.update",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "roles.update",
                            OptionId = 23L,
                            Transferable = false
                        },
                        new
                        {
                            Id = 16L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "roles.delete",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "roles.delete",
                            OptionId = 23L,
                            Transferable = false
                        },
                        new
                        {
                            Id = 17L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "roles.delegate",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "roles.delegate",
                            OptionId = 23L,
                            Transferable = false
                        },
                        new
                        {
                            Id = 18L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "roles.groupOwnerIdOverrule",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "roles.groupOwnerIdOverrule",
                            OptionId = 23L,
                            Transferable = false
                        },
                        new
                        {
                            Id = 19L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "cultures.create",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "cultures.create",
                            OptionId = 11L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 20L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "cultures.update",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "cultures.update",
                            OptionId = 11L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 21L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "cultures.delete",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "cultures.delete",
                            OptionId = 11L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 22L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "notifications.create",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "notifications.create",
                            OptionId = 12L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 23L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "notifications.update",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "notifications.update",
                            OptionId = 12L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 24L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "notifications.delete",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "notifications.delete",
                            OptionId = 12L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 25L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "companies.create",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "config.changepassword",
                            OptionId = 26L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 26L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "ntfManagement.create",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "ntfManagement.create",
                            OptionId = 28L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 27L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Alta de Parámetros",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "parametros.create",
                            OptionId = 29L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 28L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Modificación de Parámetros",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "parametros.update",
                            OptionId = 29L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 100001L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Alta de Solicitud de Certificación",
                            DomainFIdm = 1001L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "solicitudcertificacion.create",
                            OptionId = 100002L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 100002L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Baja de Solicitud de Certificación",
                            DomainFIdm = 1001L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "solicitudcertificacion.delete",
                            OptionId = 100002L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 100003L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Modificación de Solicitud de Certificación",
                            DomainFIdm = 1001L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "solicitudcertificacion.update",
                            OptionId = 100002L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 100004L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Alta de Solicitud de Certificación",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "solicitudcertificacion.create",
                            OptionId = 100004L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 100006L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Baja de Solicitud de Certificacion",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "solicitudcertificacion.delete",
                            OptionId = 100004L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 100005L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Modificación de Comprobantes",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "solicitudcertificacion.update",
                            OptionId = 100004L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 100007L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Alta de Empresas Portales",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "empresasportales.create",
                            OptionId = 100005L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 100009L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Baja de Empresas Portales",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "empresasportales.delete",
                            OptionId = 100005L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 100008L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Modificación de Empresas Portales",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "empresasportales.update",
                            OptionId = 100005L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 100010L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Alta de Usuarios de Empresas Portales",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "usuariosempresas.create",
                            OptionId = 100005L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 100012L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Baja de Usuarios de Empresas Portales",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "usuariosempresas.delete",
                            OptionId = 100005L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 100011L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Modificación de Usuarios de Empresas Portales",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "usuariosempresas.update",
                            OptionId = 100005L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 100013L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Alta de Impuestos",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "impuestos.create",
                            OptionId = 100006L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 100015L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Baja de Impuestos",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "impuestos.delete",
                            OptionId = 100006L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 100014L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Modificación de Impuestos",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "impuestos.update",
                            OptionId = 100006L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 100016L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Alta de Percepciones",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Percepciones.create",
                            OptionId = 100007L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 100018L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Baja de Percepciones",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Percepciones.delete",
                            OptionId = 100007L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 100017L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Modificación de Percepciones",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Percepciones.update",
                            OptionId = 100007L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 100019L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Alta de Periodos",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "periodos.create",
                            OptionId = 100008L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 100021L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Baja de Periodos",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "periodos.delete",
                            OptionId = 100008L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 100020L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Modificación de Periodos",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "periodos.update",
                            OptionId = 100008L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 100022L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Alta de Documentos de Compras",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "ordenescompras.create",
                            OptionId = 100009L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 100024L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Baja de Documentos de Compras",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "ordenescompras.delete",
                            OptionId = 100009L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 100023L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Modificación de Documentos de Compras",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "ordenescompras.update",
                            OptionId = 100009L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 100025L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Alta de Tipos de Documentos de Compras",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "tiposordenescompras.create",
                            OptionId = 100010L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 100027L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Baja de Tipos de Documentos de Compras",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "tiposordenescompras.delete",
                            OptionId = 100010L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 100026L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Modificación de Tipos de Documentos de Compras",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "tiposordenescompras.update",
                            OptionId = 100010L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 100028L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Alta de Tipos de Conceptos de Gastos",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "conceptosgastostipos.create",
                            OptionId = 100011L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 100030L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Baja de Tipos de Conceptos de Gastos",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "conceptosgastostipos.delete",
                            OptionId = 100011L,
                            Transferable = true
                        },
                        new
                        {
                            Id = 100029L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Modificación de Tipos de Conceptos de Gastos",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "conceptosgastostipos.update",
                            OptionId = 100011L,
                            Transferable = true
                        });
                });

            modelBuilder.Entity("GSF.Domain.Entities.Security.Group", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("DomainFIdm")
                        .HasColumnType("bigint");

                    b.Property<long?>("GroupOwnerId")
                        .HasColumnType("bigint");

                    b.Property<string>("InternalCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("SystemUse")
                        .HasColumnType("bit");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DomainFIdm");

                    b.HasIndex("GroupOwnerId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("sec_Groups", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Grupo de Administradores del Sistema",
                            DomainFIdm = 1L,
                            GroupOwnerId = 1L,
                            InternalCode = "SysAdmin",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Grupo SysAdmin",
                            SystemUse = true
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Grupo de Módulo de Seguridad",
                            DomainFIdm = 1L,
                            GroupOwnerId = 1L,
                            InternalCode = "MainSeguridad",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Grupo Seguridad",
                            SystemUse = false
                        },
                        new
                        {
                            Id = 1000L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "AdminSocios",
                            DomainFIdm = 1001L,
                            GroupOwnerId = 1L,
                            InternalCode = "AdminSocios",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "AdminSocios",
                            SystemUse = true
                        });
                });

            modelBuilder.Entity("GSF.Domain.Entities.Security.GroupOrganization", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("sec_GroupsOrganizations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            GroupId = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            OrganizationId = 39L
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            GroupId = 2L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            OrganizationId = 39L
                        });
                });

            modelBuilder.Entity("GSF.Domain.Entities.Security.GroupRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("RoleId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("sec_GroupsRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            GroupId = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            GroupId = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            RoleId = 2L
                        });
                });

            modelBuilder.Entity("GSF.Domain.Entities.Security.Option", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ContextKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("DomainFIdm")
                        .HasColumnType("bigint");

                    b.Property<string>("Icon")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("Page")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("TargetPath")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("Transferable")
                        .HasColumnType("bit");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DomainFIdm");

                    b.HasIndex("ParentId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("sec_Options", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 10L,
                            Code = "PRM",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Modulo de Parametrización",
                            DomainFIdm = 1L,
                            Icon = "fas fas fa-folder",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Parametrización",
                            OrderNo = 10,
                            TargetPath = "",
                            Transferable = true
                        },
                        new
                        {
                            Id = 11L,
                            Code = "PRM-REG",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Administración de Idiomas",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Regionales",
                            OrderNo = 20,
                            ParentId = 10L,
                            TargetPath = "/configuration/cultures/index",
                            Transferable = true
                        },
                        new
                        {
                            Id = 12L,
                            Code = "PRM-NOT",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Modulo de Notificaciones",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Notificaciones",
                            OrderNo = 1,
                            ParentId = 10L,
                            TargetPath = "/Configuration/NotificationTypes/Index",
                            Transferable = false
                        },
                        new
                        {
                            Id = 24L,
                            Code = "PRM-CNY",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Empresas",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Empresas",
                            OrderNo = 5,
                            ParentId = 10L,
                            TargetPath = "/Companies/Index",
                            Transferable = false
                        },
                        new
                        {
                            Id = 20L,
                            Code = "SEG",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Modulo de Seguridad",
                            DomainFIdm = 1L,
                            Icon = "fas fas fa-lock",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Seguridad",
                            OrderNo = 100,
                            TargetPath = "",
                            Transferable = false
                        },
                        new
                        {
                            Id = 21L,
                            Code = "SEG-USR",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Modulo de usuarios",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Usuarios",
                            OrderNo = 10,
                            ParentId = 20L,
                            TargetPath = "/security/users/index",
                            Transferable = false
                        },
                        new
                        {
                            Id = 36L,
                            Code = "SEG-ACT",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Modulo de Actividad de Usuarios",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Actividad Usuarios",
                            OrderNo = 15,
                            ParentId = 20L,
                            TargetPath = "/security/Usuarios/Actividades/index",
                            Transferable = false
                        },
                        new
                        {
                            Id = 22L,
                            Code = "SEG-GRP",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Modulo de grupos",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Grupos",
                            OrderNo = 20,
                            ParentId = 20L,
                            TargetPath = "/security/groups/index",
                            Transferable = false
                        },
                        new
                        {
                            Id = 23L,
                            Code = "SEG-ROL",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Modulo de Roles",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Roles",
                            OrderNo = 30,
                            ParentId = 20L,
                            TargetPath = "/security/roles/index",
                            Transferable = false
                        },
                        new
                        {
                            Id = 25L,
                            Code = "CON",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Modulo de configuración de Usuario",
                            DomainFIdm = 1L,
                            Icon = "fas fas fa-cog",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Configuración de Usuario",
                            OrderNo = 100000,
                            TargetPath = "",
                            Transferable = true
                        },
                        new
                        {
                            Id = 26L,
                            Code = "CON-PSS",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Modulo de cambio de contraseña",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Cambiar contraseña",
                            OrderNo = 10,
                            ParentId = 25L,
                            TargetPath = "/security/PasswordChange",
                            Transferable = true
                        },
                        new
                        {
                            Id = 27L,
                            Code = "NTF",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Notificaciones",
                            DomainFIdm = 1L,
                            Icon = "fas fas fa-bell",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Notificaciones",
                            OrderNo = 500,
                            TargetPath = "",
                            Transferable = true
                        },
                        new
                        {
                            Id = 28L,
                            Code = "NTF-MGT",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Gestión",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Consulta",
                            OrderNo = 10,
                            ParentId = 27L,
                            TargetPath = "/notifications/index",
                            Transferable = true
                        },
                        new
                        {
                            Id = 31L,
                            Code = "ALE-GES",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Gestión",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Gestión",
                            OrderNo = 10,
                            ParentId = 27L,
                            TargetPath = "/alertas/index",
                            Transferable = true
                        },
                        new
                        {
                            Id = 29L,
                            Code = "CFG",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Configuración",
                            DomainFIdm = 1L,
                            Icon = "fas fa-sliders-h",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Configuración",
                            OrderNo = 500,
                            TargetPath = "",
                            Transferable = true
                        },
                        new
                        {
                            Id = 30L,
                            Code = "CFG-PAR",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Gestión de Parámetros",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Parámetros",
                            OrderNo = 10,
                            ParentId = 29L,
                            TargetPath = "/configuracion/parametros/index",
                            Transferable = true
                        },
                        new
                        {
                            Id = 32L,
                            Code = "INT",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Módulo de Interfaces",
                            DomainFIdm = 1L,
                            Icon = "fas fa-file",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Interfaces",
                            OrderNo = 500,
                            TargetPath = "",
                            Transferable = true
                        },
                        new
                        {
                            Id = 33L,
                            Code = "INT-PRO",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Resultados de Procesos de importación y exportación",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Resultados de Procesos",
                            OrderNo = 10,
                            ParentId = 32L,
                            TargetPath = "/Interfaces/ResultadosProcesos/Index",
                            Transferable = true
                        },
                        new
                        {
                            Id = 34L,
                            Code = "INT-DEF",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Definición de Interfaces",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Definiciones",
                            OrderNo = 10,
                            ParentId = 32L,
                            TargetPath = "/Interfaces/Definiciones/Index",
                            Transferable = true
                        },
                        new
                        {
                            Id = 35L,
                            Code = "INT-REG",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Definición de Reglas de Interfaces",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Reglas - Definiciones",
                            OrderNo = 10,
                            ParentId = 32L,
                            TargetPath = "/Interfaces/ReglasDefiniciones/Index",
                            Transferable = true
                        },
                        new
                        {
                            Id = 100001L,
                            Code = "SOC",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Módulo de Socios",
                            DomainFIdm = 1001L,
                            Icon = "fas fa-users",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Socios",
                            OrderNo = 50,
                            TargetPath = "",
                            Transferable = true
                        },
                        new
                        {
                            Id = 100002L,
                            Code = "SOC-CER",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Gestión de Solicitudes de Certificación",
                            DomainFIdm = 1001L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Certificaciones",
                            OrderNo = 1,
                            ParentId = 100001L,
                            TargetPath = "Socios/Certificaciones/Index",
                            Transferable = true
                        },
                        new
                        {
                            Id = 100003L,
                            Code = "PRO",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Módulo de Socios",
                            DomainFIdm = 1L,
                            Icon = "fas fa-users",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Socios",
                            OrderNo = 50,
                            TargetPath = "",
                            Transferable = true
                        },
                        new
                        {
                            Id = 100004L,
                            Code = "SOC-CER",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Gestión de Solicitudes de Certificación",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Certificaciones",
                            OrderNo = 1,
                            ParentId = 100003L,
                            TargetPath = "Socios/Certificaciones/Index",
                            Transferable = true
                        },
                        new
                        {
                            Id = 100005L,
                            Code = "PRO-ADM",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Administracion",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Administracion",
                            OrderNo = 50,
                            ParentId = 100003L,
                            TargetPath = "/Proveedores/Empresas/Index",
                            Transferable = true
                        },
                        new
                        {
                            Id = 100006L,
                            Code = "PRO-IMP",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Impuestos",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Impuestos",
                            OrderNo = 50,
                            ParentId = 10L,
                            TargetPath = "/Proveedores/Impuestos/Index",
                            Transferable = true
                        },
                        new
                        {
                            Id = 100007L,
                            Code = "PRO-PER",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Percepciones",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Percepciones",
                            OrderNo = 50,
                            ParentId = 10L,
                            TargetPath = "/Proveedores/Percepciones/Index",
                            Transferable = true
                        },
                        new
                        {
                            Id = 100008L,
                            Code = "PRO-PRD",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Periodos",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Periodos",
                            OrderNo = 50,
                            ParentId = 10L,
                            TargetPath = "/Configuration/Periodos/Index",
                            Transferable = true
                        },
                        new
                        {
                            Id = 100009L,
                            Code = "PRO-ODC",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Documentos de Compras",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Documentos de Compras",
                            OrderNo = 50,
                            ParentId = 100003L,
                            TargetPath = "/Proveedores/OrdenesCompras/Index",
                            Transferable = true
                        },
                        new
                        {
                            Id = 100010L,
                            Code = "PRO-TOC",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Tipos de Docs de Compra",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Tipos de Docs de Compra",
                            OrderNo = 50,
                            ParentId = 10L,
                            TargetPath = "/Configuration/TiposOrdenesCompras/Index",
                            Transferable = true
                        },
                        new
                        {
                            Id = 100011L,
                            Code = "PRO-CGT",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Conceptos de Gastos",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Conceptos de Gastos",
                            OrderNo = 50,
                            ParentId = 10L,
                            TargetPath = "/Configuration/ConceptosGastosTipos/Index",
                            Transferable = true
                        });
                });

            modelBuilder.Entity("GSF.Domain.Entities.Security.Page", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("ContextualOptionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContextualOptionId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("sec_Pages", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Entities.Security.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("DomainFIdm")
                        .HasColumnType("bigint");

                    b.Property<long>("GroupOwnerId")
                        .HasColumnType("bigint");

                    b.Property<string>("InternalCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("SystemUse")
                        .HasColumnType("bit");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DomainFIdm");

                    b.HasIndex("GroupOwnerId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("sec_Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Rol de Administradores del Sistema",
                            DomainFIdm = 1L,
                            GroupOwnerId = 1L,
                            InternalCode = "SysAdmin",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "SysAdmin",
                            SystemUse = true
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Rol de Módulo de Seguridad",
                            DomainFIdm = 1L,
                            GroupOwnerId = 1L,
                            InternalCode = "MainSeguridad",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Seguridad",
                            SystemUse = false
                        },
                        new
                        {
                            Id = 1001L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Administrador del Portal de Socios",
                            DomainFIdm = 1001L,
                            GroupOwnerId = 1000L,
                            InternalCode = "Socios_Admin",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Admin",
                            SystemUse = true
                        });
                });

            modelBuilder.Entity("GSF.Domain.Entities.Security.RoleGrant", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("GrantId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GrantId");

                    b.HasIndex("RoleId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("sec_RolesGrants", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            GrantId = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            GrantId = 2L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            GrantId = 3L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            GrantId = 4L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 5L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            GrantId = 5L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 6L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            GrantId = 6L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 7L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            GrantId = 7L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 8L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            GrantId = 8L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 9L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            GrantId = 9L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 10L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            GrantId = 10L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 11L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            GrantId = 11L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 12L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            GrantId = 12L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 13L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            GrantId = 13L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 14L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            GrantId = 14L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 15L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            GrantId = 15L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 16L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            GrantId = 16L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 17L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            GrantId = 17L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 18L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            GrantId = 18L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 19L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            GrantId = 19L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 20L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            GrantId = 20L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 21L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            GrantId = 21L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 22L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            GrantId = 22L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 23L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            GrantId = 23L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 24L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            GrantId = 24L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 25L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            GrantId = 25L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            RoleId = 1L
                        });
                });

            modelBuilder.Entity("GSF.Domain.Entities.Security.RoleOption", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("OptionId")
                        .HasColumnType("bigint");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OptionId");

                    b.HasIndex("RoleId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("sec_RolesOptions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            OptionId = 10L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            OptionId = 11L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            OptionId = 12L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            OptionId = 20L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 5L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            OptionId = 21L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 6L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            OptionId = 22L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 7L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            OptionId = 23L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 8L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            OptionId = 24L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 9L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            OptionId = 25L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 10L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            OptionId = 26L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 11L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            OptionId = 27L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 12L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            OptionId = 28L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 13L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            OptionId = 29L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 14L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            OptionId = 30L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 15L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            OptionId = 31L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 16L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            OptionId = 32L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 17L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            OptionId = 33L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 18L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            OptionId = 34L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 19L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            OptionId = 35L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 20L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            OptionId = 36L,
                            RoleId = 1L
                        });
                });

            modelBuilder.Entity("GSF.Domain.Entities.Security.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("Activated")
                        .HasColumnType("bit");

                    b.Property<string>("ActivationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Blocked")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("GroupOwnerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Login")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<short>("LoginFailedAttempts")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NormalizedLogin")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PasswordRecoveryToken")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RequiresNewPassword")
                        .HasColumnType("bit");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("SystemUse")
                        .HasColumnType("bit");

                    b.Property<int>("UserTypeIdm")
                        .HasColumnType("int");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupOwnerId");

                    b.HasIndex("Session");

                    b.HasIndex("UserTypeIdm");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("sec_Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Activated = true,
                            Blocked = false,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Email = "soporte@globalsis.com.ar",
                            FirstName = "Administrador",
                            GroupOwnerId = 1L,
                            Hash = "pJPDrqVBpiPht6eOxNon3+ZhFd+uZFgW",
                            IdNumber = "99000000",
                            IsDeleted = false,
                            LastName = "Del Sistema",
                            Login = "admin",
                            LoginFailedAttempts = (short)0,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            NormalizedEmail = "SOPORTE@GLOBALSIS.COM.AR",
                            NormalizedLogin = "ADMIN",
                            RequiresNewPassword = false,
                            Salt = "OesHsxvxkMeHoad0soJwKln5aKREznXa",
                            SystemUse = true,
                            UserTypeIdm = 1
                        },
                        new
                        {
                            Id = 2L,
                            Activated = true,
                            Blocked = false,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Email = "soporte@globalsis.com.ar",
                            FirstName = "Usuario",
                            GroupOwnerId = 2L,
                            Hash = "hlgFFdBU8cbw+1+Wdd35wDkv8VaAsoM6",
                            IdNumber = "99000000",
                            IsDeleted = false,
                            LastName = "Seguridad",
                            Login = "seguridad",
                            LoginFailedAttempts = (short)0,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            NormalizedEmail = "SOPORTE@GLOBALSIS.COM.AR",
                            NormalizedLogin = "SEGURIDAD",
                            RequiresNewPassword = false,
                            Salt = "Mg57oGVIZZoT1DaNlgpgc2jByxN1c+7f",
                            SystemUse = false,
                            UserTypeIdm = 1
                        });
                });

            modelBuilder.Entity("GSF.Domain.Entities.Security.UserActivity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("OrigenOS")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("OrigenUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("UltimoAcceso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UltimoAccesoFallido")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Session");

                    b.HasIndex("UserId");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("sec_UserActivities", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Entities.Security.UserType", b =>
                {
                    b.Property<int>("Idm")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("sec_UserTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Idm = 1,
                            Code = "Standar",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Tipo de usuario default.",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = 1001,
                            Code = "Socio",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Usuario de socio",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        });
                });

            modelBuilder.Entity("GSF.Domain.Entities.Sistemas.Sistema", b =>
                {
                    b.Property<long>("Idm")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("sis_Sistemas", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Entities.Systems.DomainF", b =>
                {
                    b.Property<long>("Idm")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<int>("UserTypeIdm")
                        .HasColumnType("int");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("Session");

                    b.HasIndex("UserTypeIdm");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("sys_DomainFs", (string)null);

                    b.HasData(
                        new
                        {
                            Idm = 1L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Sistema Back Office",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Sistema Back Office",
                            UserTypeIdm = 1
                        },
                        new
                        {
                            Idm = 1001L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Usuario de socio",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Socio",
                            UserTypeIdm = 1001
                        });
                });

            modelBuilder.Entity("GSF.Domain.Entities.Systems.UserDomainF", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("DomainFIdm")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DomainFIdm");

                    b.HasIndex("Session");

                    b.HasIndex("UserId");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("sys_UserDomainFs", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            UserId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            DomainFIdm = 1L,
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            UserId = 2L
                        });
                });

            modelBuilder.Entity("GSF.Domain.Entities.Systems.UserExterno", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("DomainFIdm")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DomainFIdm");

                    b.HasIndex("Session");

                    b.HasIndex("UserId");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("sec_UserExternos", (string)null);

                    b.HasDiscriminator<string>("Tipo").IsComplete(false).HasValue("UserExterno");
                });

            modelBuilder.Entity("GSF.Domain.Notifications.ConfiguracionNotificacion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasMaxLength(20000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DefaultGetNotificationsProcedure")
                        .HasMaxLength(20000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<long>("DomainFIdm")
                        .HasColumnType("bigint");

                    b.Property<int>("FrecuenciaHora")
                        .HasColumnType("int");

                    b.Property<int>("FrecuenciaMinutos")
                        .HasColumnType("int");

                    b.Property<int>("FrecuenciaSegundos")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("HoraFin")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HoraInicio")
                        .HasColumnType("time");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Prioridad")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<long>("TipoNotificacionIdm")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UltimoEnvio")
                        .HasColumnType("datetime2");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DomainFIdm");

                    b.HasIndex("Session");

                    b.HasIndex("TipoNotificacionIdm");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("ntf_ConfiguracionNotificaciones", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Activo = true,
                            Body = "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:o=\"urn:schemas-microsoft-com:office:office\" style=\"width:100%;font-family:helvetica, 'helvetica neue', arial, verdana, sans-serif;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;padding:0;Margin:0\">\r\n<head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta content=\"width=device-width, initial-scale=1\" name=\"viewport\" />\r\n    <meta name=\"x-apple-disable-message-reformatting\" />\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n    <meta content=\"telephone=no\" name=\"format-detection\" />\r\n    <title>Nueva plantilla de correo electrónico 2020-11-03</title> <!--[if (mso 16)]><style type=\"text/css\">    a {text-decoration: none;}    </style><![endif]--> <!--[if gte mso 9]><style>sup { font-size: 100% !important; }</style><![endif]-->\r\n    <!--[if gte mso 9]><xml> <o:OfficeDocumentSettings> <o:AllowPNG>\r\n    </o:AllowPNG> <o:PixelsPerInch>96</o:PixelsPerInch> </o:OfficeDocumentSettings> </xml><![endif]-->\r\n    <style type=\"text/css\">\r\n        #outlook a {\r\n            padding: 0;\r\n        }\r\n\r\n        .ExternalClass {\r\n            width: 100%;\r\n        }\r\n\r\n            .ExternalClass, .ExternalClass p, .ExternalClass span, .ExternalClass font, .ExternalClass td, .ExternalClass div {\r\n                line-height: 100%;\r\n            }\r\n\r\n        .es-button {\r\n            mso-style-priority: 100 !important;\r\n            text-decoration: none !important;\r\n        }\r\n\r\n        a[x-apple-data-detectors] {\r\n            color: inherit !important;\r\n            text-decoration: none !important;\r\n            font-size: inherit !important;\r\n            font-family: inherit !important;\r\n            font-weight: inherit !important;\r\n            line-height: inherit !important;\r\n        }\r\n\r\n        .es-desk-hidden {\r\n            display: none;\r\n            float: left;\r\n            overflow: hidden;\r\n            width: 0;\r\n            max-height: 0;\r\n            line-height: 0;\r\n            mso-hide: all;\r\n        }\r\n\r\n        @media only screen and (max-width:600px) {\r\n            p, ul li, ol li, a {\r\n                font-size: 14px !important;\r\n                line-height: 150% !important\r\n            }\r\n\r\n            h1 {\r\n                font-size: 28px !important;\r\n                text-align: center;\r\n                line-height: 120% !important\r\n            }\r\n\r\n            h2 {\r\n                font-size: 26px !important;\r\n                text-align: center;\r\n                line-height: 120% !important\r\n            }\r\n\r\n            h3 {\r\n                font-size: 20px !important;\r\n                text-align: center;\r\n                line-height: 120% !important\r\n            }\r\n\r\n            h1 a {\r\n                font-size: 28px !important\r\n            }\r\n\r\n            h2 a {\r\n                font-size: 26px !important\r\n            }\r\n\r\n            h3 a {\r\n                font-size: 20px !important\r\n            }\r\n\r\n            .es-menu td a {\r\n                font-size: 12px !important\r\n            }\r\n\r\n            .es-header-body p, .es-header-body ul li, .es-header-body ol li, .es-header-body a {\r\n                font-size: 12px !important\r\n            }\r\n\r\n            .es-footer-body p, .es-footer-body ul li, .es-footer-body ol li, .es-footer-body a {\r\n                font-size: 14px !important\r\n            }\r\n\r\n            .es-infoblock p, .es-infoblock ul li, .es-infoblock ol li, .es-infoblock a {\r\n                font-size: 11px !important\r\n            }\r\n\r\n            *[class=\"gmail-fix\"] {\r\n                display: none !important\r\n            }\r\n\r\n            .es-m-txt-c, .es-m-txt-c h1, .es-m-txt-c h2, .es-m-txt-c h3 {\r\n                text-align: center !important\r\n            }\r\n\r\n            .es-m-txt-r, .es-m-txt-r h1, .es-m-txt-r h2, .es-m-txt-r h3 {\r\n                text-align: right !important\r\n            }\r\n\r\n            .es-m-txt-l, .es-m-txt-l h1, .es-m-txt-l h2, .es-m-txt-l h3 {\r\n                text-align: left !important\r\n            }\r\n\r\n                .es-m-txt-r img, .es-m-txt-c img, .es-m-txt-l img {\r\n                    display: inline !important\r\n                }\r\n\r\n            .es-button-border {\r\n                display: block !important\r\n            }\r\n\r\n            a.es-button {\r\n                font-size: 14px !important;\r\n                display: block !important;\r\n                border-left-width: 0px !important;\r\n                border-right-width: 0px !important\r\n            }\r\n\r\n            .es-btn-fw {\r\n                border-width: 10px 0px !important;\r\n                text-align: center !important\r\n            }\r\n\r\n            .es-adaptive table, .es-btn-fw, .es-btn-fw-brdr, .es-left, .es-right {\r\n                width: 100% !important\r\n            }\r\n\r\n            .es-content table, .es-header table, .es-footer table, .es-content, .es-footer, .es-header {\r\n                width: 100% !important;\r\n                max-width: 600px !important\r\n            }\r\n\r\n            .es-adapt-td {\r\n                display: block !important;\r\n                width: 100% !important\r\n            }\r\n\r\n            .adapt-img {\r\n                width: 100% !important;\r\n                height: auto !important\r\n            }\r\n\r\n            .es-m-p0 {\r\n                padding: 0px !important\r\n            }\r\n\r\n            .es-m-p0r {\r\n                padding-right: 0px !important\r\n            }\r\n\r\n            .es-m-p0l {\r\n                padding-left: 0px !important\r\n            }\r\n\r\n            .es-m-p0t {\r\n                padding-top: 0px !important\r\n            }\r\n\r\n            .es-m-p0b {\r\n                padding-bottom: 0 !important\r\n            }\r\n\r\n            .es-m-p20b {\r\n                padding-bottom: 20px !important\r\n            }\r\n\r\n            .es-mobile-hidden, .es-hidden {\r\n                display: none !important\r\n            }\r\n\r\n            tr.es-desk-hidden, td.es-desk-hidden, table.es-desk-hidden {\r\n                width: auto !important;\r\n                overflow: visible !important;\r\n                float: none !important;\r\n                max-height: inherit !important;\r\n                line-height: inherit !important\r\n            }\r\n\r\n            tr.es-desk-hidden {\r\n                display: table-row !important\r\n            }\r\n\r\n            table.es-desk-hidden {\r\n                display: table !important\r\n            }\r\n\r\n            td.es-desk-menu-hidden {\r\n                display: table-cell !important\r\n            }\r\n\r\n            .es-menu td {\r\n                width: 1% !important\r\n            }\r\n\r\n            table.es-table-not-adapt, .esd-block-html table {\r\n                width: auto !important\r\n            }\r\n\r\n            table.es-social {\r\n                display: inline-block !important\r\n            }\r\n\r\n                table.es-social td {\r\n                    display: inline-block !important\r\n                }\r\n        }\r\n    </style>\r\n</head>\r\n<body style=\"width:100%;font-family:helvetica, 'helvetica neue', arial, verdana, sans-serif;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;padding:0;Margin:0\">\r\n    <div class=\"es-wrapper-color\" style=\"background-color:#F6F6F6\">\r\n        <!--[if gte mso 9]><v:background xmlns:v=\"urn:schemas-microsoft-com:vml\" fill=\"t\"> <v:fill type=\"tile\" color=\"#f6f6f6\"></v:fill> </v:background><![endif]-->\r\n        <table class=\"es-wrapper\" width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;padding:0;Margin:0;width:100%;height:100%;background-repeat:repeat;background-position:center top\">\r\n            <tr style=\"border-collapse:collapse\">\r\n                <td valign=\"top\" style=\"padding:0;Margin:0\">\r\n                    <table cellpadding=\"0\" cellspacing=\"0\" class=\"es-content\" align=\"center\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;table-layout:fixed !important;width:100%\">\r\n                        <tr style=\"border-collapse:collapse\">\r\n                            <td align=\"center\" style=\"padding:0;Margin:0\">\r\n                                <table bgcolor=\"#ffffff\" class=\"es-content-body\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;background-color:#FFFFFF;width:600px\">\r\n                                    <tr style=\"border-collapse:collapse\">\r\n                                        <td align=\"left\" style=\"Margin:0;padding-bottom:10px;padding-top:20px;padding-left:20px;padding-right:20px;background-position:center top\">\r\n                                            <table cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px\">\r\n                                                <tr style=\"border-collapse:collapse\">\r\n                                                    <td align=\"center\" valign=\"top\" style=\"padding:0;Margin:0;width:560px\">\r\n                                                        <table cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;background-position:left top\" role=\"presentation\">\r\n                                                            <tr style=\"border-collapse:collapse\">\r\n                                                                <td align=\"center\" class=\"es-m-txt-c\" style=\"padding:0;Margin:0;padding-bottom:10px\">\r\n                                                                    <br />\r\n                                                                    <h2>{application}</h2>\r\n                                                                    <h2 style=\"margin-top:120px;line-height:29px;mso-line-height-rule:exactly;font-family:helvetica, 'helvetica neue', arial, verdana, sans-serif;font-size:24px;font-style:normal;font-weight:bold;color:#040404\">\r\n                                                                        <img class=\"adapt-img\" src=\"{root}/img/GsfLogoFondoNavbar.jpg\" style=\"display:block;border:0;outline:none;text-decoration:none;-ms-interpolation-mode:bicubic\" /><br />{seHaSolicitadoUnCambioDePassword}\r\n                                                                    </h2>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            <tr style=\"border-collapse:collapse\"> <td align=\"center\" style=\"padding:0;Margin:0;font-size:0px\"><a target=\"_blank\" href=\"#\" style=\"-webkit-text-size-adjust:none;-ms-text-size-adjust:none;mso-line-height-rule:exactly;font-family:helvetica, 'helvetica neue', arial, verdana, sans-serif;font-size:14px;text-decoration:underline;color:#040404\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/9/97/Avast_Passwords_logo.png\" alt=alt alt=alt style=\"display:block;border:0;outline:none;text-decoration:none;-ms-interpolation-mode:bicubic\" width=\"200\" /></a></td> </tr>\r\n                                                            <tr style=\"border-collapse:collapse\">\r\n                                                                <td align=\"center\" style=\"Margin:0;padding-top:10px;padding-left:10px;padding-right:10px;padding-bottom:15px\">\r\n                                                                    <span class=\"es-button-border\" style=\"border-style:solid;border-color:#38C2F1;background:#37EC86;border-width:0px;display:inline-block;border-radius:25px;width:auto\"><a href=\"{root}security/passwordrecovery?token={token}\" class=\"es-button\" target=\"_blank\" style=\"mso-style-priority:100 !important;text-decoration:none;-webkit-text-size-adjust:none;-ms-text-size-adjust:none;mso-line-height-rule:exactly;font-family:helvetica, 'helvetica neue', arial, verdana, sans-serif;font-size:18px;color:#FFFFFF;border-style:solid;border-color:#37EC86;border-width:10px 30px;display:inline-block;background:#37EC86;border-radius:25px;font-weight:bold;font-style:normal;line-height:22px;width:auto;text-align:center\">{recuperarMiContraseña}</a></span>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </table>\r\n                                        </td>\r\n                                    </tr>\r\n                                </table>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                    <table cellpadding=\"0\" cellspacing=\"0\" class=\"es-content\" align=\"center\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;table-layout:fixed !important;width:100%\">\r\n                        <tr style=\"border-collapse:collapse\">\r\n                            <td align=\"center\" style=\"padding:0;Margin:0\">\r\n                                <table bgcolor=\"#ffffff\" class=\"es-content-body\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;background-color:#FFFFFF;width:600px\">\r\n                                    <tr style=\"border-collapse:collapse\">\r\n                                        <td align=\"left\" style=\"padding:0;Margin:0;padding-top:20px;padding-left:20px;padding-right:20px\">\r\n                                            <table cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px\">\r\n                                                <tr style=\"border-collapse:collapse\">\r\n                                                    <td align=\"center\" valign=\"top\" style=\"padding:0;Margin:0;width:560px\">\r\n                                                        <table cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" role=\"presentation\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px\"> <tr style=\"border-collapse:collapse\"> <td style=\"padding:0;Margin:0\"> <div> Si este mail no fué solicitado, escribir a <a href=\"mailto:soporte@globalsis.com.ar\" style=\"-webkit-text-size-adjust:none;-ms-text-size-adjust:none;mso-line-height-rule:exactly;font-family:helvetica, 'helvetica neue', arial, verdana, sans-serif;font-size:14px;text-decoration:underline;color:#040404\">Soporte</a></div><br /></td> </tr> </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </table>\r\n                                        </td>\r\n                                    </tr>\r\n                                </table>\r\n                            </td>\r\n                        </tr>\r\n                    </table> <table cellpadding=\"0\" cellspacing=\"0\" class=\"es-content\" align=\"center\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;table-layout:fixed !important;width:100%\">\r\n                        <tr style=\"border-collapse:collapse\">\r\n                            <td align=\"center\" style=\"padding:0;Margin:0\">\r\n                                <table bgcolor=\"transparent\" class=\"es-content-body\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;background-color:transparent;width:600px\">\r\n                                    <tr style=\"border-collapse:collapse\">\r\n                                        <td align=\"left\" style=\"Margin:0;padding-left:20px;padding-right:20px;padding-top:30px;padding-bottom:30px;background-position:left top\">\r\n                                            <table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px\">\r\n                                                <tr style=\"border-collapse:collapse\">\r\n                                                    <td valign=\"top\" align=\"center\" style=\"padding:0;Margin:0;width:560px\">\r\n                                                        <table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" role=\"presentation\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px\">\r\n                                                            <tr style=\"border-collapse:collapse\">\r\n                                                                <td align=\"center\" style=\"padding:0;Margin:0;font-size:0px\">\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </table>\r\n                                        </td>\r\n                                    </tr>\r\n                                </table>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </td>\r\n            </tr>\r\n        </table>\r\n    </div>\r\n</body>\r\n\r\n</html>",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Recuperación de Contraseña",
                            DomainFIdm = 1L,
                            FrecuenciaHora = 0,
                            FrecuenciaMinutos = 0,
                            FrecuenciaSegundos = 45,
                            HoraFin = new TimeSpan(0, 0, 0, 0, 0),
                            HoraInicio = new TimeSpan(0, 0, 0, 0, 0),
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Prioridad = 1,
                            Subject = "Recuperación de Contraseña",
                            TipoNotificacionIdm = 1L,
                            UltimoEnvio = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2L,
                            Activo = true,
                            Body = "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:o=\"urn:schemas-microsoft-com:office:office\" style=\"width:100%;font-family:helvetica, 'helvetica neue', arial, verdana, sans-serif;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;padding:0;Margin:0\">\r\n<head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta content=\"width=device-width, initial-scale=1\" name=\"viewport\" />\r\n    <meta name=\"x-apple-disable-message-reformatting\" />\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n    <meta content=\"telephone=no\" name=\"format-detection\" />\r\n    <title>Nueva plantilla de correo electrónico 2020-11-03</title> <!--[if (mso 16)]><style type=\"text/css\">    a {text-decoration: none;}    </style><![endif]--> <!--[if gte mso 9]><style>sup { font-size: 100% !important; }</style><![endif]-->\r\n    <!--[if gte mso 9]><xml> <o:OfficeDocumentSettings> <o:AllowPNG>\r\n    </o:AllowPNG> <o:PixelsPerInch>96</o:PixelsPerInch> </o:OfficeDocumentSettings> </xml><![endif]-->\r\n    <style type=\"text/css\">\r\n        #outlook a {\r\n            padding: 0;\r\n        }\r\n\r\n        .ExternalClass {\r\n            width: 100%;\r\n        }\r\n\r\n            .ExternalClass, .ExternalClass p, .ExternalClass span, .ExternalClass font, .ExternalClass td, .ExternalClass div {\r\n                line-height: 100%;\r\n            }\r\n\r\n        .es-button {\r\n            mso-style-priority: 100 !important;\r\n            text-decoration: none !important;\r\n        }\r\n\r\n        a[x-apple-data-detectors] {\r\n            color: inherit !important;\r\n            text-decoration: none !important;\r\n            font-size: inherit !important;\r\n            font-family: inherit !important;\r\n            font-weight: inherit !important;\r\n            line-height: inherit !important;\r\n        }\r\n\r\n        .es-desk-hidden {\r\n            display: none;\r\n            float: left;\r\n            overflow: hidden;\r\n            width: 0;\r\n            max-height: 0;\r\n            line-height: 0;\r\n            mso-hide: all;\r\n        }\r\n\r\n        @media only screen and (max-width:600px) {\r\n            p, ul li, ol li, a {\r\n                font-size: 14px !important;\r\n                line-height: 150% !important\r\n            }\r\n\r\n            h1 {\r\n                font-size: 28px !important;\r\n                text-align: center;\r\n                line-height: 120% !important\r\n            }\r\n\r\n            h2 {\r\n                font-size: 26px !important;\r\n                text-align: center;\r\n                line-height: 120% !important\r\n            }\r\n\r\n            h3 {\r\n                font-size: 20px !important;\r\n                text-align: center;\r\n                line-height: 120% !important\r\n            }\r\n\r\n            h1 a {\r\n                font-size: 28px !important\r\n            }\r\n\r\n            h2 a {\r\n                font-size: 26px !important\r\n            }\r\n\r\n            h3 a {\r\n                font-size: 20px !important\r\n            }\r\n\r\n            .es-menu td a {\r\n                font-size: 12px !important\r\n            }\r\n\r\n            .es-header-body p, .es-header-body ul li, .es-header-body ol li, .es-header-body a {\r\n                font-size: 12px !important\r\n            }\r\n\r\n            .es-footer-body p, .es-footer-body ul li, .es-footer-body ol li, .es-footer-body a {\r\n                font-size: 14px !important\r\n            }\r\n\r\n            .es-infoblock p, .es-infoblock ul li, .es-infoblock ol li, .es-infoblock a {\r\n                font-size: 11px !important\r\n            }\r\n\r\n            *[class=\"gmail-fix\"] {\r\n                display: none !important\r\n            }\r\n\r\n            .es-m-txt-c, .es-m-txt-c h1, .es-m-txt-c h2, .es-m-txt-c h3 {\r\n                text-align: center !important\r\n            }\r\n\r\n            .es-m-txt-r, .es-m-txt-r h1, .es-m-txt-r h2, .es-m-txt-r h3 {\r\n                text-align: right !important\r\n            }\r\n\r\n            .es-m-txt-l, .es-m-txt-l h1, .es-m-txt-l h2, .es-m-txt-l h3 {\r\n                text-align: left !important\r\n            }\r\n\r\n                .es-m-txt-r img, .es-m-txt-c img, .es-m-txt-l img {\r\n                    display: inline !important\r\n                }\r\n\r\n            .es-button-border {\r\n                display: block !important\r\n            }\r\n\r\n            a.es-button {\r\n                font-size: 14px !important;\r\n                display: block !important;\r\n                border-left-width: 0px !important;\r\n                border-right-width: 0px !important\r\n            }\r\n\r\n            .es-btn-fw {\r\n                border-width: 10px 0px !important;\r\n                text-align: center !important\r\n            }\r\n\r\n            .es-adaptive table, .es-btn-fw, .es-btn-fw-brdr, .es-left, .es-right {\r\n                width: 100% !important\r\n            }\r\n\r\n            .es-content table, .es-header table, .es-footer table, .es-content, .es-footer, .es-header {\r\n                width: 100% !important;\r\n                max-width: 600px !important\r\n            }\r\n\r\n            .es-adapt-td {\r\n                display: block !important;\r\n                width: 100% !important\r\n            }\r\n\r\n            .adapt-img {\r\n                width: 100% !important;\r\n                height: auto !important\r\n            }\r\n\r\n            .es-m-p0 {\r\n                padding: 0px !important\r\n            }\r\n\r\n            .es-m-p0r {\r\n                padding-right: 0px !important\r\n            }\r\n\r\n            .es-m-p0l {\r\n                padding-left: 0px !important\r\n            }\r\n\r\n            .es-m-p0t {\r\n                padding-top: 0px !important\r\n            }\r\n\r\n            .es-m-p0b {\r\n                padding-bottom: 0 !important\r\n            }\r\n\r\n            .es-m-p20b {\r\n                padding-bottom: 20px !important\r\n            }\r\n\r\n            .es-mobile-hidden, .es-hidden {\r\n                display: none !important\r\n            }\r\n\r\n            tr.es-desk-hidden, td.es-desk-hidden, table.es-desk-hidden {\r\n                width: auto !important;\r\n                overflow: visible !important;\r\n                float: none !important;\r\n                max-height: inherit !important;\r\n                line-height: inherit !important\r\n            }\r\n\r\n            tr.es-desk-hidden {\r\n                display: table-row !important\r\n            }\r\n\r\n            table.es-desk-hidden {\r\n                display: table !important\r\n            }\r\n\r\n            td.es-desk-menu-hidden {\r\n                display: table-cell !important\r\n            }\r\n\r\n            .es-menu td {\r\n                width: 1% !important\r\n            }\r\n\r\n            table.es-table-not-adapt, .esd-block-html table {\r\n                width: auto !important\r\n            }\r\n\r\n            table.es-social {\r\n                display: inline-block !important\r\n            }\r\n\r\n                table.es-social td {\r\n                    display: inline-block !important\r\n                }\r\n        }\r\n    </style>\r\n</head>\r\n<body style=\"width:100%;font-family:helvetica, 'helvetica neue', arial, verdana, sans-serif;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;padding:0;Margin:0\">\r\n    <div class=\"es-wrapper-color\" style=\"background-color:#F6F6F6\">\r\n        <!--[if gte mso 9]><v:background xmlns:v=\"urn:schemas-microsoft-com:vml\" fill=\"t\"> <v:fill type=\"tile\" color=\"#f6f6f6\"></v:fill> </v:background><![endif]-->\r\n        <table class=\"es-wrapper\" width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;padding:0;Margin:0;width:100%;height:100%;background-repeat:repeat;background-position:center top\">\r\n            <tr style=\"border-collapse:collapse\">\r\n                <td valign=\"top\" style=\"padding:0;Margin:0\">\r\n                    <table cellpadding=\"0\" cellspacing=\"0\" class=\"es-content\" align=\"center\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;table-layout:fixed !important;width:100%\">\r\n                        <tr style=\"border-collapse:collapse\">\r\n                            <td align=\"center\" style=\"padding:0;Margin:0\">\r\n                                <table bgcolor=\"#ffffff\" class=\"es-content-body\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;background-color:#FFFFFF;width:600px\">\r\n                                    <tr style=\"border-collapse:collapse\">\r\n                                        <td align=\"left\" style=\"Margin:0;padding-bottom:10px;padding-top:20px;padding-left:20px;padding-right:20px;background-position:center top\">\r\n                                            <table cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px\">\r\n                                                <tr style=\"border-collapse:collapse\">\r\n                                                    <td align=\"center\" valign=\"top\" style=\"padding:0;Margin:0;width:560px\">\r\n                                                        <table cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;background-position:left top\" role=\"presentation\">\r\n                                                            <tr style=\"border-collapse:collapse\">\r\n                                                                <td align=\"center\" class=\"es-m-txt-c\" style=\"padding:0;Margin:0;padding-bottom:10px\">\r\n                                                                    <br />\r\n                                                                    <h2>{application}</h2>\r\n                                                                    <h2 style=\"margin-top:120px;line-height:29px;mso-line-height-rule:exactly;font-family:helvetica, 'helvetica neue', arial, verdana, sans-serif;font-size:24px;font-style:normal;font-weight:bold;color:#040404\">\r\n                                                                        <img class=\"adapt-img\" src=\"{root}/img/GsfLogoFondoNavbar.jpg\" style=\"display:block;border:0;outline:none;text-decoration:none;-ms-interpolation-mode:bicubic\" /><br />{seHaSolicitadoActivacionDeCuenta}\r\n                                                                    </h2>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            <tr style=\"border-collapse:collapse\"> <td align=\"center\" style=\"padding:0;Margin:0;font-size:0px\"><a target=\"_blank\" href=\"#\" style=\"-webkit-text-size-adjust:none;-ms-text-size-adjust:none;mso-line-height-rule:exactly;font-family:helvetica, 'helvetica neue', arial, verdana, sans-serif;font-size:14px;text-decoration:underline;color:#040404\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/9/97/Avast_Passwords_logo.png\" alt=alt alt=alt style=\"display:block;border:0;outline:none;text-decoration:none;-ms-interpolation-mode:bicubic\" width=\"200\" /></a></td> </tr>\r\n                                                            <tr style=\"border-collapse:collapse\">\r\n                                                                <td align=\"center\" style=\"Margin:0;padding-top:10px;padding-left:10px;padding-right:10px;padding-bottom:15px\">\r\n                                                                    <span class=\"es-button-border\" style=\"border-style:solid;border-color:#38C2F1;background:#37EC86;border-width:0px;display:inline-block;border-radius:25px;width:auto\"><a href=\"{root}security/useractivation?token={token}\" class=\"es-button\" target=\"_blank\" style=\"mso-style-priority:100 !important;text-decoration:none;-webkit-text-size-adjust:none;-ms-text-size-adjust:none;mso-line-height-rule:exactly;font-family:helvetica, 'helvetica neue', arial, verdana, sans-serif;font-size:18px;color:#FFFFFF;border-style:solid;border-color:#37EC86;border-width:10px 30px;display:inline-block;background:#37EC86;border-radius:25px;font-weight:bold;font-style:normal;line-height:22px;width:auto;text-align:center\">{activarMiCuenta}</a></span>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </table>\r\n                                        </td>\r\n                                    </tr>\r\n                                </table>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                    <table cellpadding=\"0\" cellspacing=\"0\" class=\"es-content\" align=\"center\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;table-layout:fixed !important;width:100%\">\r\n                        <tr style=\"border-collapse:collapse\">\r\n                            <td align=\"center\" style=\"padding:0;Margin:0\">\r\n                                <table bgcolor=\"#ffffff\" class=\"es-content-body\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;background-color:#FFFFFF;width:600px\">\r\n                                    <tr style=\"border-collapse:collapse\">\r\n                                        <td align=\"left\" style=\"padding:0;Margin:0;padding-top:20px;padding-left:20px;padding-right:20px\">\r\n                                            <table cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px\">\r\n                                                <tr style=\"border-collapse:collapse\">\r\n                                                    <td align=\"center\" valign=\"top\" style=\"padding:0;Margin:0;width:560px\">\r\n                                                        <table cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" role=\"presentation\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px\"> <tr style=\"border-collapse:collapse\"> <td style=\"padding:0;Margin:0\"> <div> Si este mail no fué solicitado, escribir a <a href=\"mailto:soporte@globalsis.com.ar\" style=\"-webkit-text-size-adjust:none;-ms-text-size-adjust:none;mso-line-height-rule:exactly;font-family:helvetica, 'helvetica neue', arial, verdana, sans-serif;font-size:14px;text-decoration:underline;color:#040404\">Soporte</a></div><br /></td> </tr> </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </table>\r\n                                        </td>\r\n                                    </tr>\r\n                                </table>\r\n                            </td>\r\n                        </tr>\r\n                    </table> <table cellpadding=\"0\" cellspacing=\"0\" class=\"es-content\" align=\"center\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;table-layout:fixed !important;width:100%\">\r\n                        <tr style=\"border-collapse:collapse\">\r\n                            <td align=\"center\" style=\"padding:0;Margin:0\">\r\n                                <table bgcolor=\"transparent\" class=\"es-content-body\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;background-color:transparent;width:600px\">\r\n                                    <tr style=\"border-collapse:collapse\">\r\n                                        <td align=\"left\" style=\"Margin:0;padding-left:20px;padding-right:20px;padding-top:30px;padding-bottom:30px;background-position:left top\">\r\n                                            <table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px\">\r\n                                                <tr style=\"border-collapse:collapse\">\r\n                                                    <td valign=\"top\" align=\"center\" style=\"padding:0;Margin:0;width:560px\">\r\n                                                        <table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" role=\"presentation\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px\">\r\n                                                            <tr style=\"border-collapse:collapse\">\r\n                                                                <td align=\"center\" style=\"padding:0;Margin:0;font-size:0px\">\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </table>\r\n                                        </td>\r\n                                    </tr>\r\n                                </table>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </td>\r\n            </tr>\r\n        </table>\r\n    </div>\r\n</body>\r\n\r\n</html>\r\n",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Activación de Usuario",
                            DomainFIdm = 1L,
                            FrecuenciaHora = 0,
                            FrecuenciaMinutos = 0,
                            FrecuenciaSegundos = 45,
                            HoraFin = new TimeSpan(0, 0, 0, 0, 0),
                            HoraInicio = new TimeSpan(0, 0, 0, 0, 0),
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Prioridad = 1,
                            Subject = "Activación de Usuario",
                            TipoNotificacionIdm = 2L,
                            UltimoEnvio = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3L,
                            Activo = true,
                            Body = "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:o=\"urn:schemas-microsoft-com:office:office\" style=\"width:100%;font-family:helvetica, 'helvetica neue', arial, verdana, sans-serif;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;padding:0;Margin:0\">\r\n<head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta content=\"width=device-width, initial-scale=1\" name=\"viewport\" />\r\n    <meta name=\"x-apple-disable-message-reformatting\" />\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n    <meta content=\"telephone=no\" name=\"format-detection\" />\r\n    <title>Error Log</title>\r\n    <!--[if (mso 16)]><style type=\"text/css\">    a {text-decoration: none;}    </style><![endif]--> <!--[if gte mso 9]><style>sup { font-size: 100% !important; }</style><![endif]-->\r\n    <!--[if gte mso 9]><xml> <o:OfficeDocumentSettings> <o:AllowPNG>\r\n    </o:AllowPNG> <o:PixelsPerInch>96</o:PixelsPerInch> </o:OfficeDocumentSettings> </xml><![endif]-->\r\n    <style type=\"text/css\">\r\n        #outlook a {\r\n            padding: 0;\r\n        }\r\n\r\n        .ExternalClass {\r\n            width: 100%;\r\n        }\r\n\r\n            .ExternalClass, .ExternalClass p, .ExternalClass span, .ExternalClass font, .ExternalClass td, .ExternalClass div {\r\n                line-height: 100%;\r\n            }\r\n\r\n        .es-button {\r\n            mso-style-priority: 100 !important;\r\n            text-decoration: none !important;\r\n        }\r\n\r\n        a[x-apple-data-detectors] {\r\n            color: inherit !important;\r\n            text-decoration: none !important;\r\n            font-size: inherit !important;\r\n            font-family: inherit !important;\r\n            font-weight: inherit !important;\r\n            line-height: inherit !important;\r\n        }\r\n\r\n        .es-desk-hidden {\r\n            display: none;\r\n            float: left;\r\n            overflow: hidden;\r\n            width: 0;\r\n            max-height: 0;\r\n            line-height: 0;\r\n            mso-hide: all;\r\n        }\r\n\r\n        @media only screen and (max-width:600px) {\r\n            p, ul li, ol li, a {\r\n                font-size: 14px !important;\r\n                line-height: 150% !important\r\n            }\r\n\r\n            h1 {\r\n                font-size: 28px !important;\r\n                text-align: center;\r\n                line-height: 120% !important\r\n            }\r\n\r\n            h2 {\r\n                font-size: 26px !important;\r\n                text-align: center;\r\n                line-height: 120% !important\r\n            }\r\n\r\n            h3 {\r\n                font-size: 20px !important;\r\n                text-align: center;\r\n                line-height: 120% !important\r\n            }\r\n\r\n            h1 a {\r\n                font-size: 28px !important\r\n            }\r\n\r\n            h2 a {\r\n                font-size: 26px !important\r\n            }\r\n\r\n            h3 a {\r\n                font-size: 20px !important\r\n            }\r\n\r\n            .es-menu td a {\r\n                font-size: 12px !important\r\n            }\r\n\r\n            .es-header-body p, .es-header-body ul li, .es-header-body ol li, .es-header-body a {\r\n                font-size: 12px !important\r\n            }\r\n\r\n            .es-footer-body p, .es-footer-body ul li, .es-footer-body ol li, .es-footer-body a {\r\n                font-size: 14px !important\r\n            }\r\n\r\n            .es-infoblock p, .es-infoblock ul li, .es-infoblock ol li, .es-infoblock a {\r\n                font-size: 11px !important\r\n            }\r\n\r\n            *[class=\"gmail-fix\"] {\r\n                display: none !important\r\n            }\r\n\r\n            .es-m-txt-c, .es-m-txt-c h1, .es-m-txt-c h2, .es-m-txt-c h3 {\r\n                text-align: center !important\r\n            }\r\n\r\n            .es-m-txt-r, .es-m-txt-r h1, .es-m-txt-r h2, .es-m-txt-r h3 {\r\n                text-align: right !important\r\n            }\r\n\r\n            .es-m-txt-l, .es-m-txt-l h1, .es-m-txt-l h2, .es-m-txt-l h3 {\r\n                text-align: left !important\r\n            }\r\n\r\n                .es-m-txt-r img, .es-m-txt-c img, .es-m-txt-l img {\r\n                    display: inline !important\r\n                }\r\n\r\n            .es-button-border {\r\n                display: block !important\r\n            }\r\n\r\n            a.es-button {\r\n                font-size: 14px !important;\r\n                display: block !important;\r\n                border-left-width: 0px !important;\r\n                border-right-width: 0px !important\r\n            }\r\n\r\n            .es-btn-fw {\r\n                border-width: 10px 0px !important;\r\n                text-align: center !important\r\n            }\r\n\r\n            .es-adaptive table, .es-btn-fw, .es-btn-fw-brdr, .es-left, .es-right {\r\n                width: 100% !important\r\n            }\r\n\r\n            .es-content table, .es-header table, .es-footer table, .es-content, .es-footer, .es-header {\r\n                width: 100% !important;\r\n                max-width: 600px !important\r\n            }\r\n\r\n            .es-adapt-td {\r\n                display: block !important;\r\n                width: 100% !important\r\n            }\r\n\r\n            .adapt-img {\r\n                width: 100% !important;\r\n                height: auto !important\r\n            }\r\n\r\n            .es-m-p0 {\r\n                padding: 0px !important\r\n            }\r\n\r\n            .es-m-p0r {\r\n                padding-right: 0px !important\r\n            }\r\n\r\n            .es-m-p0l {\r\n                padding-left: 0px !important\r\n            }\r\n\r\n            .es-m-p0t {\r\n                padding-top: 0px !important\r\n            }\r\n\r\n            .es-m-p0b {\r\n                padding-bottom: 0 !important\r\n            }\r\n\r\n            .es-m-p20b {\r\n                padding-bottom: 20px !important\r\n            }\r\n\r\n            .es-mobile-hidden, .es-hidden {\r\n                display: none !important\r\n            }\r\n\r\n            tr.es-desk-hidden, td.es-desk-hidden, table.es-desk-hidden {\r\n                width: auto !important;\r\n                overflow: visible !important;\r\n                float: none !important;\r\n                max-height: inherit !important;\r\n                line-height: inherit !important\r\n            }\r\n\r\n            tr.es-desk-hidden {\r\n                display: table-row !important\r\n            }\r\n\r\n            table.es-desk-hidden {\r\n                display: table !important\r\n            }\r\n\r\n            td.es-desk-menu-hidden {\r\n                display: table-cell !important\r\n            }\r\n\r\n            .es-menu td {\r\n                width: 1% !important\r\n            }\r\n\r\n            table.es-table-not-adapt, .esd-block-html table {\r\n                width: auto !important\r\n            }\r\n\r\n            table.es-social {\r\n                display: inline-block !important\r\n            }\r\n\r\n                table.es-social td {\r\n                    display: inline-block !important\r\n                }\r\n        }\r\n    </style>\r\n</head>\r\n<body style=\"width:100%;font-family:helvetica, 'helvetica neue', arial, verdana, sans-serif;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;padding:0;Margin:0\">\r\n    <div class=\"es-wrapper-color\" style=\"background-color:#F6F6F6\">\r\n        <!--[if gte mso 9]><v:background xmlns:v=\"urn:schemas-microsoft-com:vml\" fill=\"t\"> <v:fill type=\"tile\" color=\"#f6f6f6\"></v:fill> </v:background><![endif]-->\r\n        <table class=\"es-wrapper\" width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;padding:0;Margin:0;width:100%;height:100%;background-repeat:repeat;background-position:center top\">\r\n            <tr style=\"border-collapse:collapse\">\r\n                <td valign=\"top\" style=\"padding:0;Margin:0\">\r\n                    <table cellpadding=\"0\" cellspacing=\"0\" class=\"es-content\" align=\"center\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;table-layout:fixed !important;width:100%\">\r\n                        <tr style=\"border-collapse:collapse\">\r\n                            <td align=\"center\" style=\"padding:0;Margin:0\">\r\n                                <table bgcolor=\"#ffffff\" class=\"es-content-body\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;background-color:#FFFFFF;width:600px\">\r\n                                    <tr style=\"border-collapse:collapse\">\r\n                                        <td align=\"left\" style=\"Margin:0;padding-bottom:10px;padding-top:20px;padding-left:20px;padding-right:20px;background-position:center top\">\r\n                                            <table cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px\">\r\n                                                <tr style=\"border-collapse:collapse\">\r\n                                                    <td align=\"center\" valign=\"top\" style=\"padding:0;Margin:0;width:560px\">\r\n                                                        <table cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;background-position:left top\" role=\"presentation\">\r\n                                                            <tr style=\"border-collapse:collapse\">\r\n                                                                <td align=\"center\" class=\"es-m-txt-c\" style=\"padding:0;Margin:0;padding-bottom:10px\">\r\n                                                                    <br />\r\n                                                                    <h2>{System}</h2>\r\n                                                                    <h2 style=\"margin-top:120px;line-height:29px;mso-line-height-rule:exactly;font-family:helvetica, 'helvetica neue', arial, verdana, sans-serif;font-size:24px;font-style:normal;font-weight:bold;color:#040404\">\r\n                                                                        <img class=\"adapt-img\" src=\"{root}/img/GsfLogoFondoNavbar.jpg\" style=\"display:block;border:0;outline:none;text-decoration:none;-ms-interpolation-mode:bicubic\" /><br />\r\n                                                                    </h2>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </table>\r\n                                            <hr />\r\n                                            <table class=\"es-wrapper\" width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;padding:0;Margin:0;width:100%;height:100%;background-repeat:repeat;background-position: top\">\r\n                                                <tr style=\"border-collapse:collapse\">\r\n                                                    <td valign=\"top\" style=\"padding:0;Margin:0\">\r\n                                                        <p>\r\n                                                            <b>  Usuario: </b>{UserName}\r\n                                                        </p>\r\n                                                        <p>\r\n                                                            <b>Descripción de la acción realizada: </b>{UserDescription}\r\n                                                        </p>\r\n                                                        <p>\r\n                                                            <label for=\"logFilter\"><b>Seq Filter</b></label>\r\n                                                            <input type=\"text\" id=\"logFilter\" class=\"fobrrm-control\" readonly=readonly value=\"{LogFilter}\" />\r\n                                                        </p>\r\n                                                        <hr />\r\n                                                        <p>\r\n                                                            <b>  Path: </b>{Path}\r\n                                                        </p>\r\n                                                        <p>\r\n                                                            <b>  Exception Type: </b>{Type}\r\n                                                        </p>\r\n                                                        <p>\r\n                                                            <b>  Message: </b>{Message}\r\n                                                        </p>\r\n                                                        <p>\r\n                                                            <b>  StackTrace: </b>{StackTrace}\r\n                                                        </p>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </table>\r\n                                        </td>\r\n                                    </tr>\r\n                                </table>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n\r\n                </td>\r\n            </tr>\r\n        </table>\r\n    </div>\r\n</body>\r\n\r\n</html>\r\n",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Reporte de Errores",
                            DomainFIdm = 1L,
                            FrecuenciaHora = 0,
                            FrecuenciaMinutos = 0,
                            FrecuenciaSegundos = 45,
                            HoraFin = new TimeSpan(0, 0, 0, 0, 0),
                            HoraInicio = new TimeSpan(0, 0, 0, 0, 0),
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Prioridad = 1,
                            Subject = "Reporte de Errores",
                            TipoNotificacionIdm = 3L,
                            UltimoEnvio = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4L,
                            Activo = true,
                            Body = "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:o=\"urn:schemas-microsoft-com:office:office\" style=\"width:100%;font-family:helvetica, 'helvetica neue', arial, verdana, sans-serif;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;padding:0;Margin:0\">\r\n<head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta content=\"width=device-width, initial-scale=1\" name=\"viewport\" />\r\n    <meta name=\"x-apple-disable-message-reformatting\" />\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n    <meta content=\"telephone=no\" name=\"format-detection\" />\r\n    <title>Nueva plantilla de correo electrónico 2020-11-03</title> <!--[if (mso 16)]><style type=\"text/css\">    a {text-decoration: none;}    </style><![endif]--> <!--[if gte mso 9]><style>sup { font-size: 100% !important; }</style><![endif]-->\r\n    <!--[if gte mso 9]><xml> <o:OfficeDocumentSettings> <o:AllowPNG>\r\n    </o:AllowPNG> <o:PixelsPerInch>96</o:PixelsPerInch> </o:OfficeDocumentSettings> </xml><![endif]-->\r\n    <style type=\"text/css\">\r\n        #outlook a {\r\n            padding: 0;\r\n        }\r\n\r\n        .ExternalClass {\r\n            width: 100%;\r\n        }\r\n\r\n            .ExternalClass, .ExternalClass p, .ExternalClass span, .ExternalClass font, .ExternalClass td, .ExternalClass div {\r\n                line-height: 100%;\r\n            }\r\n\r\n        .es-button {\r\n            mso-style-priority: 100 !important;\r\n            text-decoration: none !important;\r\n        }\r\n\r\n        a[x-apple-data-detectors] {\r\n            color: inherit !important;\r\n            text-decoration: none !important;\r\n            font-size: inherit !important;\r\n            font-family: inherit !important;\r\n            font-weight: inherit !important;\r\n            line-height: inherit !important;\r\n        }\r\n\r\n        .es-desk-hidden {\r\n            display: none;\r\n            float: left;\r\n            overflow: hidden;\r\n            width: 0;\r\n            max-height: 0;\r\n            line-height: 0;\r\n            mso-hide: all;\r\n        }\r\n\r\n        @media only screen and (max-width:600px) {\r\n            p, ul li, ol li, a {\r\n                font-size: 14px !important;\r\n                line-height: 150% !important\r\n            }\r\n\r\n            h1 {\r\n                font-size: 28px !important;\r\n                text-align: center;\r\n                line-height: 120% !important\r\n            }\r\n\r\n            h2 {\r\n                font-size: 26px !important;\r\n                text-align: center;\r\n                line-height: 120% !important\r\n            }\r\n\r\n            h3 {\r\n                font-size: 20px !important;\r\n                text-align: center;\r\n                line-height: 120% !important\r\n            }\r\n\r\n            h1 a {\r\n                font-size: 28px !important\r\n            }\r\n\r\n            h2 a {\r\n                font-size: 26px !important\r\n            }\r\n\r\n            h3 a {\r\n                font-size: 20px !important\r\n            }\r\n\r\n            .es-menu td a {\r\n                font-size: 12px !important\r\n            }\r\n\r\n            .es-header-body p, .es-header-body ul li, .es-header-body ol li, .es-header-body a {\r\n                font-size: 12px !important\r\n            }\r\n\r\n            .es-footer-body p, .es-footer-body ul li, .es-footer-body ol li, .es-footer-body a {\r\n                font-size: 14px !important\r\n            }\r\n\r\n            .es-infoblock p, .es-infoblock ul li, .es-infoblock ol li, .es-infoblock a {\r\n                font-size: 11px !important\r\n            }\r\n\r\n            *[class=\"gmail-fix\"] {\r\n                display: none !important\r\n            }\r\n\r\n            .es-m-txt-c, .es-m-txt-c h1, .es-m-txt-c h2, .es-m-txt-c h3 {\r\n                text-align: center !important\r\n            }\r\n\r\n            .es-m-txt-r, .es-m-txt-r h1, .es-m-txt-r h2, .es-m-txt-r h3 {\r\n                text-align: right !important\r\n            }\r\n\r\n            .es-m-txt-l, .es-m-txt-l h1, .es-m-txt-l h2, .es-m-txt-l h3 {\r\n                text-align: left !important\r\n            }\r\n\r\n                .es-m-txt-r img, .es-m-txt-c img, .es-m-txt-l img {\r\n                    display: inline !important\r\n                }\r\n\r\n            .es-button-border {\r\n                display: block !important\r\n            }\r\n\r\n            a.es-button {\r\n                font-size: 14px !important;\r\n                display: block !important;\r\n                border-left-width: 0px !important;\r\n                border-right-width: 0px !important\r\n            }\r\n\r\n            .es-btn-fw {\r\n                border-width: 10px 0px !important;\r\n                text-align: center !important\r\n            }\r\n\r\n            .es-adaptive table, .es-btn-fw, .es-btn-fw-brdr, .es-left, .es-right {\r\n                width: 100% !important\r\n            }\r\n\r\n            .es-content table, .es-header table, .es-footer table, .es-content, .es-footer, .es-header {\r\n                width: 100% !important;\r\n                max-width: 600px !important\r\n            }\r\n\r\n            .es-adapt-td {\r\n                display: block !important;\r\n                width: 100% !important\r\n            }\r\n\r\n            .adapt-img {\r\n                width: 100% !important;\r\n                height: auto !important\r\n            }\r\n\r\n            .es-m-p0 {\r\n                padding: 0px !important\r\n            }\r\n\r\n            .es-m-p0r {\r\n                padding-right: 0px !important\r\n            }\r\n\r\n            .es-m-p0l {\r\n                padding-left: 0px !important\r\n            }\r\n\r\n            .es-m-p0t {\r\n                padding-top: 0px !important\r\n            }\r\n\r\n            .es-m-p0b {\r\n                padding-bottom: 0 !important\r\n            }\r\n\r\n            .es-m-p20b {\r\n                padding-bottom: 20px !important\r\n            }\r\n\r\n            .es-mobile-hidden, .es-hidden {\r\n                display: none !important\r\n            }\r\n\r\n            tr.es-desk-hidden, td.es-desk-hidden, table.es-desk-hidden {\r\n                width: auto !important;\r\n                overflow: visible !important;\r\n                float: none !important;\r\n                max-height: inherit !important;\r\n                line-height: inherit !important\r\n            }\r\n\r\n            tr.es-desk-hidden {\r\n                display: table-row !important\r\n            }\r\n\r\n            table.es-desk-hidden {\r\n                display: table !important\r\n            }\r\n\r\n            td.es-desk-menu-hidden {\r\n                display: table-cell !important\r\n            }\r\n\r\n            .es-menu td {\r\n                width: 1% !important\r\n            }\r\n\r\n            table.es-table-not-adapt, .esd-block-html table {\r\n                width: auto !important\r\n            }\r\n\r\n            table.es-social {\r\n                display: inline-block !important\r\n            }\r\n\r\n                table.es-social td {\r\n                    display: inline-block !important\r\n                }\r\n        }\r\n    </style>\r\n</head>\r\n<body style=\"width:100%;font-family:helvetica, 'helvetica neue', arial, verdana, sans-serif;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;padding:0;Margin:0\">\r\n    <div class=\"es-wrapper-color\" style=\"background-color:#F6F6F6\">\r\n        <!--[if gte mso 9]><v:background xmlns:v=\"urn:schemas-microsoft-com:vml\" fill=\"t\"> <v:fill type=\"tile\" color=\"#f6f6f6\"></v:fill> </v:background><![endif]-->\r\n        <table class=\"es-wrapper\" width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;padding:0;Margin:0;width:100%;height:100%;background-repeat:repeat;background-position:center top\">\r\n            <tr style=\"border-collapse:collapse\">\r\n                <td valign=\"top\" style=\"padding:0;Margin:0\">\r\n                    <table cellpadding=\"0\" cellspacing=\"0\" class=\"es-content\" align=\"center\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;table-layout:fixed !important;width:100%\">\r\n                        <tr style=\"border-collapse:collapse\">\r\n                            <td align=\"center\" style=\"padding:0;Margin:0\">\r\n                                <table bgcolor=\"#ffffff\" class=\"es-content-body\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;background-color:#FFFFFF;width:600px\">\r\n                                    <tr style=\"border-collapse:collapse\">\r\n                                        <td align=\"left\" style=\"Margin:0;padding-bottom:10px;padding-top:20px;padding-left:20px;padding-right:20px;background-position:center top\">\r\n                                            <table cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px\">\r\n                                                <tr style=\"border-collapse:collapse\">\r\n                                                    <td align=\"center\" valign=\"top\" style=\"padding:0;Margin:0;width:560px\">\r\n                                                        <table cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;background-position:left top\" role=\"presentation\">\r\n                                                            <tr style=\"border-collapse:collapse\">\r\n                                                                <td align=\"center\" class=\"es-m-txt-c\" style=\"padding:0;Margin:0;padding-bottom:10px\">\r\n                                                                    <br />\r\n                                                                    <h2>{application}</h2>\r\n                                                                    <h2 style=\"margin-top:120px;line-height:29px;mso-line-height-rule:exactly;font-family:helvetica, 'helvetica neue', arial, verdana, sans-serif;font-size:24px;font-style:normal;font-weight:bold;color:#040404\">\r\n                                                                        <img class=\"adapt-img\" src=\"{root}/img/GsfLogoFondoNavbar.jpg\" style=\"display:block;border:0;outline:none;text-decoration:none;-ms-interpolation-mode:bicubic\" /><br />{seHaSolicitadoActivacionDeCuenta}\r\n                                                                    </h2>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            <tr style=\"border-collapse:collapse\"> <td align=\"center\" style=\"padding:0;Margin:0;font-size:0px\"><a target=\"_blank\" href=\"#\" style=\"-webkit-text-size-adjust:none;-ms-text-size-adjust:none;mso-line-height-rule:exactly;font-family:helvetica, 'helvetica neue', arial, verdana, sans-serif;font-size:14px;text-decoration:underline;color:#040404\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/9/97/Avast_Passwords_logo.png\" alt=alt alt=alt style=\"display:block;border:0;outline:none;text-decoration:none;-ms-interpolation-mode:bicubic\" width=\"200\" /></a></td> </tr>\r\n                                                            <tr style=\"border-collapse:collapse\">\r\n                                                                <td align=\"center\" style=\"Margin:0;padding-top:10px;padding-left:10px;padding-right:10px;padding-bottom:15px\">\r\n                                                                    <span class=\"es-button-border\" style=\"border-style:solid;border-color:#38C2F1;background:#37EC86;border-width:0px;display:inline-block;border-radius:25px;width:auto\"><a href=\"demo.globalsis.com.ar/Proveedores/security/useractivation?token={token}\" class=\"es-button\" target=\"_blank\" style=\"mso-style-priority:100 !important;text-decoration:none;-webkit-text-size-adjust:none;-ms-text-size-adjust:none;mso-line-height-rule:exactly;font-family:helvetica, 'helvetica neue', arial, verdana, sans-serif;font-size:18px;color:#FFFFFF;border-style:solid;border-color:#37EC86;border-width:10px 30px;display:inline-block;background:#37EC86;border-radius:25px;font-weight:bold;font-style:normal;line-height:22px;width:auto;text-align:center\">{activarMiCuenta}</a></span>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </table>\r\n                                        </td>\r\n                                    </tr>\r\n                                </table>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                    <table cellpadding=\"0\" cellspacing=\"0\" class=\"es-content\" align=\"center\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;table-layout:fixed !important;width:100%\">\r\n                        <tr style=\"border-collapse:collapse\">\r\n                            <td align=\"center\" style=\"padding:0;Margin:0\">\r\n                                <table bgcolor=\"#ffffff\" class=\"es-content-body\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;background-color:#FFFFFF;width:600px\">\r\n                                    <tr style=\"border-collapse:collapse\">\r\n                                        <td align=\"left\" style=\"padding:0;Margin:0;padding-top:20px;padding-left:20px;padding-right:20px\">\r\n                                            <table cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px\">\r\n                                                <tr style=\"border-collapse:collapse\">\r\n                                                    <td align=\"center\" valign=\"top\" style=\"padding:0;Margin:0;width:560px\">\r\n                                                        <table cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" role=\"presentation\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px\"> <tr style=\"border-collapse:collapse\"> <td style=\"padding:0;Margin:0\"> <div> Si este mail no fué solicitado, escribir a <a href=\"mailto:soporte@globalsis.com.ar\" style=\"-webkit-text-size-adjust:none;-ms-text-size-adjust:none;mso-line-height-rule:exactly;font-family:helvetica, 'helvetica neue', arial, verdana, sans-serif;font-size:14px;text-decoration:underline;color:#040404\">Soporte</a></div><br /></td> </tr> </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </table>\r\n                                        </td>\r\n                                    </tr>\r\n                                </table>\r\n                            </td>\r\n                        </tr>\r\n                    </table> <table cellpadding=\"0\" cellspacing=\"0\" class=\"es-content\" align=\"center\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;table-layout:fixed !important;width:100%\">\r\n                        <tr style=\"border-collapse:collapse\">\r\n                            <td align=\"center\" style=\"padding:0;Margin:0\">\r\n                                <table bgcolor=\"transparent\" class=\"es-content-body\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;background-color:transparent;width:600px\">\r\n                                    <tr style=\"border-collapse:collapse\">\r\n                                        <td align=\"left\" style=\"Margin:0;padding-left:20px;padding-right:20px;padding-top:30px;padding-bottom:30px;background-position:left top\">\r\n                                            <table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px\">\r\n                                                <tr style=\"border-collapse:collapse\">\r\n                                                    <td valign=\"top\" align=\"center\" style=\"padding:0;Margin:0;width:560px\">\r\n                                                        <table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" role=\"presentation\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px\">\r\n                                                            <tr style=\"border-collapse:collapse\">\r\n                                                                <td align=\"center\" style=\"padding:0;Margin:0;font-size:0px\">\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </table>\r\n                                        </td>\r\n                                    </tr>\r\n                                </table>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </td>\r\n            </tr>\r\n        </table>\r\n    </div>\r\n</body>\r\n\r\n</html>",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Activación de usuario",
                            DomainFIdm = 1001L,
                            FrecuenciaHora = 0,
                            FrecuenciaMinutos = 0,
                            FrecuenciaSegundos = 45,
                            HoraFin = new TimeSpan(0, 0, 0, 0, 0),
                            HoraInicio = new TimeSpan(0, 0, 0, 0, 0),
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Prioridad = 1,
                            Subject = "Web Proveedores | Activación de usuario",
                            TipoNotificacionIdm = 2L,
                            UltimoEnvio = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6L,
                            Activo = true,
                            Body = "<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Vinculacion de Usuario con Empresa</title>\r\n</head>\r\n<body>\r\n    Se Vinculo tu usuario con la empresa {empresaPortalBody}\r\n</body>\r\n</html>",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Vinculación de usuario",
                            DomainFIdm = 1001L,
                            FrecuenciaHora = 0,
                            FrecuenciaMinutos = 0,
                            FrecuenciaSegundos = 45,
                            HoraFin = new TimeSpan(0, 0, 0, 0, 0),
                            HoraInicio = new TimeSpan(0, 0, 0, 0, 0),
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Prioridad = 2,
                            Subject = "Web Proveedores | Se vinculó tu usuario con la empresa {empresaPortalSubject}",
                            TipoNotificacionIdm = 4L,
                            UltimoEnvio = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5L,
                            Activo = true,
                            Body = "<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Vinculacion de Usuario con Empresa</title>\r\n</head>\r\n<body>\r\n    Se Vinculo tu usuario con la empresa {empresaPortalBody} \r\n</body>\r\n</html>\r\n",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Vinculación de usuario",
                            DomainFIdm = 1L,
                            FrecuenciaHora = 0,
                            FrecuenciaMinutos = 0,
                            FrecuenciaSegundos = 45,
                            HoraFin = new TimeSpan(0, 0, 0, 0, 0),
                            HoraInicio = new TimeSpan(0, 0, 0, 0, 0),
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Prioridad = 1,
                            Subject = "Web Empresas | Se vinculó tu usuario con la empresa {empresaPortalSubject}",
                            TipoNotificacionIdm = 4L,
                            UltimoEnvio = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7L,
                            Activo = true,
                            Body = "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:o=\"urn:schemas-microsoft-com:office:office\" style=\"width:100%;font-family:helvetica, 'helvetica neue', arial, verdana, sans-serif;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;padding:0;Margin:0\">\r\n<head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta content=\"width=device-width, initial-scale=1\" name=\"viewport\" />\r\n    <meta name=\"x-apple-disable-message-reformatting\" />\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n    <meta content=\"telephone=no\" name=\"format-detection\" />\r\n    <title>Nueva plantilla de correo electrónico 2020-11-03</title> <!--[if (mso 16)]><style type=\"text/css\">    a {text-decoration: none;}    </style><![endif]--> <!--[if gte mso 9]><style>sup { font-size: 100% !important; }</style><![endif]-->\r\n    <!--[if gte mso 9]><xml> <o:OfficeDocumentSettings> <o:AllowPNG>\r\n    </o:AllowPNG> <o:PixelsPerInch>96</o:PixelsPerInch> </o:OfficeDocumentSettings> </xml><![endif]-->\r\n    <style type=\"text/css\">\r\n        #outlook a {\r\n            padding: 0;\r\n        }\r\n\r\n        .ExternalClass {\r\n            width: 100%;\r\n        }\r\n\r\n            .ExternalClass, .ExternalClass p, .ExternalClass span, .ExternalClass font, .ExternalClass td, .ExternalClass div {\r\n                line-height: 100%;\r\n            }\r\n\r\n        .es-button {\r\n            mso-style-priority: 100 !important;\r\n            text-decoration: none !important;\r\n        }\r\n\r\n        a[x-apple-data-detectors] {\r\n            color: inherit !important;\r\n            text-decoration: none !important;\r\n            font-size: inherit !important;\r\n            font-family: inherit !important;\r\n            font-weight: inherit !important;\r\n            line-height: inherit !important;\r\n        }\r\n\r\n        .es-desk-hidden {\r\n            display: none;\r\n            float: left;\r\n            overflow: hidden;\r\n            width: 0;\r\n            max-height: 0;\r\n            line-height: 0;\r\n            mso-hide: all;\r\n        }\r\n\r\n        @media only screen and (max-width:600px) {\r\n            p, ul li, ol li, a {\r\n                font-size: 14px !important;\r\n                line-height: 150% !important\r\n            }\r\n\r\n            h1 {\r\n                font-size: 28px !important;\r\n                text-align: center;\r\n                line-height: 120% !important\r\n            }\r\n\r\n            h2 {\r\n                font-size: 26px !important;\r\n                text-align: center;\r\n                line-height: 120% !important\r\n            }\r\n\r\n            h3 {\r\n                font-size: 20px !important;\r\n                text-align: center;\r\n                line-height: 120% !important\r\n            }\r\n\r\n            h1 a {\r\n                font-size: 28px !important\r\n            }\r\n\r\n            h2 a {\r\n                font-size: 26px !important\r\n            }\r\n\r\n            h3 a {\r\n                font-size: 20px !important\r\n            }\r\n\r\n            .es-menu td a {\r\n                font-size: 12px !important\r\n            }\r\n\r\n            .es-header-body p, .es-header-body ul li, .es-header-body ol li, .es-header-body a {\r\n                font-size: 12px !important\r\n            }\r\n\r\n            .es-footer-body p, .es-footer-body ul li, .es-footer-body ol li, .es-footer-body a {\r\n                font-size: 14px !important\r\n            }\r\n\r\n            .es-infoblock p, .es-infoblock ul li, .es-infoblock ol li, .es-infoblock a {\r\n                font-size: 11px !important\r\n            }\r\n\r\n            *[class=\"gmail-fix\"] {\r\n                display: none !important\r\n            }\r\n\r\n            .es-m-txt-c, .es-m-txt-c h1, .es-m-txt-c h2, .es-m-txt-c h3 {\r\n                text-align: center !important\r\n            }\r\n\r\n            .es-m-txt-r, .es-m-txt-r h1, .es-m-txt-r h2, .es-m-txt-r h3 {\r\n                text-align: right !important\r\n            }\r\n\r\n            .es-m-txt-l, .es-m-txt-l h1, .es-m-txt-l h2, .es-m-txt-l h3 {\r\n                text-align: left !important\r\n            }\r\n\r\n                .es-m-txt-r img, .es-m-txt-c img, .es-m-txt-l img {\r\n                    display: inline !important\r\n                }\r\n\r\n            .es-button-border {\r\n                display: block !important\r\n            }\r\n\r\n            a.es-button {\r\n                font-size: 14px !important;\r\n                display: block !important;\r\n                border-left-width: 0px !important;\r\n                border-right-width: 0px !important\r\n            }\r\n\r\n            .es-btn-fw {\r\n                border-width: 10px 0px !important;\r\n                text-align: center !important\r\n            }\r\n\r\n            .es-adaptive table, .es-btn-fw, .es-btn-fw-brdr, .es-left, .es-right {\r\n                width: 100% !important\r\n            }\r\n\r\n            .es-content table, .es-header table, .es-footer table, .es-content, .es-footer, .es-header {\r\n                width: 100% !important;\r\n                max-width: 600px !important\r\n            }\r\n\r\n            .es-adapt-td {\r\n                display: block !important;\r\n                width: 100% !important\r\n            }\r\n\r\n            .adapt-img {\r\n                width: 100% !important;\r\n                height: auto !important\r\n            }\r\n\r\n            .es-m-p0 {\r\n                padding: 0px !important\r\n            }\r\n\r\n            .es-m-p0r {\r\n                padding-right: 0px !important\r\n            }\r\n\r\n            .es-m-p0l {\r\n                padding-left: 0px !important\r\n            }\r\n\r\n            .es-m-p0t {\r\n                padding-top: 0px !important\r\n            }\r\n\r\n            .es-m-p0b {\r\n                padding-bottom: 0 !important\r\n            }\r\n\r\n            .es-m-p20b {\r\n                padding-bottom: 20px !important\r\n            }\r\n\r\n            .es-mobile-hidden, .es-hidden {\r\n                display: none !important\r\n            }\r\n\r\n            tr.es-desk-hidden, td.es-desk-hidden, table.es-desk-hidden {\r\n                width: auto !important;\r\n                overflow: visible !important;\r\n                float: none !important;\r\n                max-height: inherit !important;\r\n                line-height: inherit !important\r\n            }\r\n\r\n            tr.es-desk-hidden {\r\n                display: table-row !important\r\n            }\r\n\r\n            table.es-desk-hidden {\r\n                display: table !important\r\n            }\r\n\r\n            td.es-desk-menu-hidden {\r\n                display: table-cell !important\r\n            }\r\n\r\n            .es-menu td {\r\n                width: 1% !important\r\n            }\r\n\r\n            table.es-table-not-adapt, .esd-block-html table {\r\n                width: auto !important\r\n            }\r\n\r\n            table.es-social {\r\n                display: inline-block !important\r\n            }\r\n\r\n                table.es-social td {\r\n                    display: inline-block !important\r\n                }\r\n        }\r\n    </style>\r\n</head>\r\n<body style=\"width:100%;font-family:helvetica, 'helvetica neue', arial, verdana, sans-serif;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;padding:0;Margin:0\">\r\n    <div class=\"es-wrapper-color\" style=\"background-color:#F6F6F6\">\r\n        <!--[if gte mso 9]><v:background xmlns:v=\"urn:schemas-microsoft-com:vml\" fill=\"t\"> <v:fill type=\"tile\" color=\"#f6f6f6\"></v:fill> </v:background><![endif]-->\r\n        <table class=\"es-wrapper\" width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;padding:0;Margin:0;width:100%;height:100%;background-repeat:repeat;background-position:center top\">\r\n            <tr style=\"border-collapse:collapse\">\r\n                <td valign=\"top\" style=\"padding:0;Margin:0\">\r\n                    <table cellpadding=\"0\" cellspacing=\"0\" class=\"es-content\" align=\"center\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;table-layout:fixed !important;width:100%\">\r\n                        <tr style=\"border-collapse:collapse\">\r\n                            <td align=\"center\" style=\"padding:0;Margin:0\">\r\n                                <table bgcolor=\"#ffffff\" class=\"es-content-body\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;background-color:#FFFFFF;width:600px\">\r\n                                    <tr style=\"border-collapse:collapse\">\r\n                                        <td align=\"left\" style=\"Margin:0;padding-bottom:10px;padding-top:20px;padding-left:20px;padding-right:20px;background-position:center top\">\r\n                                            <table cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px\">\r\n                                                <tr style=\"border-collapse:collapse\">\r\n                                                    <td align=\"center\" valign=\"top\" style=\"padding:0;Margin:0;width:560px\">\r\n                                                        <table cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;background-position:left top\" role=\"presentation\">\r\n                                                            <tr style=\"border-collapse:collapse\">\r\n                                                                <td align=\"center\" class=\"es-m-txt-c\" style=\"padding:0;Margin:0;padding-bottom:10px\">\r\n                                                                    <br />\r\n                                                                    <h2>{application}</h2>\r\n                                                                    <h2 style=\"margin-top:120px;line-height:29px;mso-line-height-rule:exactly;font-family:helvetica, 'helvetica neue', arial, verdana, sans-serif;font-size:24px;font-style:normal;font-weight:bold;color:#040404\">\r\n                                                                        <img class=\"adapt-img\" src=\"{root}/img/GsfLogoFondoNavbar.jpg\" style=\"display:block;border:0;outline:none;text-decoration:none;-ms-interpolation-mode:bicubic\" /><br />{seHaSolicitadoUnCambioDePassword}\r\n                                                                    </h2>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            <tr style=\"border-collapse:collapse\"> <td align=\"center\" style=\"padding:0;Margin:0;font-size:0px\"><a target=\"_blank\" href=\"#\" style=\"-webkit-text-size-adjust:none;-ms-text-size-adjust:none;mso-line-height-rule:exactly;font-family:helvetica, 'helvetica neue', arial, verdana, sans-serif;font-size:14px;text-decoration:underline;color:#040404\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/9/97/Avast_Passwords_logo.png\" alt=alt alt=alt style=\"display:block;border:0;outline:none;text-decoration:none;-ms-interpolation-mode:bicubic\" width=\"200\" /></a></td> </tr>\r\n                                                            <tr style=\"border-collapse:collapse\">\r\n                                                                <td align=\"center\" style=\"Margin:0;padding-top:10px;padding-left:10px;padding-right:10px;padding-bottom:15px\">\r\n                                                                    <span class=\"es-button-border\" style=\"border-style:solid;border-color:#38C2F1;background:#37EC86;border-width:0px;display:inline-block;border-radius:25px;width:auto\"><a href=\"demo.globalsis.com.ar/Proveedores/security/passwordrecovery?token={token}\" class=\"es-button\" target=\"_blank\" style=\"mso-style-priority:100 !important;text-decoration:none;-webkit-text-size-adjust:none;-ms-text-size-adjust:none;mso-line-height-rule:exactly;font-family:helvetica, 'helvetica neue', arial, verdana, sans-serif;font-size:18px;color:#FFFFFF;border-style:solid;border-color:#37EC86;border-width:10px 30px;display:inline-block;background:#37EC86;border-radius:25px;font-weight:bold;font-style:normal;line-height:22px;width:auto;text-align:center\">{recuperarMiContraseña}</a></span>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </table>\r\n                                        </td>\r\n                                    </tr>\r\n                                </table>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                    <table cellpadding=\"0\" cellspacing=\"0\" class=\"es-content\" align=\"center\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;table-layout:fixed !important;width:100%\">\r\n                        <tr style=\"border-collapse:collapse\">\r\n                            <td align=\"center\" style=\"padding:0;Margin:0\">\r\n                                <table bgcolor=\"#ffffff\" class=\"es-content-body\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;background-color:#FFFFFF;width:600px\">\r\n                                    <tr style=\"border-collapse:collapse\">\r\n                                        <td align=\"left\" style=\"padding:0;Margin:0;padding-top:20px;padding-left:20px;padding-right:20px\">\r\n                                            <table cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px\">\r\n                                                <tr style=\"border-collapse:collapse\">\r\n                                                    <td align=\"center\" valign=\"top\" style=\"padding:0;Margin:0;width:560px\">\r\n                                                        <table cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" role=\"presentation\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px\"> <tr style=\"border-collapse:collapse\"> <td style=\"padding:0;Margin:0\"> <div> Si este mail no fué solicitado, escribir a <a href=\"mailto:soporte@globalsis.com.ar\" style=\"-webkit-text-size-adjust:none;-ms-text-size-adjust:none;mso-line-height-rule:exactly;font-family:helvetica, 'helvetica neue', arial, verdana, sans-serif;font-size:14px;text-decoration:underline;color:#040404\">Soporte</a></div><br /></td> </tr> </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </table>\r\n                                        </td>\r\n                                    </tr>\r\n                                </table>\r\n                            </td>\r\n                        </tr>\r\n                    </table> <table cellpadding=\"0\" cellspacing=\"0\" class=\"es-content\" align=\"center\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;table-layout:fixed !important;width:100%\">\r\n                        <tr style=\"border-collapse:collapse\">\r\n                            <td align=\"center\" style=\"padding:0;Margin:0\">\r\n                                <table bgcolor=\"transparent\" class=\"es-content-body\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;background-color:transparent;width:600px\">\r\n                                    <tr style=\"border-collapse:collapse\">\r\n                                        <td align=\"left\" style=\"Margin:0;padding-left:20px;padding-right:20px;padding-top:30px;padding-bottom:30px;background-position:left top\">\r\n                                            <table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px\">\r\n                                                <tr style=\"border-collapse:collapse\">\r\n                                                    <td valign=\"top\" align=\"center\" style=\"padding:0;Margin:0;width:560px\">\r\n                                                        <table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" role=\"presentation\" style=\"mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px\">\r\n                                                            <tr style=\"border-collapse:collapse\">\r\n                                                                <td align=\"center\" style=\"padding:0;Margin:0;font-size:0px\">\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </table>\r\n                                        </td>\r\n                                    </tr>\r\n                                </table>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </td>\r\n            </tr>\r\n        </table>\r\n    </div>\r\n</body>\r\n\r\n</html>",
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Recuperación de Contraseña",
                            DomainFIdm = 1001L,
                            FrecuenciaHora = 0,
                            FrecuenciaMinutos = 0,
                            FrecuenciaSegundos = 45,
                            HoraFin = new TimeSpan(0, 0, 0, 0, 0),
                            HoraInicio = new TimeSpan(0, 0, 0, 0, 0),
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Prioridad = 1,
                            Subject = "Web Proveedores | Recuperación de Contraseña",
                            TipoNotificacionIdm = 1L,
                            UltimoEnvio = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("GSF.Domain.Notifications.EstadoNotificacion", b =>
                {
                    b.Property<long>("Idm")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("ntf_NotificacionEstados", (string)null);

                    b.HasData(
                        new
                        {
                            Idm = 1L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Nuevo",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = 2L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Error general",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = 3L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Ambiente configurado para no realizar envíos",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = 4L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Envío ok",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = 5L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Error de SMTP",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = 6L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Error de Autenticacion",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = 7L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Máximo de reintentos alcanzado",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        });
                });

            modelBuilder.Entity("GSF.Domain.Notifications.Events.Evento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Asunto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("EstadoIdm")
                        .HasColumnType("smallint");

                    b.Property<string>("EventId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("EventTimestamp")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("Intentos")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Mid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("NotificacionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Razon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstadoIdm");

                    b.HasIndex("NotificacionId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("ntf_Eventos", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Notifications.Events.EventoEstado", b =>
                {
                    b.Property<short>("Idm")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("ntf_EventoEstados", (string)null);

                    b.HasData(
                        new
                        {
                            Idm = (short)1,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "PROCESSED",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)2,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "DROPPED",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)3,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "DELIVERED",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)4,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "DEFERRED",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)5,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "BOUNCED",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)6,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "OPENED",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)7,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "CLICKED",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)8,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "UNSUBSCRIBED",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)9,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "REPORT",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        });
                });

            modelBuilder.Entity("GSF.Domain.Notifications.Notificacion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("Adjuntos")
                        .HasColumnType("bit");

                    b.Property<long?>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("ConCopia")
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)");

                    b.Property<string>("ConCopiaOculta")
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)");

                    b.Property<long?>("ConfiguracionNotificacionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Destinatarios")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasDefaultValue("Notificacion");

                    b.Property<bool?>("EsReenvio")
                        .HasColumnType("bit");

                    b.Property<long>("EstadoIdm")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("FechaEncolado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEnviado")
                        .HasColumnType("datetime2");

                    b.Property<short>("Intentos")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ConfiguracionNotificacionId");

                    b.HasIndex("EstadoIdm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("ntf_Notificaciones", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("Notificacion");
                });

            modelBuilder.Entity("GSF.Domain.Notifications.NotificacionAdjunto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("EsRecursoExternoIncrustado")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long>("NotificacionId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NotificacionId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("ntf_NotificacionAdjuntos", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Notifications.NotificacionEtiqueta", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Etiqueta")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<short?>("NotificacionEtiquetaTipoIdm")
                        .HasColumnType("smallint");

                    b.Property<long>("NotificacionId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Valor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NotificacionEtiquetaTipoIdm");

                    b.HasIndex("NotificacionId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("ntf_NotificacionEtiquetas", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Notifications.NotificacionEtiquetaTipo", b =>
                {
                    b.Property<short>("Idm")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("ntf_NotificacionEtiquetaTipos", (string)null);

                    b.HasData(
                        new
                        {
                            Idm = (short)1,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Asunto",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = (short)2,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Cuerpo",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        });
                });

            modelBuilder.Entity("GSF.Domain.Notifications.Notification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<long?>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Dismissed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("NotificationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("NotificationTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Readed")
                        .HasColumnType("bit");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("NotificationTypeId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("Session");

                    b.HasIndex("UserId");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("ntf_Notifications", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Notifications.NotificationType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Description")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("NotificationLevel")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("ntf_NotificationTypes", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Notifications.NotificationTypeOrganization", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("NotificationTypeId")
                        .HasColumnType("bigint");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NotificationTypeId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("ntf_NotificationTypesOrganizations", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Notifications.NotificationTypeOrganizationGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("NotificationTypeOrganizationId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("NotificationTypeOrganizationId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("ntf_NotificationTypesOrganizationsGroups", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Notifications.Subscription", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Criteria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Session");

                    b.HasIndex("UserId");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("ntf_Subscriptions", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Notifications.SubscriptionKeyValue", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<long>("SubscriptionId")
                        .HasColumnType("bigint");

                    b.Property<string>("SubscriptionKey")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("SubscriptionValue")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("ntf_SubscriptionsKeyValues", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Notifications.TipoNotificacion", b =>
                {
                    b.Property<long>("Idm")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("ntf_TipoNotificaciones", (string)null);

                    b.HasData(
                        new
                        {
                            Idm = 1L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Recuperación de Contraseña",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = 2L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Activación de Usuario",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = 3L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Reporte de Errores",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        },
                        new
                        {
                            Idm = 4L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Descripcion = "Vinculación de usuario con empresa portal",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process"
                        });
                });

            modelBuilder.Entity("GSF.Domain.Reports.ReportScheduleTask", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("DayOfMonth")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("ExecutionDays")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Frequency")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("NextRunDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ReportTypeId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TaskDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("TaskIntervalTypeIdm")
                        .HasColumnType("bigint");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReportTypeId");

                    b.HasIndex("Session");

                    b.HasIndex("TaskIntervalTypeIdm");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("rep_ReportScheduleTasks", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Reports.ReportType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("OptionId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("StoreProcedureName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OptionId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("rep_ReportTypes", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Reports.ReportTypeColumn", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ColumnName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("HeaderName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<long>("ReportTypeId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReportTypeId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("rep_ReportTypeColumns", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Reports.ReportTypeParameter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ControlType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ControlValue")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DataType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("PublicDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PublicName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("ReportTypeId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("TableName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TableType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReportTypeId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("rep_ReportTypeParameters", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Reports.ReportTypeParameterValue", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("ReportScheduleTaskId")
                        .HasColumnType("bigint");

                    b.Property<long>("ReportTypeParameterId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReportScheduleTaskId");

                    b.HasIndex("ReportTypeParameterId");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("rep_ReportTypeParametersValues", (string)null);
                });

            modelBuilder.Entity("GSF.Domain.Reports.TaskIntervalType", b =>
                {
                    b.Property<long>("Idm")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Session")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("__MigCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("__MigId")
                        .HasColumnType("int");

                    b.HasKey("Idm");

                    b.HasIndex("Session");

                    b.HasIndex("__MigCode");

                    b.HasIndex("__MigId");

                    b.HasIndex("Created", "Modified");

                    b.HasIndex("CreatedBy", "ModifiedBy");

                    b.ToTable("rep_TaskInvervalsTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Idm = 1L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Diario",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Diario"
                        },
                        new
                        {
                            Idm = 2L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Semanal",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Semanal"
                        },
                        new
                        {
                            Idm = 3L,
                            Created = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seed Process",
                            Description = "Mensual",
                            IsDeleted = false,
                            Modified = new DateTime(1986, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "Seed Process",
                            Name = "Mensual"
                        });
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Seguridad.UsuarioEmpresaPortal", b =>
                {
                    b.HasBaseType("GSF.Domain.Entities.Systems.UserExterno");

                    b.Property<int>("EmpresaPortalId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaRegistracion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.HasIndex("EmpresaPortalId");

                    b.HasDiscriminator().HasValue("UsuarioEmpresaPortal");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Systems.UserExternoMock", b =>
                {
                    b.HasBaseType("GSF.Domain.Entities.Systems.UserExterno");

                    b.HasDiscriminator().HasValue("UserExternoMock");
                });

            modelBuilder.Entity("GSF.Domain.Notifications.NotificacionAlerta", b =>
                {
                    b.HasBaseType("GSF.Domain.Notifications.Notificacion");

                    b.Property<string>("Asunto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Cuerpo")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("NotificacionAlerta");
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Certificaciones.Certificacion", b =>
                {
                    b.HasOne("GS.Certifications.Domain.Entities.Empresas.TipoEmpresaPortal", "TipoEmpresaPortal")
                        .WithMany()
                        .HasForeignKey("TipoEmpresaPortalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoEmpresaPortal");
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Certificaciones.Documentos.DocumentoCargado", b =>
                {
                    b.HasOne("GS.Certifications.Domain.Entities.Certificaciones.Documentos.DocumentoRequerido", "DocumentoRequerido")
                        .WithMany()
                        .HasForeignKey("DocumentoRequeridoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GS.Certifications.Domain.Entities.Certificaciones.Documentos.DocumentoEstado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GS.Certifications.Domain.Entities.Certificaciones.SolicitudCertificacion", "Solicitud")
                        .WithMany("DocumentosCargados")
                        .HasForeignKey("SolicitudId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GSF.Domain.Entities.Security.User", "ValidadoPor")
                        .WithMany()
                        .HasForeignKey("ValidadoPorId");

                    b.Navigation("DocumentoRequerido");

                    b.Navigation("Estado");

                    b.Navigation("Solicitud");

                    b.Navigation("ValidadoPor");
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Certificaciones.Documentos.DocumentoRequerido", b =>
                {
                    b.HasOne("GS.Certifications.Domain.Entities.Certificaciones.Certificacion", "Certificacion")
                        .WithMany("DocumentosRequeridos")
                        .HasForeignKey("CertificacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GS.Certifications.Domain.Entities.Certificaciones.Documentos.TipoDocumento", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Certificacion");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Certificaciones.SolicitudCertificacion", b =>
                {
                    b.HasOne("GS.Certifications.Domain.Entities.Certificaciones.Certificacion", "Certificacion")
                        .WithMany("Solicitudes")
                        .HasForeignKey("CertificacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GS.Certifications.Domain.Entities.Certificaciones.SolicitudCertificacionEstado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GS.Certifications.Domain.Entities.Empresas.EmpresaPortal", "Socio")
                        .WithMany()
                        .HasForeignKey("SocioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Certificacion");

                    b.Navigation("Estado");

                    b.Navigation("Socio");
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Comprobantes.Comprobante", b =>
                {
                    b.HasOne("GS.Certifications.Domain.Entities.Comprobantes.CategoriaTipo", "CategoriaTipoEmisor")
                        .WithMany()
                        .HasForeignKey("CategoriaTipoEmisorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("GS.Certifications.Domain.Entities.Comprobantes.CategoriaTipo", "CategoriaTipoReceptor")
                        .WithMany()
                        .HasForeignKey("CategoriaTipoReceptorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("GSF.Domain.Entities.Companies.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("GS.Certifications.Domain.Entities.Comprobantes.ComprobanteEstado", "ComprobanteEstado")
                        .WithMany()
                        .HasForeignKey("ComprobanteEstadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GS.Certifications.Domain.Entities.Comprobantes.ComprobanteTipo", "ComprobanteTipo")
                        .WithMany()
                        .HasForeignKey("ComprobanteTipoId");

                    b.HasOne("GS.Certifications.Domain.Entities.Comprobantes.CondicionVenta", "CondicionVenta")
                        .WithMany()
                        .HasForeignKey("CondicionVentaId");

                    b.HasOne("GS.Certifications.Domain.Entities.Empresas.EmpresaPortal", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId");

                    b.HasOne("GS.Certifications.Domain.Entities.Comprobantes.EstadoValidacionARCA", "EstadoValidacionARCA")
                        .WithMany()
                        .HasForeignKey("EstadoValidacionARCAId");

                    b.HasOne("GS.Certifications.Domain.Entities.Comprobantes.EstadoValidacionARCA", "EstadoValidacionARCAQR")
                        .WithMany()
                        .HasForeignKey("EstadoValidacionARCAQRId");

                    b.HasOne("GSF.Domain.Entities.Global.Currency", "Moneda")
                        .WithMany()
                        .HasForeignKey("MonedaId");

                    b.HasOne("GS.Certifications.Domain.Entities.Comprobantes.Origen", "Origen")
                        .WithMany()
                        .HasForeignKey("OrigenId");

                    b.HasOne("GS.Certifications.Domain.Entities.Periodos.Periodo", "Periodo")
                        .WithMany()
                        .HasForeignKey("PeriodoId");

                    b.HasOne("GS.Certifications.Domain.Entities.Comprobantes.Origen", "PropietarioActual")
                        .WithMany()
                        .HasForeignKey("PropietarioActualId");

                    b.HasOne("GS.Certifications.Domain.Entities.Comprobantes.CodigoAutorizacionTipo", "TipoCodigoAutorizacion")
                        .WithMany()
                        .HasForeignKey("TipoCodigoAutorizacionId");

                    b.Navigation("CategoriaTipoEmisor");

                    b.Navigation("CategoriaTipoReceptor");

                    b.Navigation("Company");

                    b.Navigation("ComprobanteEstado");

                    b.Navigation("ComprobanteTipo");

                    b.Navigation("CondicionVenta");

                    b.Navigation("Empresa");

                    b.Navigation("EstadoValidacionARCA");

                    b.Navigation("EstadoValidacionARCAQR");

                    b.Navigation("Moneda");

                    b.Navigation("Origen");

                    b.Navigation("Periodo");

                    b.Navigation("PropietarioActual");

                    b.Navigation("TipoCodigoAutorizacion");
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Comprobantes.ComprobanteDetalle", b =>
                {
                    b.HasOne("GS.Certifications.Domain.Entities.Comprobantes.Comprobante", "Comprobante")
                        .WithMany("Detalles")
                        .HasForeignKey("ComprobanteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GS.Certifications.Domain.Entities.Comprobantes.UnidadMedida", "UnidadMedida")
                        .WithMany()
                        .HasForeignKey("UnidadMedidaId");

                    b.Navigation("Comprobante");

                    b.Navigation("UnidadMedida");
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.ConceptosGastosTipos.ConceptoGastoTipo", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Companies.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Empresas.Alicuotas.EmpresaAlicuota", b =>
                {
                    b.HasOne("GS.Certifications.Domain.Entities.Alicuotas.Alicuota", "Alicuota")
                        .WithMany()
                        .HasForeignKey("AlicuotaIdm")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GS.Certifications.Domain.Entities.Empresas.EmpresaPortal", null)
                        .WithMany("Alicuotas")
                        .HasForeignKey("EmpresaPortalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Alicuota");
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Empresas.CompanyExtra", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Geo.City", "Ciudad")
                        .WithMany()
                        .HasForeignKey("CiudadId");

                    b.HasOne("GSF.Domain.Entities.Companies.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GSF.Domain.Entities.Geo.Country", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GSF.Domain.Entities.Geo.Province", "Provincia")
                        .WithMany()
                        .HasForeignKey("ProvinciaId");

                    b.HasOne("GS.Certifications.Domain.Entities.Empresas.TipoCuenta", "TipoCuenta")
                        .WithMany()
                        .HasForeignKey("TipoCuentaId");

                    b.HasOne("GS.Certifications.Domain.Entities.Comprobantes.CategoriaTipo", "TipoResponsable")
                        .WithMany()
                        .HasForeignKey("TipoResponsableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudad");

                    b.Navigation("Organization");

                    b.Navigation("Pais");

                    b.Navigation("Provincia");

                    b.Navigation("TipoCuenta");

                    b.Navigation("TipoResponsable");
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Empresas.ConceptosGastosTipos.EmpresaConceptoGastoTipo", b =>
                {
                    b.HasOne("GS.Certifications.Domain.Entities.ConceptosGastosTipos.ConceptoGastoTipo", "ConceptoGastoTipo")
                        .WithMany()
                        .HasForeignKey("ConceptoGastoTipoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GS.Certifications.Domain.Entities.Empresas.EmpresaPortal", null)
                        .WithMany("ConceptosGastosTipos")
                        .HasForeignKey("EmpresaPortalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ConceptoGastoTipo");
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Empresas.EmpresaCurrency", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Global.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GS.Certifications.Domain.Entities.Empresas.EmpresaPortal", null)
                        .WithMany("Monedas")
                        .HasForeignKey("EmpresaPortalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Empresas.EmpresaPortal", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Geo.City", "Ciudad")
                        .WithMany()
                        .HasForeignKey("CiudadId");

                    b.HasOne("GSF.Domain.Entities.Companies.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GSF.Domain.Entities.Companies.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GSF.Domain.Entities.Geo.Country", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GSF.Domain.Entities.Geo.Province", "Provincia")
                        .WithMany()
                        .HasForeignKey("ProvinciaId");

                    b.HasOne("GS.Certifications.Domain.Entities.Empresas.TipoCuenta", "TipoCuenta")
                        .WithMany()
                        .HasForeignKey("TipoCuentaId");

                    b.HasOne("GS.Certifications.Domain.Entities.Empresas.TipoEmpresaPortal", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId");

                    b.HasOne("GS.Certifications.Domain.Entities.Comprobantes.CategoriaTipo", "TipoResponsable")
                        .WithMany()
                        .HasForeignKey("TipoResponsableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudad");

                    b.Navigation("Company");

                    b.Navigation("Organization");

                    b.Navigation("Pais");

                    b.Navigation("Provincia");

                    b.Navigation("Tipo");

                    b.Navigation("TipoCuenta");

                    b.Navigation("TipoResponsable");
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Empresas.ModosLecturas.EmpresaModoLectura", b =>
                {
                    b.HasOne("GS.Certifications.Domain.Entities.Empresas.EmpresaPortal", null)
                        .WithMany("ModosLecturas")
                        .HasForeignKey("EmpresaPortalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GS.Certifications.Domain.Entities.ModosLecturas.ModoLectura", "ModoLectura")
                        .WithMany()
                        .HasForeignKey("ModoLecturaIdm")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModoLectura");
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Empresas.OrdenesCompras.EmpresaOrdenCompraTipo", b =>
                {
                    b.HasOne("GS.Certifications.Domain.Entities.Empresas.EmpresaPortal", null)
                        .WithMany("OrdenesComprasTipos")
                        .HasForeignKey("EmpresaPortalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GS.Certifications.Domain.Entities.OrdenesCompras.OrdenCompraTipo", "OrdenCompraTipo")
                        .WithMany()
                        .HasForeignKey("OrdenCompraTipoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OrdenCompraTipo");
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Empresas.Roles.EmpresaRol", b =>
                {
                    b.HasOne("GS.Certifications.Domain.Entities.Empresas.EmpresaPortal", null)
                        .WithMany("Roles")
                        .HasForeignKey("EmpresaPortalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GS.Certifications.Domain.Entities.Empresas.RolTipo", "RolTipo")
                        .WithMany()
                        .HasForeignKey("RolTipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RolTipo");
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Impuestos.Impuesto", b =>
                {
                    b.HasOne("GS.Certifications.Domain.Entities.Alicuotas.Alicuota", "Alicuota")
                        .WithMany()
                        .HasForeignKey("AlicuotaId");

                    b.HasOne("GSF.Domain.Entities.Companies.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("GSF.Domain.Entities.Geo.Province", "Provincia")
                        .WithMany()
                        .HasForeignKey("ProvinciaId");

                    b.HasOne("GS.Certifications.Domain.Entities.Impuestos.ImpuestoTipo", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId");

                    b.Navigation("Alicuota");

                    b.Navigation("Company");

                    b.Navigation("Provincia");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Impuestos.ImpuestoDetalle", b =>
                {
                    b.HasOne("GS.Certifications.Domain.Entities.Comprobantes.Comprobante", "Comprobante")
                        .WithMany("Impuestos")
                        .HasForeignKey("ComprobanteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GS.Certifications.Domain.Entities.Impuestos.Impuesto", "Impuesto")
                        .WithMany()
                        .HasForeignKey("ImpuestoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Comprobante");

                    b.Navigation("Impuesto");
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.MailProcessors.IntegracionFacturaPorCorreo", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Companies.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.MailProcessors.IntegracionFacturaPorCorreoDetalle", b =>
                {
                    b.HasOne("GS.Certifications.Domain.Entities.Empresas.EmpresaPortal", "EmpresaPortal")
                        .WithMany()
                        .HasForeignKey("EmpresaPortalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GS.Certifications.Domain.Entities.MailProcessors.IntegracionFacturaPorCorreo", "IntegracionFacturaPorCorreo")
                        .WithMany("Detalles")
                        .HasForeignKey("IntegracionFacturaPorCorreoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EmpresaPortal");

                    b.Navigation("IntegracionFacturaPorCorreo");
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.OrdenesCompras.GrupoOrdenCompraTipo", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Security.Group", "Grupo")
                        .WithMany()
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GS.Certifications.Domain.Entities.OrdenesCompras.OrdenCompraTipo", null)
                        .WithMany("Grupos")
                        .HasForeignKey("OrdenCompraTipoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Grupo");
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.OrdenesCompras.OrdenCompra", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Companies.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GS.Certifications.Domain.Entities.Empresas.EmpresaPortal", "EmpresaPortal")
                        .WithMany()
                        .HasForeignKey("EmpresaPortalId");

                    b.HasOne("GSF.Domain.Entities.Global.Currency", "Moneda")
                        .WithMany()
                        .HasForeignKey("MonedaId");

                    b.HasOne("GS.Certifications.Domain.Entities.OrdenesCompras.OrdenCompraEstado", "OrdenCompraEstado")
                        .WithMany()
                        .HasForeignKey("OrdenCompraEstadoIdm1");

                    b.HasOne("GS.Certifications.Domain.Entities.OrdenesCompras.OrdenCompraTipo", "OrdenCompraTipo")
                        .WithMany()
                        .HasForeignKey("OrdenCompraTipoId");

                    b.Navigation("Company");

                    b.Navigation("EmpresaPortal");

                    b.Navigation("Moneda");

                    b.Navigation("OrdenCompraEstado");

                    b.Navigation("OrdenCompraTipo");
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.OrdenesCompras.OrdenCompraTipo", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Companies.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Percepciones.Percepcion", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Companies.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("GS.Certifications.Domain.Entities.Percepciones.PercepcionTipo", "PercepcionTipo")
                        .WithMany()
                        .HasForeignKey("PercepcionTipoId");

                    b.HasOne("GSF.Domain.Entities.Geo.Province", "Provincia")
                        .WithMany()
                        .HasForeignKey("ProvinciaId");

                    b.Navigation("Company");

                    b.Navigation("PercepcionTipo");

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Percepciones.PercepcionCompany", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Companies.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GS.Certifications.Domain.Entities.Percepciones.Percepcion", "Percepcion")
                        .WithMany()
                        .HasForeignKey("PercepcionId1");

                    b.Navigation("Company");

                    b.Navigation("Percepcion");
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Percepciones.PercepcionDetalle", b =>
                {
                    b.HasOne("GS.Certifications.Domain.Entities.Comprobantes.Comprobante", "Comprobante")
                        .WithMany("Percepciones")
                        .HasForeignKey("ComprobanteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GS.Certifications.Domain.Entities.Percepciones.Percepcion", "Percepcion")
                        .WithMany()
                        .HasForeignKey("PercepcionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Comprobante");

                    b.Navigation("Percepcion");
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Periodos.Periodo", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Companies.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GS.Certifications.Domain.Entities.Periodos.EstadoPeriodo", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoIdm");

                    b.Navigation("Company");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Seguridad.UsuarioEmpresaPortalRol", b =>
                {
                    b.HasOne("GS.Certifications.Domain.Entities.Empresas.RolTipo", "RolTipo")
                        .WithMany()
                        .HasForeignKey("RolTipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GS.Certifications.Domain.Entities.Seguridad.UsuarioEmpresaPortal", null)
                        .WithMany("Roles")
                        .HasForeignKey("UsuarioEmpresaPortalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RolTipo");
                });

            modelBuilder.Entity("GSF.Domain.Alertas.Alerta", b =>
                {
                    b.HasOne("GSF.Domain.Alertas.AlertaTipo", "AlertaTipo")
                        .WithMany()
                        .HasForeignKey("AlertaTipoIdm")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GSF.Domain.Alertas.DestinatarioVariable", "DestinatarioVariable")
                        .WithMany()
                        .HasForeignKey("DestinatarioVariableIdm");

                    b.Navigation("AlertaTipo");

                    b.Navigation("DestinatarioVariable");
                });

            modelBuilder.Entity("GSF.Domain.Alertas.AlertaConReglaAdicional", b =>
                {
                    b.HasOne("GSF.Domain.Alertas.Alerta", "Alerta")
                        .WithMany()
                        .HasForeignKey("AlertaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GSF.Domain.Alertas.AlertaTipoReglaAdicional", "AlertaTipoReglaAdicional")
                        .WithMany()
                        .HasForeignKey("AlertaTipoReglaAdicionalIdm")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Alerta");

                    b.Navigation("AlertaTipoReglaAdicional");
                });

            modelBuilder.Entity("GSF.Domain.Alertas.AlertaEncolada", b =>
                {
                    b.HasOne("GSF.Domain.Alertas.Alerta", "Alerta")
                        .WithMany()
                        .HasForeignKey("AlertaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Alerta");
                });

            modelBuilder.Entity("GSF.Domain.Alertas.AlertaTipoCampoVariable", b =>
                {
                    b.HasOne("GSF.Domain.Alertas.AlertaTipo", "AlertaTipo")
                        .WithMany()
                        .HasForeignKey("AlertaTipoIdm")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AlertaTipo");
                });

            modelBuilder.Entity("GSF.Domain.Alertas.AlertaTipoEstado", b =>
                {
                    b.HasOne("GSF.Domain.Alertas.AlertaTipo", "AlertaTipo")
                        .WithMany()
                        .HasForeignKey("AlertaTipoIdm")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AlertaTipo");
                });

            modelBuilder.Entity("GSF.Domain.Alertas.AlertaTipoReglaAdicional", b =>
                {
                    b.HasOne("GSF.Domain.Alertas.AlertaTipo", "AlertaTipo")
                        .WithMany()
                        .HasForeignKey("AlertaTipoIdm")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AlertaTipo");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Companies.Company", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Companies.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Companies.CompanyCurrency", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Companies.Company", "Company")
                        .WithMany("Currencies")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GSF.Domain.Entities.Global.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GSF.Domain.Entities.Companies.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Currency");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Geo.City", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Geo.Province", "Province")
                        .WithMany("Cities")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Geo.Province", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Geo.Country", "Country")
                        .WithMany("Provinces")
                        .HasForeignKey("CountryIdm")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Global.CultureOrganization", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Global.Culture", "Culture")
                        .WithMany()
                        .HasForeignKey("CultureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GSF.Domain.Entities.Companies.Organization", "Organization")
                        .WithMany("CulturesOrganization")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Culture");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Global.IdentificationTax", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Geo.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Middleware.Interfaces.Interfaz", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Sistemas.Sistema", "Sistema")
                        .WithMany()
                        .HasForeignKey("SistemaIdm")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Sistema");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Middleware.Interfaces.InterfazCampo", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Middleware.Interfaces.Interfaz", "Interfaz")
                        .WithMany()
                        .HasForeignKey("InterfazIdm")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Interfaz");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Middleware.Interfaces.InterfazEstado", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Middleware.Interfaces.Interfaz", "Interfaz")
                        .WithMany()
                        .HasForeignKey("InterfazIdm")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Interfaz");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Middleware.Interfaces.InterfazProceso", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Middleware.Interfaces.InterfazEstado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoIdm")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GSF.Domain.Entities.Middleware.Interfaces.Interfaz", "Interfaz")
                        .WithMany()
                        .HasForeignKey("InterfazIdm")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Interfaz");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Middleware.Interfaces.InterfazProcesoReglaEnforzada", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Middleware.Interfaces.InterfazCampo", "InterfazCampo")
                        .WithMany()
                        .HasForeignKey("InterfazCampoIdm");

                    b.HasOne("GSF.Domain.Entities.Middleware.Interfaces.InterfazProceso", "InterfazProceso")
                        .WithMany("ReglaEnforzadas")
                        .HasForeignKey("InterfazProcesoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GSF.Domain.Entities.Middleware.Interfaces.InterfazRegla", "InterfazRegla")
                        .WithMany()
                        .HasForeignKey("InterfazReglaIdm")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("InterfazCampo");

                    b.Navigation("InterfazProceso");

                    b.Navigation("InterfazRegla");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Middleware.Interfaces.InterfazProcesoValidacionAdicional", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Middleware.Interfaces.InterfazProcesoReglaEnforzada", "InterfazProcesoReglaEnforzada")
                        .WithMany("ValidacionAdicionales")
                        .HasForeignKey("InterfazProcesoReglaEnforzadaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("InterfazProcesoReglaEnforzada");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Middleware.Interfaces.InterfazRegla", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Middleware.Interfaces.Interfaz", "Interfaz")
                        .WithMany()
                        .HasForeignKey("InterfazIdm")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GSF.Domain.Entities.Middleware.Interfaces.InterfazReglaConsecuencia", "InterfazReglaConsecuencia")
                        .WithMany()
                        .HasForeignKey("InterfazReglaConsecuenciaIdm")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Interfaz");

                    b.Navigation("InterfazReglaConsecuencia");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Procesos.Proceso", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Systems.DomainF", "Dominio")
                        .WithMany()
                        .HasForeignKey("DominioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GSF.Domain.Entities.Procesos.EstadoProceso", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoIdm")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GSF.Domain.Entities.Procesos.TipoProceso", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoIdm")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Dominio");

                    b.Navigation("Estado");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Security.CompanyUserGroup", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Companies.Company", "Company")
                        .WithMany("CompaniesUsersGroups")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GSF.Domain.Entities.Security.Group", "Group")
                        .WithMany("CompaniesUsersGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GSF.Domain.Entities.Security.User", "User")
                        .WithMany("CompaniesUsersGroups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Security.Grant", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Systems.DomainF", "DomainF")
                        .WithMany()
                        .HasForeignKey("DomainFIdm")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GSF.Domain.Entities.Security.Option", "Option")
                        .WithMany()
                        .HasForeignKey("OptionId");

                    b.Navigation("DomainF");

                    b.Navigation("Option");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Security.Group", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Systems.DomainF", "DomainF")
                        .WithMany()
                        .HasForeignKey("DomainFIdm")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GSF.Domain.Entities.Security.Group", "GroupOwner")
                        .WithMany()
                        .HasForeignKey("GroupOwnerId");

                    b.Navigation("DomainF");

                    b.Navigation("GroupOwner");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Security.GroupOrganization", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Security.Group", "Group")
                        .WithMany("GroupsOrganizations")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GSF.Domain.Entities.Companies.Organization", "Organization")
                        .WithMany("GroupsOrganizations")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Security.GroupRole", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Security.Group", "Group")
                        .WithMany("GroupRoles")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GSF.Domain.Entities.Security.Role", "Role")
                        .WithMany("GroupsRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Security.Option", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Systems.DomainF", "DomainF")
                        .WithMany()
                        .HasForeignKey("DomainFIdm")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GSF.Domain.Entities.Security.Option", "Parent")
                        .WithMany("Options")
                        .HasForeignKey("ParentId");

                    b.Navigation("DomainF");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Security.Page", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Security.Option", "ContextualOption")
                        .WithMany()
                        .HasForeignKey("ContextualOptionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ContextualOption");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Security.Role", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Systems.DomainF", "DomainF")
                        .WithMany()
                        .HasForeignKey("DomainFIdm")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GSF.Domain.Entities.Security.Group", "GroupOwner")
                        .WithMany()
                        .HasForeignKey("GroupOwnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DomainF");

                    b.Navigation("GroupOwner");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Security.RoleGrant", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Security.Grant", "Grant")
                        .WithMany("RolesGrants")
                        .HasForeignKey("GrantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GSF.Domain.Entities.Security.Role", "Role")
                        .WithMany("RolesGrants")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Grant");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Security.RoleOption", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Security.Option", "Option")
                        .WithMany("RolesOptions")
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GSF.Domain.Entities.Security.Role", "Role")
                        .WithMany("RolesOptions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Option");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Security.User", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Security.Group", "GroupOwner")
                        .WithMany()
                        .HasForeignKey("GroupOwnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GSF.Domain.Entities.Security.UserType", "UserType")
                        .WithMany()
                        .HasForeignKey("UserTypeIdm")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GroupOwner");

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Security.UserActivity", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Security.User", "User")
                        .WithMany("Activities")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Systems.DomainF", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Security.UserType", "UserType")
                        .WithMany()
                        .HasForeignKey("UserTypeIdm")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Systems.UserDomainF", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Systems.DomainF", "DomainF")
                        .WithMany()
                        .HasForeignKey("DomainFIdm")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GSF.Domain.Entities.Security.User", "User")
                        .WithMany("UserDomains")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DomainF");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Systems.UserExterno", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Systems.DomainF", "DomainF")
                        .WithMany()
                        .HasForeignKey("DomainFIdm")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GSF.Domain.Entities.Security.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DomainF");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GSF.Domain.Notifications.ConfiguracionNotificacion", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Systems.DomainF", "DomainF")
                        .WithMany()
                        .HasForeignKey("DomainFIdm")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GSF.Domain.Notifications.TipoNotificacion", "TipoNotificacion")
                        .WithMany()
                        .HasForeignKey("TipoNotificacionIdm")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DomainF");

                    b.Navigation("TipoNotificacion");
                });

            modelBuilder.Entity("GSF.Domain.Notifications.Events.Evento", b =>
                {
                    b.HasOne("GSF.Domain.Notifications.Events.EventoEstado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoIdm")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GSF.Domain.Notifications.Notificacion", "Notificacion")
                        .WithMany("Eventos")
                        .HasForeignKey("NotificacionId");

                    b.Navigation("Estado");

                    b.Navigation("Notificacion");
                });

            modelBuilder.Entity("GSF.Domain.Notifications.Notificacion", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Companies.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("GSF.Domain.Notifications.ConfiguracionNotificacion", "ConfiguracionNotificacion")
                        .WithMany()
                        .HasForeignKey("ConfiguracionNotificacionId");

                    b.HasOne("GSF.Domain.Notifications.EstadoNotificacion", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoIdm")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("ConfiguracionNotificacion");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("GSF.Domain.Notifications.NotificacionAdjunto", b =>
                {
                    b.HasOne("GSF.Domain.Notifications.Notificacion", "Notificacion")
                        .WithMany("NotificacionAdjuntos")
                        .HasForeignKey("NotificacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Notificacion");
                });

            modelBuilder.Entity("GSF.Domain.Notifications.NotificacionEtiqueta", b =>
                {
                    b.HasOne("GSF.Domain.Notifications.NotificacionEtiquetaTipo", "NotificacionEtiquetaTipo")
                        .WithMany()
                        .HasForeignKey("NotificacionEtiquetaTipoIdm");

                    b.HasOne("GSF.Domain.Notifications.Notificacion", "Notificacion")
                        .WithMany("Etiquetas")
                        .HasForeignKey("NotificacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Notificacion");

                    b.Navigation("NotificacionEtiquetaTipo");
                });

            modelBuilder.Entity("GSF.Domain.Notifications.Notification", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Companies.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("GSF.Domain.Notifications.NotificationType", "NotificationType")
                        .WithMany()
                        .HasForeignKey("NotificationTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GSF.Domain.Entities.Companies.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId");

                    b.HasOne("GSF.Domain.Entities.Security.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("NotificationType");

                    b.Navigation("Organization");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GSF.Domain.Notifications.NotificationTypeOrganization", b =>
                {
                    b.HasOne("GSF.Domain.Notifications.NotificationType", "NotificationType")
                        .WithMany()
                        .HasForeignKey("NotificationTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GSF.Domain.Entities.Companies.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("NotificationType");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("GSF.Domain.Notifications.NotificationTypeOrganizationGroup", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Security.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GSF.Domain.Notifications.NotificationTypeOrganization", "NotificationTypeOrganization")
                        .WithMany("NotificationTypesOrganizationsGroups")
                        .HasForeignKey("NotificationTypeOrganizationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("NotificationTypeOrganization");
                });

            modelBuilder.Entity("GSF.Domain.Notifications.Subscription", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Security.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GSF.Domain.Reports.ReportScheduleTask", b =>
                {
                    b.HasOne("GSF.Domain.Reports.ReportType", "ReportType")
                        .WithMany()
                        .HasForeignKey("ReportTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GSF.Domain.Reports.TaskIntervalType", "TaskIntervalType")
                        .WithMany()
                        .HasForeignKey("TaskIntervalTypeIdm")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ReportType");

                    b.Navigation("TaskIntervalType");
                });

            modelBuilder.Entity("GSF.Domain.Reports.ReportType", b =>
                {
                    b.HasOne("GSF.Domain.Entities.Security.Option", "Option")
                        .WithMany()
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Option");
                });

            modelBuilder.Entity("GSF.Domain.Reports.ReportTypeColumn", b =>
                {
                    b.HasOne("GSF.Domain.Reports.ReportType", "ReportType")
                        .WithMany()
                        .HasForeignKey("ReportTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ReportType");
                });

            modelBuilder.Entity("GSF.Domain.Reports.ReportTypeParameter", b =>
                {
                    b.HasOne("GSF.Domain.Reports.ReportType", "ReportType")
                        .WithMany("ReportTypeParameters")
                        .HasForeignKey("ReportTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ReportType");
                });

            modelBuilder.Entity("GSF.Domain.Reports.ReportTypeParameterValue", b =>
                {
                    b.HasOne("GSF.Domain.Reports.ReportScheduleTask", "ReportScheduleTask")
                        .WithMany("ReportTypeParameterValues")
                        .HasForeignKey("ReportScheduleTaskId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GSF.Domain.Reports.ReportTypeParameter", "ReportTypeParameter")
                        .WithMany()
                        .HasForeignKey("ReportTypeParameterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ReportScheduleTask");

                    b.Navigation("ReportTypeParameter");
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Seguridad.UsuarioEmpresaPortal", b =>
                {
                    b.HasOne("GS.Certifications.Domain.Entities.Empresas.EmpresaPortal", "EmpresaPortal")
                        .WithMany()
                        .HasForeignKey("EmpresaPortalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EmpresaPortal");
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Certificaciones.Certificacion", b =>
                {
                    b.Navigation("DocumentosRequeridos");

                    b.Navigation("Solicitudes");
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Certificaciones.SolicitudCertificacion", b =>
                {
                    b.Navigation("DocumentosCargados");
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Comprobantes.Comprobante", b =>
                {
                    b.Navigation("Detalles");

                    b.Navigation("Impuestos");

                    b.Navigation("Percepciones");
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Empresas.EmpresaPortal", b =>
                {
                    b.Navigation("Alicuotas");

                    b.Navigation("ConceptosGastosTipos");

                    b.Navigation("ModosLecturas");

                    b.Navigation("Monedas");

                    b.Navigation("OrdenesComprasTipos");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.MailProcessors.IntegracionFacturaPorCorreo", b =>
                {
                    b.Navigation("Detalles");
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.OrdenesCompras.OrdenCompraTipo", b =>
                {
                    b.Navigation("Grupos");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Companies.Company", b =>
                {
                    b.Navigation("CompaniesUsersGroups");

                    b.Navigation("Currencies");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Companies.Organization", b =>
                {
                    b.Navigation("CulturesOrganization");

                    b.Navigation("GroupsOrganizations");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Geo.Country", b =>
                {
                    b.Navigation("Provinces");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Geo.Province", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Middleware.Interfaces.InterfazProceso", b =>
                {
                    b.Navigation("ReglaEnforzadas");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Middleware.Interfaces.InterfazProcesoReglaEnforzada", b =>
                {
                    b.Navigation("ValidacionAdicionales");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Security.Grant", b =>
                {
                    b.Navigation("RolesGrants");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Security.Group", b =>
                {
                    b.Navigation("CompaniesUsersGroups");

                    b.Navigation("GroupRoles");

                    b.Navigation("GroupsOrganizations");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Security.Option", b =>
                {
                    b.Navigation("Options");

                    b.Navigation("RolesOptions");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Security.Role", b =>
                {
                    b.Navigation("GroupsRoles");

                    b.Navigation("RolesGrants");

                    b.Navigation("RolesOptions");
                });

            modelBuilder.Entity("GSF.Domain.Entities.Security.User", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("CompaniesUsersGroups");

                    b.Navigation("UserDomains");
                });

            modelBuilder.Entity("GSF.Domain.Notifications.Notificacion", b =>
                {
                    b.Navigation("Etiquetas");

                    b.Navigation("Eventos");

                    b.Navigation("NotificacionAdjuntos");
                });

            modelBuilder.Entity("GSF.Domain.Notifications.NotificationTypeOrganization", b =>
                {
                    b.Navigation("NotificationTypesOrganizationsGroups");
                });

            modelBuilder.Entity("GSF.Domain.Reports.ReportScheduleTask", b =>
                {
                    b.Navigation("ReportTypeParameterValues");
                });

            modelBuilder.Entity("GSF.Domain.Reports.ReportType", b =>
                {
                    b.Navigation("ReportTypeParameters");
                });

            modelBuilder.Entity("GS.Certifications.Domain.Entities.Seguridad.UsuarioEmpresaPortal", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
