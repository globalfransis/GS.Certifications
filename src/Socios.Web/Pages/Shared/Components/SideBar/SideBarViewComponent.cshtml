@inject IConfiguration Configuration
@using Microsoft.Extensions.Configuration
@model SideBarViewComponent
@using Microsoft.Extensions.Localization
@using System.Web
@inject IStringLocalizer<Socios.Web.Common.Resources.Shared> loc
@inject IConfiguration Configuration
<!-- Main side-menu -->
<div id="drawer" class="main-side-menu border-end d-block">
    <div class="row">
        @if (Model != null && Model.Options != null)
        {
            @*<div class="d-flex header-bar justify-content-end collapsable pt-3 w-100">*@
            <div class="d-flex header-bar  w-100 flex-wrap align-items-center">
                <div class="menu-item">
                    <a href="~/index" class="d-flex align-items-center menu-item-active"
                       onclick="window.sessionStorage.setItem('currentOptionId', 0);window.sessionStorage.setItem('currentOptionParentId', 0)"
                       optionid="0">
                        <i class="fas fa-home"></i> <span class="ms-1">Inicio</span>
                    </a>
                </div>
                <div class="d-flex ms-auto ">
                    @foreach (var option in Model.Options.Options)
                    {
                        @if (option.Options != null && option.Options.Any())
                        {
                            // Mostramos directamente las opciones hijas en lugar del padre
                            @foreach (var childOption in option.Options)
                            {
                                @await Html.PartialAsync("_sideBarOption", childOption, ViewData)
                            }

                        }
                        else
                        {
                            <div class="menu-item">
                                <!-- Si no tiene hijos, se muestra normalmente -->
                                <a class="menu-accordion-body list-group-item border-0"
                                   href="javascript:RedirectToOption(@option.Id, @(option.ParentId != null ? @option.ParentId : option.Id), '@option.Url');"
                                   onclick="window.sessionStorage.setItem('currentOptionId', 0);window.sessionStorage.setItem('currentOptionParentId', 0)">
                                    <i class="@option.Icon"></i> <span class="ms-1">@option.Name</span>
                                </a>
                            </div>

                        }
                    }
                </div>
            </div>
        }
    </div>
</div>

<style>
    #drawer {
        margin-top: 54px;
        position: relative;
        width: 100% !important;
        min-width: 100% !important;
        z-index: 100;
        opacity: 1;
        background-color: var(--main-content-color) !important;
        display: flex;
        flex-direction: row;
    @* padding: 10px; *@
    }



    .header-bar {
        gap: 10px;
        background-color: rgba(0, 0, 0, 0.2); /* Fondo oscuro sutil */
        padding: 5px 10px;
        backdrop-filter: blur(4px); /* opcional, le da un efecto de vidrio */
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .menu-item a {
        color: black;
        font-size: 1.15rem;
        font-weight: 500;
        text-decoration: none;
        padding: 8px 12px;
        transition: transform 0.2s ease-in-out, color 0.2s ease-in-out;
        position: relative;
        display: inline-block;
        transform: scale(1);
    }

        .menu-item a:hover {
            color: white;
            transform: scale(1.05);
        }

        /* Subrayado solo cuando está activo */
        .menu-item a::after {
            content: '';
            position: absolute;
            bottom: 4px;
            left: 10%;
            width: 80%;
            height: 2px;
            background-color: transparent;
            transition: background-color 0.3s ease;
        }

        .menu-item a.menu-item-active::after {
            background-color: black;
        }


    /* Estilo para los elementos del menú cuando no están en hover */
    .menu-accordion-body {
        display: flex;
        align-items: center;
        padding: 12px 20px;
        color: #333;
        text-decoration: none;
        border-radius: 30px;
        transition: all 0.3s ease-in-out;
        font-weight: 600;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        background-color: #EEEEEE !important;
        margin-left: 7% !important;
    }

        .menu-accordion-body:hover {
            background-color: #E3E3E3 !important;
        }

        .menu-accordion-body i {
            margin-right: 10px;
            font-size: 18px;
        }

    /* Para los botones de las opciones del menú */
    .home-button {
        background-color: #EEEEEE !important;
    }

        .home-button:hover {
            background-color: #E3E3E3 !important;
        }

    /* Estilo para la expansión del menú */
    .menu-accordion-collapse {
        background-color: #EEEEEE !important;
    }

    /* Estado seleccionado de los botones */
    .selected {
        background-color: lightgray !important;
    }

</style>