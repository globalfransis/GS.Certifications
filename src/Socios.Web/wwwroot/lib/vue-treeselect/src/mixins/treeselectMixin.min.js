/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/@riophae/vue-treeselect@0.4.0/src/mixins/treeselectMixin.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import fuzzysearch from"fuzzysearch";import{warning,onLeftClick,scrollIntoView,isNaN,isPromise,once,identity,constant,createMap,quickDiff,last as getLast,includes,find,removeFromArray}from"../utils";import{NO_PARENT_NODE,UNCHECKED,INDETERMINATE,CHECKED,LOAD_ROOT_OPTIONS,LOAD_CHILDREN_OPTIONS,ASYNC_SEARCH,ALL,BRANCH_PRIORITY,LEAF_PRIORITY,ALL_WITH_INDETERMINATE,ALL_CHILDREN,ALL_DESCENDANTS,LEAF_CHILDREN,LEAF_DESCENDANTS,ORDER_SELECTED,LEVEL,INDEX}from"../constants";function sortValueByIndex(e,t){let s=0;for(;;){if(e.level<s)return-1;if(t.level<s)return 1;if(e.index[s]!==t.index[s])return e.index[s]-t.index[s];s++}}function sortValueByLevel(e,t){return e.level===t.level?sortValueByIndex(e,t):e.level-t.level}function createAsyncOptionsStates(){return{isLoaded:!1,isLoading:!1,loadingError:""}}function stringifyOptionPropValue(e){return"string"==typeof e?e:"number"!=typeof e||isNaN(e)?"":e+""}function match(e,t,s){return e?fuzzysearch(t,s):includes(s,t)}function getErrorMessage(e){return e.message||String(e)}let instanceId=0;export default{provide(){return{instance:this}},props:{allowClearingDisabled:{type:Boolean,default:!1},allowSelectingDisabledDescendants:{type:Boolean,default:!1},alwaysOpen:{type:Boolean,default:!1},appendToBody:{type:Boolean,default:!1},async:{type:Boolean,default:!1},autoFocus:{type:Boolean,default:!1},autoLoadRootOptions:{type:Boolean,default:!0},autoDeselectAncestors:{type:Boolean,default:!1},autoDeselectDescendants:{type:Boolean,default:!1},autoSelectAncestors:{type:Boolean,default:!1},autoSelectDescendants:{type:Boolean,default:!1},backspaceRemoves:{type:Boolean,default:!0},beforeClearAll:{type:Function,default:constant(!0)},branchNodesFirst:{type:Boolean,default:!1},cacheOptions:{type:Boolean,default:!0},clearable:{type:Boolean,default:!0},clearAllText:{type:String,default:"Clear all"},clearOnSelect:{type:Boolean,default:!1},clearValueText:{type:String,default:"Clear value"},closeOnSelect:{type:Boolean,default:!0},defaultExpandLevel:{type:Number,default:0},defaultOptions:{default:!1},deleteRemoves:{type:Boolean,default:!0},delimiter:{type:String,default:","},flattenSearchResults:{type:Boolean,default:!1},disableBranchNodes:{type:Boolean,default:!1},disabled:{type:Boolean,default:!1},disableFuzzyMatching:{type:Boolean,default:!1},flat:{type:Boolean,default:!1},instanceId:{default:()=>`${instanceId++}$$`,type:[String,Number]},joinValues:{type:Boolean,default:!1},limit:{type:Number,default:1/0},limitText:{type:Function,default:function(e){return`and ${e} more`}},loadingText:{type:String,default:"Loading..."},loadOptions:{type:Function},matchKeys:{type:Array,default:constant(["label"])},maxHeight:{type:Number,default:300},multiple:{type:Boolean,default:!1},name:{type:String},noChildrenText:{type:String,default:"No sub-options."},noOptionsText:{type:String,default:"No options available."},noResultsText:{type:String,default:"No results found..."},normalizer:{type:Function,default:identity},openDirection:{type:String,default:"auto",validator:e=>includes(["auto","top","bottom","above","below"],e)},openOnClick:{type:Boolean,default:!0},openOnFocus:{type:Boolean,default:!1},options:{type:Array},placeholder:{type:String,default:"Select..."},required:{type:Boolean,default:!1},retryText:{type:String,default:"Retry?"},retryTitle:{type:String,default:"Click to retry"},searchable:{type:Boolean,default:!0},searchNested:{type:Boolean,default:!1},searchPromptText:{type:String,default:"Type to search..."},showCount:{type:Boolean,default:!1},showCountOf:{type:String,default:ALL_CHILDREN,validator:e=>includes([ALL_CHILDREN,ALL_DESCENDANTS,LEAF_CHILDREN,LEAF_DESCENDANTS],e)},showCountOnSearch:null,sortValueBy:{type:String,default:ORDER_SELECTED,validator:e=>includes([ORDER_SELECTED,LEVEL,INDEX],e)},tabIndex:{type:Number,default:0},value:null,valueConsistsOf:{type:String,default:BRANCH_PRIORITY,validator:e=>includes([ALL,BRANCH_PRIORITY,LEAF_PRIORITY,ALL_WITH_INDETERMINATE],e)},valueFormat:{type:String,default:"id"},zIndex:{type:[Number,String],default:999}},data(){return{trigger:{isFocused:!1,searchQuery:""},menu:{isOpen:!1,current:null,lastScrollPosition:0,placement:"bottom"},forest:{normalizedOptions:[],nodeMap:createMap(),checkedStateMap:createMap(),selectedNodeIds:this.extractCheckedNodeIdsFromValue(),selectedNodeMap:createMap()},rootOptionsStates:createAsyncOptionsStates(),localSearch:{active:!1,noResults:!0,countMap:createMap()},remoteSearch:createMap()}},computed:{selectedNodes(){return this.forest.selectedNodeIds.map(this.getNode)},internalValue(){let e;if(this.single||this.flat||this.disableBranchNodes||this.valueConsistsOf===ALL)e=this.forest.selectedNodeIds.slice();else if(this.valueConsistsOf===BRANCH_PRIORITY)e=this.forest.selectedNodeIds.filter(e=>{const t=this.getNode(e);return!!t.isRootNode||!this.isSelected(t.parentNode)});else if(this.valueConsistsOf===LEAF_PRIORITY)e=this.forest.selectedNodeIds.filter(e=>{const t=this.getNode(e);return!!t.isLeaf||0===t.children.length});else if(this.valueConsistsOf===ALL_WITH_INDETERMINATE){const t=[];e=this.forest.selectedNodeIds.slice(),this.selectedNodes.forEach(s=>{s.ancestors.forEach(s=>{includes(t,s.id)||includes(e,s.id)||t.push(s.id)})}),e.push(...t)}return this.sortValueBy===LEVEL?e.sort((e,t)=>sortValueByLevel(this.getNode(e),this.getNode(t))):this.sortValueBy===INDEX&&e.sort((e,t)=>sortValueByIndex(this.getNode(e),this.getNode(t))),e},hasValue(){return this.internalValue.length>0},single(){return!this.multiple},visibleOptionIds(){const e=[];return this.traverseAllNodesByIndex(t=>{if(this.localSearch.active&&!this.shouldOptionBeIncludedInSearchResult(t)||e.push(t.id),t.isBranch&&!this.shouldExpand(t))return!1}),e},hasVisibleOptions(){return 0!==this.visibleOptionIds.length},showCountOnSearchComputed(){return"boolean"==typeof this.showCountOnSearch?this.showCountOnSearch:this.showCount},hasBranchNodes(){return this.forest.normalizedOptions.some(e=>e.isBranch)},shouldFlattenOptions(){return this.localSearch.active&&this.flattenSearchResults}},watch:{alwaysOpen(e){e?this.openMenu():this.closeMenu()},branchNodesFirst(){this.initialize()},disabled(e){e&&this.menu.isOpen?this.closeMenu():e||this.menu.isOpen||!this.alwaysOpen||this.openMenu()},flat(){this.initialize()},internalValue(e,t){quickDiff(e,t)&&this.$emit("input",this.getValue(),this.getInstanceId())},matchKeys(){this.initialize()},multiple(e){e&&this.buildForestState()},options:{handler(){this.async||(this.initialize(),this.rootOptionsStates.isLoaded=Array.isArray(this.options))},deep:!0,immediate:!0},"trigger.searchQuery"(){this.async?this.handleRemoteSearch():this.handleLocalSearch(),this.$emit("search-change",this.trigger.searchQuery,this.getInstanceId())},value(){const e=this.extractCheckedNodeIdsFromValue();quickDiff(e,this.internalValue)&&this.fixSelectedNodeIds(e)}},methods:{verifyProps(){if(warning(()=>!this.async||this.searchable,()=>'For async search mode, the value of "searchable" prop must be true.'),null!=this.options||this.loadOptions||warning(()=>!1,()=>'Are you meant to dynamically load options? You need to use "loadOptions" prop.'),this.flat&&warning(()=>this.multiple,()=>'You are using flat mode. But you forgot to add "multiple=true"?'),!this.flat){["autoSelectAncestors","autoSelectDescendants","autoDeselectAncestors","autoDeselectDescendants"].forEach(e=>{warning(()=>!this[e],()=>`"${e}" only applies to flat mode.`)})}},resetFlags(){this._blurOnSelect=!1},initialize(){const e=this.async?this.getRemoteSearchEntry().options:this.options;if(Array.isArray(e)){const t=this.forest.nodeMap;this.forest.nodeMap=createMap(),this.keepDataOfSelectedNodes(t),this.forest.normalizedOptions=this.normalize(NO_PARENT_NODE,e,t),this.fixSelectedNodeIds(this.internalValue)}else this.forest.normalizedOptions=[]},getInstanceId(){return null==this.instanceId?this.id:this.instanceId},getValue(){if("id"===this.valueFormat)return this.multiple?this.internalValue.slice():this.internalValue[0];const e=this.internalValue.map(e=>this.getNode(e).raw);return this.multiple?e:e[0]},getNode(e){return warning(()=>null!=e,()=>`Invalid node id: ${e}`),null==e?null:e in this.forest.nodeMap?this.forest.nodeMap[e]:this.createFallbackNode(e)},createFallbackNode(e){const t=this.extractNodeFromValue(e),s={id:e,label:this.enhancedNormalizer(t).label||`${e} (unknown)`,ancestors:[],parentNode:NO_PARENT_NODE,isFallbackNode:!0,isRootNode:!0,isLeaf:!0,isBranch:!1,isDisabled:!1,isNew:!1,index:[-1],level:0,raw:t};return this.$set(this.forest.nodeMap,e,s)},extractCheckedNodeIdsFromValue(){return null==this.value?[]:"id"===this.valueFormat?this.multiple?this.value.slice():[this.value]:(this.multiple?this.value:[this.value]).map(e=>this.enhancedNormalizer(e)).map(e=>e.id)},extractNodeFromValue(e){const t={id:e};if("id"===this.valueFormat)return t;const s=this.multiple?Array.isArray(this.value)?this.value:[]:this.value?[this.value]:[];return find(s,t=>t&&this.enhancedNormalizer(t).id===e)||t},fixSelectedNodeIds(e){let t=[];if(this.single||this.flat||this.disableBranchNodes||this.valueConsistsOf===ALL)t=e;else if(this.valueConsistsOf===BRANCH_PRIORITY)e.forEach(e=>{t.push(e);const s=this.getNode(e);s.isBranch&&this.traverseDescendantsBFS(s,e=>{t.push(e.id)})});else if(this.valueConsistsOf===LEAF_PRIORITY){const s=createMap(),i=e.slice();for(;i.length;){const e=i.shift(),a=this.getNode(e);t.push(e),a.isRootNode||(a.parentNode.id in s||(s[a.parentNode.id]=a.parentNode.children.length),0==--s[a.parentNode.id]&&i.push(a.parentNode.id))}}else if(this.valueConsistsOf===ALL_WITH_INDETERMINATE){const s=createMap(),i=e.filter(e=>{const t=this.getNode(e);return t.isLeaf||0===t.children.length});for(;i.length;){const e=i.shift(),a=this.getNode(e);t.push(e),a.isRootNode||(a.parentNode.id in s||(s[a.parentNode.id]=a.parentNode.children.length),0==--s[a.parentNode.id]&&i.push(a.parentNode.id))}}quickDiff(this.forest.selectedNodeIds,t)&&(this.forest.selectedNodeIds=t),this.buildForestState()},keepDataOfSelectedNodes(e){this.forest.selectedNodeIds.forEach(t=>{if(!e[t])return;const s={...e[t],isFallbackNode:!0};this.$set(this.forest.nodeMap,t,s)})},isSelected(e){return!0===this.forest.selectedNodeMap[e.id]},traverseDescendantsBFS(e,t){if(!e.isBranch)return;const s=e.children.slice();for(;s.length;){const e=s[0];e.isBranch&&s.push(...e.children),t(e),s.shift()}},traverseDescendantsDFS(e,t){e.isBranch&&e.children.forEach(e=>{this.traverseDescendantsDFS(e,t),t(e)})},traverseAllNodesDFS(e){this.forest.normalizedOptions.forEach(t=>{this.traverseDescendantsDFS(t,e),e(t)})},traverseAllNodesByIndex(e){const t=s=>{s.children.forEach(s=>{!1!==e(s)&&s.isBranch&&t(s)})};t({children:this.forest.normalizedOptions})},toggleClickOutsideEvent(e){e?document.addEventListener("mousedown",this.handleClickOutside,!1):document.removeEventListener("mousedown",this.handleClickOutside,!1)},getValueContainer(){return this.$refs.control.$refs["value-container"]},getInput(){return this.getValueContainer().$refs.input},focusInput(){this.getInput().focus()},blurInput(){this.getInput().blur()},handleMouseDown:onLeftClick(function(e){if(e.preventDefault(),e.stopPropagation(),this.disabled)return;this.getValueContainer().$el.contains(e.target)&&!this.menu.isOpen&&(this.openOnClick||this.trigger.isFocused)&&this.openMenu(),this._blurOnSelect?this.blurInput():this.focusInput(),this.resetFlags()}),handleClickOutside(e){this.$refs.wrapper&&!this.$refs.wrapper.contains(e.target)&&(this.blurInput(),this.closeMenu())},handleLocalSearch(){const{searchQuery:e}=this.trigger,t=()=>this.resetHighlightedOptionWhenNecessary(!0);if(!e)return this.localSearch.active=!1,t();this.localSearch.active=!0,this.localSearch.noResults=!0,this.traverseAllNodesDFS(e=>{e.isBranch&&(e.isExpandedOnSearch=!1,e.showAllChildrenOnSearch=!1,e.isMatched=!1,e.hasMatchedDescendants=!1,this.$set(this.localSearch.countMap,e.id,{[ALL_CHILDREN]:0,[ALL_DESCENDANTS]:0,[LEAF_CHILDREN]:0,[LEAF_DESCENDANTS]:0}))});const s=e.trim().toLocaleLowerCase(),i=s.replace(/\s+/g," ").split(" ");this.traverseAllNodesDFS(e=>{this.searchNested&&i.length>1?e.isMatched=i.every(t=>match(!1,t,e.nestedSearchLabel)):e.isMatched=this.matchKeys.some(t=>match(!this.disableFuzzyMatching,s,e.lowerCased[t])),e.isMatched&&(this.localSearch.noResults=!1,e.ancestors.forEach(e=>this.localSearch.countMap[e.id][ALL_DESCENDANTS]++),e.isLeaf&&e.ancestors.forEach(e=>this.localSearch.countMap[e.id][LEAF_DESCENDANTS]++),e.parentNode!==NO_PARENT_NODE&&(this.localSearch.countMap[e.parentNode.id][ALL_CHILDREN]+=1,e.isLeaf&&(this.localSearch.countMap[e.parentNode.id][LEAF_CHILDREN]+=1))),(e.isMatched||e.isBranch&&e.isExpandedOnSearch)&&e.parentNode!==NO_PARENT_NODE&&(e.parentNode.isExpandedOnSearch=!0,e.parentNode.hasMatchedDescendants=!0)}),t()},handleRemoteSearch(){const{searchQuery:e}=this.trigger,t=this.getRemoteSearchEntry(),s=()=>{this.initialize(),this.resetHighlightedOptionWhenNecessary(!0)};if((""===e||this.cacheOptions)&&t.isLoaded)return s();this.callLoadOptionsProp({action:ASYNC_SEARCH,args:{searchQuery:e},isPending:()=>t.isLoading,start:()=>{t.isLoading=!0,t.isLoaded=!1,t.loadingError=""},succeed:i=>{t.isLoaded=!0,t.options=i,this.trigger.searchQuery===e&&s()},fail:e=>{t.loadingError=getErrorMessage(e)},end:()=>{t.isLoading=!1}})},getRemoteSearchEntry(){const{searchQuery:e}=this.trigger,t=this.remoteSearch[e]||{...createAsyncOptionsStates(),options:[]};if(this.$watch(()=>t.options,()=>{this.trigger.searchQuery===e&&this.initialize()},{deep:!0}),""===e){if(Array.isArray(this.defaultOptions))return t.options=this.defaultOptions,t.isLoaded=!0,t;if(!0!==this.defaultOptions)return t.isLoaded=!0,t}return this.remoteSearch[e]||this.$set(this.remoteSearch,e,t),t},shouldExpand(e){return this.localSearch.active?e.isExpandedOnSearch:e.isExpanded},shouldOptionBeIncludedInSearchResult(e){return!!e.isMatched||(!(!e.isBranch||!e.hasMatchedDescendants||this.flattenSearchResults)||!(e.isRootNode||!e.parentNode.showAllChildrenOnSearch))},shouldShowOptionInMenu(e){return!(this.localSearch.active&&!this.shouldOptionBeIncludedInSearchResult(e))},getControl(){return this.$refs.control.$el},getMenu(){const e=(this.appendToBody?this.$refs.portal.portalTarget:this).$refs.menu.$refs.menu;return e&&"#comment"!==e.nodeName?e:null},setCurrentHighlightedOption(e,t=!0){const s=this.menu.current;if(null!=s&&s in this.forest.nodeMap&&(this.forest.nodeMap[s].isHighlighted=!1),this.menu.current=e.id,e.isHighlighted=!0,this.menu.isOpen&&t){const t=()=>{const t=this.getMenu(),s=t.querySelector(`.vue-treeselect__option[data-id="${e.id}"]`);s&&scrollIntoView(t,s)};this.getMenu()?t():this.$nextTick(t)}},resetHighlightedOptionWhenNecessary(e=!1){const{current:t}=this.menu;!e&&null!=t&&t in this.forest.nodeMap&&this.shouldShowOptionInMenu(this.getNode(t))||this.highlightFirstOption()},highlightFirstOption(){if(!this.hasVisibleOptions)return;const e=this.visibleOptionIds[0];this.setCurrentHighlightedOption(this.getNode(e))},highlightPrevOption(){if(!this.hasVisibleOptions)return;const e=this.visibleOptionIds.indexOf(this.menu.current)-1;if(-1===e)return this.highlightLastOption();this.setCurrentHighlightedOption(this.getNode(this.visibleOptionIds[e]))},highlightNextOption(){if(!this.hasVisibleOptions)return;const e=this.visibleOptionIds.indexOf(this.menu.current)+1;if(e===this.visibleOptionIds.length)return this.highlightFirstOption();this.setCurrentHighlightedOption(this.getNode(this.visibleOptionIds[e]))},highlightLastOption(){if(!this.hasVisibleOptions)return;const e=getLast(this.visibleOptionIds);this.setCurrentHighlightedOption(this.getNode(e))},resetSearchQuery(){this.trigger.searchQuery=""},closeMenu(){!this.menu.isOpen||!this.disabled&&this.alwaysOpen||(this.saveMenuScrollPosition(),this.menu.isOpen=!1,this.toggleClickOutsideEvent(!1),this.resetSearchQuery(),this.$emit("close",this.getValue(),this.getInstanceId()))},openMenu(){this.disabled||this.menu.isOpen||(this.menu.isOpen=!0,this.$nextTick(this.resetHighlightedOptionWhenNecessary),this.$nextTick(this.restoreMenuScrollPosition),this.options||this.async||this.loadRootOptions(),this.toggleClickOutsideEvent(!0),this.$emit("open",this.getInstanceId()))},toggleMenu(){this.menu.isOpen?this.closeMenu():this.openMenu()},toggleExpanded(e){let t;this.localSearch.active?(t=e.isExpandedOnSearch=!e.isExpandedOnSearch)&&(e.showAllChildrenOnSearch=!0):t=e.isExpanded=!e.isExpanded,t&&!e.childrenStates.isLoaded&&this.loadChildrenOptions(e)},buildForestState(){const e=createMap();this.forest.selectedNodeIds.forEach(t=>{e[t]=!0}),this.forest.selectedNodeMap=e;const t=createMap();this.multiple&&(this.traverseAllNodesByIndex(e=>{t[e.id]=UNCHECKED}),this.selectedNodes.forEach(e=>{t[e.id]=CHECKED,this.flat||this.disableBranchNodes||e.ancestors.forEach(e=>{this.isSelected(e)||(t[e.id]=INDETERMINATE)})})),this.forest.checkedStateMap=t},enhancedNormalizer(e){return{...e,...this.normalizer(e,this.getInstanceId())}},normalize(e,t,s){let i=t.map(e=>[this.enhancedNormalizer(e),e]).map(([t,i],a)=>{this.checkDuplication(t),this.verifyNodeShape(t);const{id:n,label:o,children:r,isDefaultExpanded:l}=t,h=e===NO_PARENT_NODE,d=h?0:e.level+1,c=Array.isArray(r)||null===r,u=!c,p=!!t.isDisabled||!this.flat&&!h&&e.isDisabled,f=!!t.isNew,g=this.matchKeys.reduce((e,s)=>({...e,[s]:stringifyOptionPropValue(t[s]).toLocaleLowerCase()}),{}),N=h?g.label:e.nestedSearchLabel+" "+g.label,S=this.$set(this.forest.nodeMap,n,createMap());if(this.$set(S,"id",n),this.$set(S,"label",o),this.$set(S,"level",d),this.$set(S,"ancestors",h?[]:[e].concat(e.ancestors)),this.$set(S,"index",(h?[]:e.index).concat(a)),this.$set(S,"parentNode",e),this.$set(S,"lowerCased",g),this.$set(S,"nestedSearchLabel",N),this.$set(S,"isDisabled",p),this.$set(S,"isNew",f),this.$set(S,"isMatched",!1),this.$set(S,"isHighlighted",!1),this.$set(S,"isBranch",c),this.$set(S,"isLeaf",u),this.$set(S,"isRootNode",h),this.$set(S,"raw",i),c){const e=Array.isArray(r);this.$set(S,"childrenStates",{...createAsyncOptionsStates(),isLoaded:e}),this.$set(S,"isExpanded","boolean"==typeof l?l:d<this.defaultExpandLevel),this.$set(S,"hasMatchedDescendants",!1),this.$set(S,"hasDisabledDescendants",!1),this.$set(S,"isExpandedOnSearch",!1),this.$set(S,"showAllChildrenOnSearch",!1),this.$set(S,"count",{[ALL_CHILDREN]:0,[ALL_DESCENDANTS]:0,[LEAF_CHILDREN]:0,[LEAF_DESCENDANTS]:0}),this.$set(S,"children",e?this.normalize(S,r,s):[]),!0===l&&S.ancestors.forEach(e=>{e.isExpanded=!0}),e||"function"==typeof this.loadOptions?!e&&S.isExpanded&&this.loadChildrenOptions(S):warning(()=>!1,()=>'Unloaded branch node detected. "loadOptions" prop is required to load its children.')}if(S.ancestors.forEach(e=>e.count[ALL_DESCENDANTS]++),u&&S.ancestors.forEach(e=>e.count[LEAF_DESCENDANTS]++),h||(e.count[ALL_CHILDREN]+=1,u&&(e.count[LEAF_CHILDREN]+=1),p&&(e.hasDisabledDescendants=!0)),s&&s[n]){const e=s[n];S.isMatched=e.isMatched,S.showAllChildrenOnSearch=e.showAllChildrenOnSearch,S.isHighlighted=e.isHighlighted,e.isBranch&&S.isBranch&&(S.isExpanded=e.isExpanded,S.isExpandedOnSearch=e.isExpandedOnSearch,e.childrenStates.isLoaded&&!S.childrenStates.isLoaded?S.isExpanded=!1:S.childrenStates={...e.childrenStates})}return S});if(this.branchNodesFirst){const e=i.filter(e=>e.isBranch),t=i.filter(e=>e.isLeaf);i=e.concat(t)}return i},loadRootOptions(){this.callLoadOptionsProp({action:LOAD_ROOT_OPTIONS,isPending:()=>this.rootOptionsStates.isLoading,start:()=>{this.rootOptionsStates.isLoading=!0,this.rootOptionsStates.loadingError=""},succeed:()=>{this.rootOptionsStates.isLoaded=!0,this.$nextTick(()=>{this.resetHighlightedOptionWhenNecessary(!0)})},fail:e=>{this.rootOptionsStates.loadingError=getErrorMessage(e)},end:()=>{this.rootOptionsStates.isLoading=!1}})},loadChildrenOptions(e){const{id:t,raw:s}=e;this.callLoadOptionsProp({action:LOAD_CHILDREN_OPTIONS,args:{parentNode:s},isPending:()=>this.getNode(t).childrenStates.isLoading,start:()=>{this.getNode(t).childrenStates.isLoading=!0,this.getNode(t).childrenStates.loadingError=""},succeed:()=>{this.getNode(t).childrenStates.isLoaded=!0},fail:e=>{this.getNode(t).childrenStates.loadingError=getErrorMessage(e)},end:()=>{this.getNode(t).childrenStates.isLoading=!1}})},callLoadOptionsProp({action:e,args:t,isPending:s,start:i,succeed:a,fail:n,end:o}){if(!this.loadOptions||s())return;i();const r=once((e,t)=>{e?n(e):a(t),o()}),l=this.loadOptions({id:this.getInstanceId(),instanceId:this.getInstanceId(),action:e,...t,callback:r});isPromise(l)&&l.then(()=>{r()},e=>{r(e)}).catch(e=>{console.error(e)})},checkDuplication(e){warning(()=>!(e.id in this.forest.nodeMap&&!this.forest.nodeMap[e.id].isFallbackNode),()=>`Detected duplicate presence of node id ${JSON.stringify(e.id)}. `+`Their labels are "${this.forest.nodeMap[e.id].label}" and "${e.label}" respectively.`)},verifyNodeShape(e){warning(()=>!(void 0===e.children&&!0===e.isBranch),()=>"Are you meant to declare an unloaded branch node? `isBranch: true` is no longer supported, please use `children: null` instead.")},select(e){if(this.disabled||e.isDisabled)return;this.single&&this.clear();const t=this.multiple&&!this.flat?this.forest.checkedStateMap[e.id]===UNCHECKED:!this.isSelected(e);t?this._selectNode(e):this._deselectNode(e),this.buildForestState(),t?this.$emit("select",e.raw,this.getInstanceId()):this.$emit("deselect",e.raw,this.getInstanceId()),this.localSearch.active&&t&&(this.single||this.clearOnSelect)&&this.resetSearchQuery(),this.single&&this.closeOnSelect&&(this.closeMenu(),this.searchable&&(this._blurOnSelect=!0))},clear(){this.hasValue&&(this.single||this.allowClearingDisabled?this.forest.selectedNodeIds=[]:this.forest.selectedNodeIds=this.forest.selectedNodeIds.filter(e=>this.getNode(e).isDisabled),this.buildForestState())},_selectNode(e){if(this.single||this.disableBranchNodes)return this.addValue(e);if(this.flat)return this.addValue(e),void(this.autoSelectAncestors?e.ancestors.forEach(e=>{this.isSelected(e)||e.isDisabled||this.addValue(e)}):this.autoSelectDescendants&&this.traverseDescendantsBFS(e,e=>{this.isSelected(e)||e.isDisabled||this.addValue(e)}));const t=e.isLeaf||!e.hasDisabledDescendants||this.allowSelectingDisabledDescendants;if(t&&this.addValue(e),e.isBranch&&this.traverseDescendantsBFS(e,e=>{e.isDisabled&&!this.allowSelectingDisabledDescendants||this.addValue(e)}),t){let t=e;for(;(t=t.parentNode)!==NO_PARENT_NODE&&t.children.every(this.isSelected);)this.addValue(t)}},_deselectNode(e){if(this.disableBranchNodes)return this.removeValue(e);if(this.flat)return this.removeValue(e),void(this.autoDeselectAncestors?e.ancestors.forEach(e=>{this.isSelected(e)&&!e.isDisabled&&this.removeValue(e)}):this.autoDeselectDescendants&&this.traverseDescendantsBFS(e,e=>{this.isSelected(e)&&!e.isDisabled&&this.removeValue(e)}));let t=!1;if(e.isBranch&&this.traverseDescendantsDFS(e,e=>{e.isDisabled&&!this.allowSelectingDisabledDescendants||(this.removeValue(e),t=!0)}),e.isLeaf||t||0===e.children.length){this.removeValue(e);let t=e;for(;(t=t.parentNode)!==NO_PARENT_NODE&&this.isSelected(t);)this.removeValue(t)}},addValue(e){this.forest.selectedNodeIds.push(e.id),this.forest.selectedNodeMap[e.id]=!0},removeValue(e){removeFromArray(this.forest.selectedNodeIds,e.id),delete this.forest.selectedNodeMap[e.id]},removeLastValue(){if(!this.hasValue)return;if(this.single)return this.clear();const e=getLast(this.internalValue),t=this.getNode(e);this.select(t)},saveMenuScrollPosition(){const e=this.getMenu();e&&(this.menu.lastScrollPosition=e.scrollTop)},restoreMenuScrollPosition(){const e=this.getMenu();e&&(e.scrollTop=this.menu.lastScrollPosition)}},created(){this.verifyProps(),this.resetFlags()},mounted(){this.autoFocus&&this.focusInput(),this.options||this.async||!this.autoLoadRootOptions||this.loadRootOptions(),this.alwaysOpen&&this.openMenu(),this.async&&this.defaultOptions&&this.handleRemoteSearch()},destroyed(){this.toggleClickOutsideEvent(!1)}};
//# sourceMappingURL=/sm/1d4450c78922fb0c704ea87d31d0a172a1aa130cabef7d18cf935b153ced1b1f.map